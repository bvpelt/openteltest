{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\nimport { DEFAULT_EXPORT_MAX_ATTEMPTS, DEFAULT_EXPORT_INITIAL_BACKOFF, DEFAULT_EXPORT_BACKOFF_MULTIPLIER, DEFAULT_EXPORT_MAX_BACKOFF, isExportRetryable, parseRetryAfterToMills } from '../../util';\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(body, url, blobPropertyBag, onSuccess, onError) {\n  if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n    diag.debug('sendBeacon - can send', body);\n    onSuccess();\n  } else {\n    var error = new OTLPExporterError(\"sendBeacon - cannot send \" + body);\n    onError(error);\n  }\n}\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(body, url, headers, exporterTimeout, onSuccess, onError) {\n  var retryTimer;\n  var xhr;\n  var reqIsDestroyed = false;\n  var exporterTimer = setTimeout(function () {\n    clearTimeout(retryTimer);\n    reqIsDestroyed = true;\n    if (xhr.readyState === XMLHttpRequest.DONE) {\n      var err = new OTLPExporterError('Request Timeout');\n      onError(err);\n    } else {\n      xhr.abort();\n    }\n  }, exporterTimeout);\n  var sendWithRetry = function (retries, minDelay) {\n    if (retries === void 0) {\n      retries = DEFAULT_EXPORT_MAX_ATTEMPTS;\n    }\n    if (minDelay === void 0) {\n      minDelay = DEFAULT_EXPORT_INITIAL_BACKOFF;\n    }\n    xhr = new XMLHttpRequest();\n    xhr.open('POST', url);\n    var defaultHeaders = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    };\n    Object.entries(__assign(__assign({}, defaultHeaders), headers)).forEach(function (_a) {\n      var _b = __read(_a, 2),\n        k = _b[0],\n        v = _b[1];\n      xhr.setRequestHeader(k, v);\n    });\n    xhr.send(body);\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === XMLHttpRequest.DONE && reqIsDestroyed === false) {\n        if (xhr.status >= 200 && xhr.status <= 299) {\n          diag.debug('xhr success', body);\n          onSuccess();\n          clearTimeout(exporterTimer);\n          clearTimeout(retryTimer);\n        } else if (xhr.status && isExportRetryable(xhr.status) && retries > 0) {\n          var retryTime = void 0;\n          minDelay = DEFAULT_EXPORT_BACKOFF_MULTIPLIER * minDelay;\n          // retry after interval specified in Retry-After header\n          if (xhr.getResponseHeader('Retry-After')) {\n            retryTime = parseRetryAfterToMills(xhr.getResponseHeader('Retry-After'));\n          } else {\n            // exponential backoff with jitter\n            retryTime = Math.round(Math.random() * (DEFAULT_EXPORT_MAX_BACKOFF - minDelay) + minDelay);\n          }\n          retryTimer = setTimeout(function () {\n            sendWithRetry(retries - 1, minDelay);\n          }, retryTime);\n        } else {\n          var error = new OTLPExporterError(\"Failed to export with XHR (status: \" + xhr.status + \")\", xhr.status);\n          onError(error);\n          clearTimeout(exporterTimer);\n          clearTimeout(retryTimer);\n        }\n      }\n    };\n    xhr.onabort = function () {\n      if (reqIsDestroyed) {\n        var err = new OTLPExporterError('Request Timeout');\n        onError(err);\n      }\n      clearTimeout(exporterTimer);\n      clearTimeout(retryTimer);\n    };\n    xhr.onerror = function () {\n      if (reqIsDestroyed) {\n        var err = new OTLPExporterError('Request Timeout');\n        onError(err);\n      }\n      clearTimeout(exporterTimer);\n      clearTimeout(retryTimer);\n    };\n  };\n  sendWithRetry();\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","diag","OTLPExporterError","DEFAULT_EXPORT_MAX_ATTEMPTS","DEFAULT_EXPORT_INITIAL_BACKOFF","DEFAULT_EXPORT_BACKOFF_MULTIPLIER","DEFAULT_EXPORT_MAX_BACKOFF","isExportRetryable","parseRetryAfterToMills","sendWithBeacon","body","url","blobPropertyBag","onSuccess","onError","navigator","sendBeacon","Blob","debug","sendWithXhr","headers","exporterTimeout","retryTimer","xhr","reqIsDestroyed","exporterTimer","setTimeout","clearTimeout","readyState","XMLHttpRequest","DONE","err","abort","sendWithRetry","retries","minDelay","open","defaultHeaders","Accept","entries","forEach","_a","_b","k","v","setRequestHeader","send","onreadystatechange","status","retryTime","getResponseHeader","Math","round","random","onabort","onerror"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/otlp-exporter-base/build/esm/platform/browser/util.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { diag } from '@opentelemetry/api';\nimport { OTLPExporterError } from '../../types';\nimport { DEFAULT_EXPORT_MAX_ATTEMPTS, DEFAULT_EXPORT_INITIAL_BACKOFF, DEFAULT_EXPORT_BACKOFF_MULTIPLIER, DEFAULT_EXPORT_MAX_BACKOFF, isExportRetryable, parseRetryAfterToMills, } from '../../util';\n/**\n * Send metrics/spans using browser navigator.sendBeacon\n * @param body\n * @param url\n * @param blobPropertyBag\n * @param onSuccess\n * @param onError\n */\nexport function sendWithBeacon(body, url, blobPropertyBag, onSuccess, onError) {\n    if (navigator.sendBeacon(url, new Blob([body], blobPropertyBag))) {\n        diag.debug('sendBeacon - can send', body);\n        onSuccess();\n    }\n    else {\n        var error = new OTLPExporterError(\"sendBeacon - cannot send \" + body);\n        onError(error);\n    }\n}\n/**\n * function to send metrics/spans using browser XMLHttpRequest\n *     used when navigator.sendBeacon is not available\n * @param body\n * @param url\n * @param headers\n * @param onSuccess\n * @param onError\n */\nexport function sendWithXhr(body, url, headers, exporterTimeout, onSuccess, onError) {\n    var retryTimer;\n    var xhr;\n    var reqIsDestroyed = false;\n    var exporterTimer = setTimeout(function () {\n        clearTimeout(retryTimer);\n        reqIsDestroyed = true;\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n            var err = new OTLPExporterError('Request Timeout');\n            onError(err);\n        }\n        else {\n            xhr.abort();\n        }\n    }, exporterTimeout);\n    var sendWithRetry = function (retries, minDelay) {\n        if (retries === void 0) { retries = DEFAULT_EXPORT_MAX_ATTEMPTS; }\n        if (minDelay === void 0) { minDelay = DEFAULT_EXPORT_INITIAL_BACKOFF; }\n        xhr = new XMLHttpRequest();\n        xhr.open('POST', url);\n        var defaultHeaders = {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        };\n        Object.entries(__assign(__assign({}, defaultHeaders), headers)).forEach(function (_a) {\n            var _b = __read(_a, 2), k = _b[0], v = _b[1];\n            xhr.setRequestHeader(k, v);\n        });\n        xhr.send(body);\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === XMLHttpRequest.DONE && reqIsDestroyed === false) {\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    diag.debug('xhr success', body);\n                    onSuccess();\n                    clearTimeout(exporterTimer);\n                    clearTimeout(retryTimer);\n                }\n                else if (xhr.status && isExportRetryable(xhr.status) && retries > 0) {\n                    var retryTime = void 0;\n                    minDelay = DEFAULT_EXPORT_BACKOFF_MULTIPLIER * minDelay;\n                    // retry after interval specified in Retry-After header\n                    if (xhr.getResponseHeader('Retry-After')) {\n                        retryTime = parseRetryAfterToMills(xhr.getResponseHeader('Retry-After'));\n                    }\n                    else {\n                        // exponential backoff with jitter\n                        retryTime = Math.round(Math.random() * (DEFAULT_EXPORT_MAX_BACKOFF - minDelay) + minDelay);\n                    }\n                    retryTimer = setTimeout(function () {\n                        sendWithRetry(retries - 1, minDelay);\n                    }, retryTime);\n                }\n                else {\n                    var error = new OTLPExporterError(\"Failed to export with XHR (status: \" + xhr.status + \")\", xhr.status);\n                    onError(error);\n                    clearTimeout(exporterTimer);\n                    clearTimeout(retryTimer);\n                }\n            }\n        };\n        xhr.onabort = function () {\n            if (reqIsDestroyed) {\n                var err = new OTLPExporterError('Request Timeout');\n                onError(err);\n            }\n            clearTimeout(exporterTimer);\n            clearTimeout(retryTimer);\n        };\n        xhr.onerror = function () {\n            if (reqIsDestroyed) {\n                var err = new OTLPExporterError('Request Timeout');\n                onError(err);\n            }\n            clearTimeout(exporterTimer);\n            clearTimeout(retryTimer);\n        };\n    };\n    sendWithRetry();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}