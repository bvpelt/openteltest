{"ast":null,"code":"import { ValueType } from '@opentelemetry/api';\nimport { AggregationTemporality, DataPointType } from '@opentelemetry/sdk-metrics';\nimport { toAttributes } from '../common/internal';\nimport { getOtlpEncoder } from '../common';\nexport function toResourceMetrics(resourceMetrics, options) {\n  var encoder = getOtlpEncoder(options);\n  return {\n    resource: {\n      attributes: toAttributes(resourceMetrics.resource.attributes),\n      droppedAttributesCount: 0\n    },\n    schemaUrl: undefined,\n    scopeMetrics: toScopeMetrics(resourceMetrics.scopeMetrics, encoder)\n  };\n}\nexport function toScopeMetrics(scopeMetrics, encoder) {\n  return Array.from(scopeMetrics.map(function (metrics) {\n    return {\n      scope: {\n        name: metrics.scope.name,\n        version: metrics.scope.version\n      },\n      metrics: metrics.metrics.map(function (metricData) {\n        return toMetric(metricData, encoder);\n      }),\n      schemaUrl: metrics.scope.schemaUrl\n    };\n  }));\n}\nexport function toMetric(metricData, encoder) {\n  var out = {\n    name: metricData.descriptor.name,\n    description: metricData.descriptor.description,\n    unit: metricData.descriptor.unit\n  };\n  var aggregationTemporality = toAggregationTemporality(metricData.aggregationTemporality);\n  switch (metricData.dataPointType) {\n    case DataPointType.SUM:\n      out.sum = {\n        aggregationTemporality: aggregationTemporality,\n        isMonotonic: metricData.isMonotonic,\n        dataPoints: toSingularDataPoints(metricData, encoder)\n      };\n      break;\n    case DataPointType.GAUGE:\n      out.gauge = {\n        dataPoints: toSingularDataPoints(metricData, encoder)\n      };\n      break;\n    case DataPointType.HISTOGRAM:\n      out.histogram = {\n        aggregationTemporality: aggregationTemporality,\n        dataPoints: toHistogramDataPoints(metricData, encoder)\n      };\n      break;\n    case DataPointType.EXPONENTIAL_HISTOGRAM:\n      out.exponentialHistogram = {\n        aggregationTemporality: aggregationTemporality,\n        dataPoints: toExponentialHistogramDataPoints(metricData, encoder)\n      };\n      break;\n  }\n  return out;\n}\nfunction toSingularDataPoint(dataPoint, valueType, encoder) {\n  var out = {\n    attributes: toAttributes(dataPoint.attributes),\n    startTimeUnixNano: encoder.encodeHrTime(dataPoint.startTime),\n    timeUnixNano: encoder.encodeHrTime(dataPoint.endTime)\n  };\n  switch (valueType) {\n    case ValueType.INT:\n      out.asInt = dataPoint.value;\n      break;\n    case ValueType.DOUBLE:\n      out.asDouble = dataPoint.value;\n      break;\n  }\n  return out;\n}\nfunction toSingularDataPoints(metricData, encoder) {\n  return metricData.dataPoints.map(function (dataPoint) {\n    return toSingularDataPoint(dataPoint, metricData.descriptor.valueType, encoder);\n  });\n}\nfunction toHistogramDataPoints(metricData, encoder) {\n  return metricData.dataPoints.map(function (dataPoint) {\n    var histogram = dataPoint.value;\n    return {\n      attributes: toAttributes(dataPoint.attributes),\n      bucketCounts: histogram.buckets.counts,\n      explicitBounds: histogram.buckets.boundaries,\n      count: histogram.count,\n      sum: histogram.sum,\n      min: histogram.min,\n      max: histogram.max,\n      startTimeUnixNano: encoder.encodeHrTime(dataPoint.startTime),\n      timeUnixNano: encoder.encodeHrTime(dataPoint.endTime)\n    };\n  });\n}\nfunction toExponentialHistogramDataPoints(metricData, encoder) {\n  return metricData.dataPoints.map(function (dataPoint) {\n    var histogram = dataPoint.value;\n    return {\n      attributes: toAttributes(dataPoint.attributes),\n      count: histogram.count,\n      min: histogram.min,\n      max: histogram.max,\n      sum: histogram.sum,\n      positive: {\n        offset: histogram.positive.offset,\n        bucketCounts: histogram.positive.bucketCounts\n      },\n      negative: {\n        offset: histogram.negative.offset,\n        bucketCounts: histogram.negative.bucketCounts\n      },\n      scale: histogram.scale,\n      zeroCount: histogram.zeroCount,\n      startTimeUnixNano: encoder.encodeHrTime(dataPoint.startTime),\n      timeUnixNano: encoder.encodeHrTime(dataPoint.endTime)\n    };\n  });\n}\nfunction toAggregationTemporality(temporality) {\n  switch (temporality) {\n    case AggregationTemporality.DELTA:\n      return 1 /* AGGREGATION_TEMPORALITY_DELTA */;\n    case AggregationTemporality.CUMULATIVE:\n      return 2 /* AGGREGATION_TEMPORALITY_CUMULATIVE */;\n  }\n}","map":{"version":3,"names":["ValueType","AggregationTemporality","DataPointType","toAttributes","getOtlpEncoder","toResourceMetrics","resourceMetrics","options","encoder","resource","attributes","droppedAttributesCount","schemaUrl","undefined","scopeMetrics","toScopeMetrics","Array","from","map","metrics","scope","name","version","metricData","toMetric","out","descriptor","description","unit","aggregationTemporality","toAggregationTemporality","dataPointType","SUM","sum","isMonotonic","dataPoints","toSingularDataPoints","GAUGE","gauge","HISTOGRAM","histogram","toHistogramDataPoints","EXPONENTIAL_HISTOGRAM","exponentialHistogram","toExponentialHistogramDataPoints","toSingularDataPoint","dataPoint","valueType","startTimeUnixNano","encodeHrTime","startTime","timeUnixNano","endTime","INT","asInt","value","DOUBLE","asDouble","bucketCounts","buckets","counts","explicitBounds","boundaries","count","min","max","positive","offset","negative","scale","zeroCount","temporality","DELTA","CUMULATIVE"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/otlp-transformer/build/esm/metrics/internal.js"],"sourcesContent":["import { ValueType } from '@opentelemetry/api';\nimport { AggregationTemporality, DataPointType, } from '@opentelemetry/sdk-metrics';\nimport { toAttributes } from '../common/internal';\nimport { getOtlpEncoder } from '../common';\nexport function toResourceMetrics(resourceMetrics, options) {\n    var encoder = getOtlpEncoder(options);\n    return {\n        resource: {\n            attributes: toAttributes(resourceMetrics.resource.attributes),\n            droppedAttributesCount: 0,\n        },\n        schemaUrl: undefined,\n        scopeMetrics: toScopeMetrics(resourceMetrics.scopeMetrics, encoder),\n    };\n}\nexport function toScopeMetrics(scopeMetrics, encoder) {\n    return Array.from(scopeMetrics.map(function (metrics) { return ({\n        scope: {\n            name: metrics.scope.name,\n            version: metrics.scope.version,\n        },\n        metrics: metrics.metrics.map(function (metricData) { return toMetric(metricData, encoder); }),\n        schemaUrl: metrics.scope.schemaUrl,\n    }); }));\n}\nexport function toMetric(metricData, encoder) {\n    var out = {\n        name: metricData.descriptor.name,\n        description: metricData.descriptor.description,\n        unit: metricData.descriptor.unit,\n    };\n    var aggregationTemporality = toAggregationTemporality(metricData.aggregationTemporality);\n    switch (metricData.dataPointType) {\n        case DataPointType.SUM:\n            out.sum = {\n                aggregationTemporality: aggregationTemporality,\n                isMonotonic: metricData.isMonotonic,\n                dataPoints: toSingularDataPoints(metricData, encoder),\n            };\n            break;\n        case DataPointType.GAUGE:\n            out.gauge = {\n                dataPoints: toSingularDataPoints(metricData, encoder),\n            };\n            break;\n        case DataPointType.HISTOGRAM:\n            out.histogram = {\n                aggregationTemporality: aggregationTemporality,\n                dataPoints: toHistogramDataPoints(metricData, encoder),\n            };\n            break;\n        case DataPointType.EXPONENTIAL_HISTOGRAM:\n            out.exponentialHistogram = {\n                aggregationTemporality: aggregationTemporality,\n                dataPoints: toExponentialHistogramDataPoints(metricData, encoder),\n            };\n            break;\n    }\n    return out;\n}\nfunction toSingularDataPoint(dataPoint, valueType, encoder) {\n    var out = {\n        attributes: toAttributes(dataPoint.attributes),\n        startTimeUnixNano: encoder.encodeHrTime(dataPoint.startTime),\n        timeUnixNano: encoder.encodeHrTime(dataPoint.endTime),\n    };\n    switch (valueType) {\n        case ValueType.INT:\n            out.asInt = dataPoint.value;\n            break;\n        case ValueType.DOUBLE:\n            out.asDouble = dataPoint.value;\n            break;\n    }\n    return out;\n}\nfunction toSingularDataPoints(metricData, encoder) {\n    return metricData.dataPoints.map(function (dataPoint) {\n        return toSingularDataPoint(dataPoint, metricData.descriptor.valueType, encoder);\n    });\n}\nfunction toHistogramDataPoints(metricData, encoder) {\n    return metricData.dataPoints.map(function (dataPoint) {\n        var histogram = dataPoint.value;\n        return {\n            attributes: toAttributes(dataPoint.attributes),\n            bucketCounts: histogram.buckets.counts,\n            explicitBounds: histogram.buckets.boundaries,\n            count: histogram.count,\n            sum: histogram.sum,\n            min: histogram.min,\n            max: histogram.max,\n            startTimeUnixNano: encoder.encodeHrTime(dataPoint.startTime),\n            timeUnixNano: encoder.encodeHrTime(dataPoint.endTime),\n        };\n    });\n}\nfunction toExponentialHistogramDataPoints(metricData, encoder) {\n    return metricData.dataPoints.map(function (dataPoint) {\n        var histogram = dataPoint.value;\n        return {\n            attributes: toAttributes(dataPoint.attributes),\n            count: histogram.count,\n            min: histogram.min,\n            max: histogram.max,\n            sum: histogram.sum,\n            positive: {\n                offset: histogram.positive.offset,\n                bucketCounts: histogram.positive.bucketCounts,\n            },\n            negative: {\n                offset: histogram.negative.offset,\n                bucketCounts: histogram.negative.bucketCounts,\n            },\n            scale: histogram.scale,\n            zeroCount: histogram.zeroCount,\n            startTimeUnixNano: encoder.encodeHrTime(dataPoint.startTime),\n            timeUnixNano: encoder.encodeHrTime(dataPoint.endTime),\n        };\n    });\n}\nfunction toAggregationTemporality(temporality) {\n    switch (temporality) {\n        case AggregationTemporality.DELTA:\n            return 1 /* AGGREGATION_TEMPORALITY_DELTA */;\n        case AggregationTemporality.CUMULATIVE:\n            return 2 /* AGGREGATION_TEMPORALITY_CUMULATIVE */;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}