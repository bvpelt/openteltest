{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar TYPE = require('./TYPE');\nvar bufrw = require('bufrw');\nvar tmap = require('./tmap');\nvar tlist = require('./tlist');\nvar tstruct = require('./tstruct');\nmodule.exports.TYPE = TYPE;\nvar ttypes = Object.create(null);\nttypes[TYPE.BOOL] = bufrw.Int8;\nttypes[TYPE.BYTE] = bufrw.Int8;\nttypes[TYPE.DOUBLE] = bufrw.DoubleBE;\nttypes[TYPE.I16] = bufrw.Int16BE;\nttypes[TYPE.I32] = bufrw.Int32BE;\nttypes[TYPE.I64] = bufrw.FixedWidth(8);\nttypes[TYPE.STRING] = bufrw.VariableBuffer(bufrw.Int32BE);\nttypes[TYPE.MAP] = tmap.TMapRW({\n  ttypes: ttypes\n});\nttypes[TYPE.LIST] = tlist.TListRW({\n  ttypes: ttypes\n});\nttypes[TYPE.SET] = tlist.TListRW({\n  ttypes: ttypes\n});\nttypes[TYPE.STRUCT] = tstruct.TStructRW({\n  ttypes: ttypes\n});\nmodule.exports.TPair = tmap.TPair;\nmodule.exports.TMap = tmap.TMap;\nmodule.exports.TMapRW = ttypes[TYPE.MAP];\nmodule.exports.TList = tlist.TList;\nmodule.exports.TListRW = ttypes[TYPE.LIST];\nmodule.exports.TField = tstruct.TField;\nmodule.exports.TStruct = tstruct.TStruct;\nmodule.exports.TStructRW = ttypes[TYPE.STRUCT];\nmodule.exports.BinaryRW = require('./binary').BinaryRW;\nmodule.exports.ThriftBinary = require('./binary').ThriftBinary;\nmodule.exports.BooleanRW = require('./boolean').BooleanRW;\nmodule.exports.ThriftBoolean = require('./boolean').ThriftBoolean;\nmodule.exports.ByteRW = require('./byte').ByteRW;\nmodule.exports.ThriftByte = require('./byte').ThriftByte;\nmodule.exports.DoubleRW = require('./double').DoubleRW;\nmodule.exports.ThriftDouble = require('./double').ThriftDouble;\nmodule.exports.I8RW = require('./i8').I8RW;\nmodule.exports.ThriftI8 = require('./i8').ThriftI8;\nmodule.exports.I16RW = require('./i16').I16RW;\nmodule.exports.ThriftI16 = require('./i16').ThriftI16;\nmodule.exports.I32RW = require('./i32').I32RW;\nmodule.exports.ThriftI32 = require('./i32').ThriftI32;\nmodule.exports.I64RW = require('./i64').I64RW;\nmodule.exports.ThriftI64 = require('./i64').ThriftI64;\nmodule.exports.ListRW = require('./list').ListRW;\nmodule.exports.ThriftList = require('./list').ThriftList;\nmodule.exports.ThriftSet = require('./set').ThriftSet;\nmodule.exports.MapObjectRW = require('./map-object').MapObjectRW;\nmodule.exports.MapEntriesRW = require('./map-entries').MapEntriesRW;\nmodule.exports.StringRW = require('./string').StringRW;\nmodule.exports.ThriftString = require('./string').ThriftString;\nmodule.exports.VoidRW = require('./void').VoidRW;\nmodule.exports.ThriftVoid = require('./void').ThriftVoid;\nmodule.exports.Thrift = require('./thrift').Thrift;","map":{"version":3,"names":["TYPE","require","bufrw","tmap","tlist","tstruct","module","exports","ttypes","Object","create","BOOL","Int8","BYTE","DOUBLE","DoubleBE","I16","Int16BE","I32","Int32BE","I64","FixedWidth","STRING","VariableBuffer","MAP","TMapRW","LIST","TListRW","SET","STRUCT","TStructRW","TPair","TMap","TList","TField","TStruct","BinaryRW","ThriftBinary","BooleanRW","ThriftBoolean","ByteRW","ThriftByte","DoubleRW","ThriftDouble","I8RW","ThriftI8","I16RW","ThriftI16","I32RW","ThriftI32","I64RW","ThriftI64","ListRW","ThriftList","ThriftSet","MapObjectRW","MapEntriesRW","StringRW","ThriftString","VoidRW","ThriftVoid","Thrift"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/index.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar TYPE = require('./TYPE');\nvar bufrw = require('bufrw');\nvar tmap = require('./tmap');\nvar tlist = require('./tlist');\nvar tstruct = require('./tstruct');\n\nmodule.exports.TYPE = TYPE;\n\nvar ttypes = Object.create(null);\nttypes[TYPE.BOOL] = bufrw.Int8;\nttypes[TYPE.BYTE] = bufrw.Int8;\nttypes[TYPE.DOUBLE] = bufrw.DoubleBE;\nttypes[TYPE.I16] = bufrw.Int16BE;\nttypes[TYPE.I32] = bufrw.Int32BE;\nttypes[TYPE.I64] = bufrw.FixedWidth(8);\nttypes[TYPE.STRING] = bufrw.VariableBuffer(bufrw.Int32BE);\nttypes[TYPE.MAP] = tmap.TMapRW({ttypes: ttypes});\nttypes[TYPE.LIST] = tlist.TListRW({ttypes: ttypes});\nttypes[TYPE.SET] = tlist.TListRW({ttypes: ttypes});\nttypes[TYPE.STRUCT] = tstruct.TStructRW({ttypes: ttypes});\n\nmodule.exports.TPair = tmap.TPair;\nmodule.exports.TMap = tmap.TMap;\nmodule.exports.TMapRW = ttypes[TYPE.MAP];\n\nmodule.exports.TList = tlist.TList;\nmodule.exports.TListRW = ttypes[TYPE.LIST];\n\nmodule.exports.TField = tstruct.TField;\nmodule.exports.TStruct = tstruct.TStruct;\nmodule.exports.TStructRW = ttypes[TYPE.STRUCT];\n\nmodule.exports.BinaryRW = require('./binary').BinaryRW;\nmodule.exports.ThriftBinary = require('./binary').ThriftBinary;\n\nmodule.exports.BooleanRW = require('./boolean').BooleanRW;\nmodule.exports.ThriftBoolean = require('./boolean').ThriftBoolean;\n\nmodule.exports.ByteRW = require('./byte').ByteRW;\nmodule.exports.ThriftByte = require('./byte').ThriftByte;\n\nmodule.exports.DoubleRW = require('./double').DoubleRW;\nmodule.exports.ThriftDouble = require('./double').ThriftDouble;\n\nmodule.exports.I8RW = require('./i8').I8RW;\nmodule.exports.ThriftI8 = require('./i8').ThriftI8;\n\nmodule.exports.I16RW = require('./i16').I16RW;\nmodule.exports.ThriftI16 = require('./i16').ThriftI16;\n\nmodule.exports.I32RW = require('./i32').I32RW;\nmodule.exports.ThriftI32 = require('./i32').ThriftI32;\n\nmodule.exports.I64RW = require('./i64').I64RW;\nmodule.exports.ThriftI64 = require('./i64').ThriftI64;\n\nmodule.exports.ListRW = require('./list').ListRW;\nmodule.exports.ThriftList = require('./list').ThriftList;\nmodule.exports.ThriftSet = require('./set').ThriftSet;\n\nmodule.exports.MapObjectRW = require('./map-object').MapObjectRW;\nmodule.exports.MapEntriesRW = require('./map-entries').MapEntriesRW;\n\nmodule.exports.StringRW = require('./string').StringRW;\nmodule.exports.ThriftString = require('./string').ThriftString;\n\nmodule.exports.VoidRW = require('./void').VoidRW;\nmodule.exports.ThriftVoid = require('./void').ThriftVoid;\n\nmodule.exports.Thrift = require('./thrift').Thrift;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAC5B,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAII,OAAO,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAElCK,MAAM,CAACC,OAAO,CAACP,IAAI,GAAGA,IAAI;AAE1B,IAAIQ,MAAM,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;AAChCF,MAAM,CAACR,IAAI,CAACW,IAAI,CAAC,GAAGT,KAAK,CAACU,IAAI;AAC9BJ,MAAM,CAACR,IAAI,CAACa,IAAI,CAAC,GAAGX,KAAK,CAACU,IAAI;AAC9BJ,MAAM,CAACR,IAAI,CAACc,MAAM,CAAC,GAAGZ,KAAK,CAACa,QAAQ;AACpCP,MAAM,CAACR,IAAI,CAACgB,GAAG,CAAC,GAAGd,KAAK,CAACe,OAAO;AAChCT,MAAM,CAACR,IAAI,CAACkB,GAAG,CAAC,GAAGhB,KAAK,CAACiB,OAAO;AAChCX,MAAM,CAACR,IAAI,CAACoB,GAAG,CAAC,GAAGlB,KAAK,CAACmB,UAAU,CAAC,CAAC,CAAC;AACtCb,MAAM,CAACR,IAAI,CAACsB,MAAM,CAAC,GAAGpB,KAAK,CAACqB,cAAc,CAACrB,KAAK,CAACiB,OAAO,CAAC;AACzDX,MAAM,CAACR,IAAI,CAACwB,GAAG,CAAC,GAAGrB,IAAI,CAACsB,MAAM,CAAC;EAACjB,MAAM,EAAEA;AAAM,CAAC,CAAC;AAChDA,MAAM,CAACR,IAAI,CAAC0B,IAAI,CAAC,GAAGtB,KAAK,CAACuB,OAAO,CAAC;EAACnB,MAAM,EAAEA;AAAM,CAAC,CAAC;AACnDA,MAAM,CAACR,IAAI,CAAC4B,GAAG,CAAC,GAAGxB,KAAK,CAACuB,OAAO,CAAC;EAACnB,MAAM,EAAEA;AAAM,CAAC,CAAC;AAClDA,MAAM,CAACR,IAAI,CAAC6B,MAAM,CAAC,GAAGxB,OAAO,CAACyB,SAAS,CAAC;EAACtB,MAAM,EAAEA;AAAM,CAAC,CAAC;AAEzDF,MAAM,CAACC,OAAO,CAACwB,KAAK,GAAG5B,IAAI,CAAC4B,KAAK;AACjCzB,MAAM,CAACC,OAAO,CAACyB,IAAI,GAAG7B,IAAI,CAAC6B,IAAI;AAC/B1B,MAAM,CAACC,OAAO,CAACkB,MAAM,GAAGjB,MAAM,CAACR,IAAI,CAACwB,GAAG,CAAC;AAExClB,MAAM,CAACC,OAAO,CAAC0B,KAAK,GAAG7B,KAAK,CAAC6B,KAAK;AAClC3B,MAAM,CAACC,OAAO,CAACoB,OAAO,GAAGnB,MAAM,CAACR,IAAI,CAAC0B,IAAI,CAAC;AAE1CpB,MAAM,CAACC,OAAO,CAAC2B,MAAM,GAAG7B,OAAO,CAAC6B,MAAM;AACtC5B,MAAM,CAACC,OAAO,CAAC4B,OAAO,GAAG9B,OAAO,CAAC8B,OAAO;AACxC7B,MAAM,CAACC,OAAO,CAACuB,SAAS,GAAGtB,MAAM,CAACR,IAAI,CAAC6B,MAAM,CAAC;AAE9CvB,MAAM,CAACC,OAAO,CAAC6B,QAAQ,GAAGnC,OAAO,CAAC,UAAU,CAAC,CAACmC,QAAQ;AACtD9B,MAAM,CAACC,OAAO,CAAC8B,YAAY,GAAGpC,OAAO,CAAC,UAAU,CAAC,CAACoC,YAAY;AAE9D/B,MAAM,CAACC,OAAO,CAAC+B,SAAS,GAAGrC,OAAO,CAAC,WAAW,CAAC,CAACqC,SAAS;AACzDhC,MAAM,CAACC,OAAO,CAACgC,aAAa,GAAGtC,OAAO,CAAC,WAAW,CAAC,CAACsC,aAAa;AAEjEjC,MAAM,CAACC,OAAO,CAACiC,MAAM,GAAGvC,OAAO,CAAC,QAAQ,CAAC,CAACuC,MAAM;AAChDlC,MAAM,CAACC,OAAO,CAACkC,UAAU,GAAGxC,OAAO,CAAC,QAAQ,CAAC,CAACwC,UAAU;AAExDnC,MAAM,CAACC,OAAO,CAACmC,QAAQ,GAAGzC,OAAO,CAAC,UAAU,CAAC,CAACyC,QAAQ;AACtDpC,MAAM,CAACC,OAAO,CAACoC,YAAY,GAAG1C,OAAO,CAAC,UAAU,CAAC,CAAC0C,YAAY;AAE9DrC,MAAM,CAACC,OAAO,CAACqC,IAAI,GAAG3C,OAAO,CAAC,MAAM,CAAC,CAAC2C,IAAI;AAC1CtC,MAAM,CAACC,OAAO,CAACsC,QAAQ,GAAG5C,OAAO,CAAC,MAAM,CAAC,CAAC4C,QAAQ;AAElDvC,MAAM,CAACC,OAAO,CAACuC,KAAK,GAAG7C,OAAO,CAAC,OAAO,CAAC,CAAC6C,KAAK;AAC7CxC,MAAM,CAACC,OAAO,CAACwC,SAAS,GAAG9C,OAAO,CAAC,OAAO,CAAC,CAAC8C,SAAS;AAErDzC,MAAM,CAACC,OAAO,CAACyC,KAAK,GAAG/C,OAAO,CAAC,OAAO,CAAC,CAAC+C,KAAK;AAC7C1C,MAAM,CAACC,OAAO,CAAC0C,SAAS,GAAGhD,OAAO,CAAC,OAAO,CAAC,CAACgD,SAAS;AAErD3C,MAAM,CAACC,OAAO,CAAC2C,KAAK,GAAGjD,OAAO,CAAC,OAAO,CAAC,CAACiD,KAAK;AAC7C5C,MAAM,CAACC,OAAO,CAAC4C,SAAS,GAAGlD,OAAO,CAAC,OAAO,CAAC,CAACkD,SAAS;AAErD7C,MAAM,CAACC,OAAO,CAAC6C,MAAM,GAAGnD,OAAO,CAAC,QAAQ,CAAC,CAACmD,MAAM;AAChD9C,MAAM,CAACC,OAAO,CAAC8C,UAAU,GAAGpD,OAAO,CAAC,QAAQ,CAAC,CAACoD,UAAU;AACxD/C,MAAM,CAACC,OAAO,CAAC+C,SAAS,GAAGrD,OAAO,CAAC,OAAO,CAAC,CAACqD,SAAS;AAErDhD,MAAM,CAACC,OAAO,CAACgD,WAAW,GAAGtD,OAAO,CAAC,cAAc,CAAC,CAACsD,WAAW;AAChEjD,MAAM,CAACC,OAAO,CAACiD,YAAY,GAAGvD,OAAO,CAAC,eAAe,CAAC,CAACuD,YAAY;AAEnElD,MAAM,CAACC,OAAO,CAACkD,QAAQ,GAAGxD,OAAO,CAAC,UAAU,CAAC,CAACwD,QAAQ;AACtDnD,MAAM,CAACC,OAAO,CAACmD,YAAY,GAAGzD,OAAO,CAAC,UAAU,CAAC,CAACyD,YAAY;AAE9DpD,MAAM,CAACC,OAAO,CAACoD,MAAM,GAAG1D,OAAO,CAAC,QAAQ,CAAC,CAAC0D,MAAM;AAChDrD,MAAM,CAACC,OAAO,CAACqD,UAAU,GAAG3D,OAAO,CAAC,QAAQ,CAAC,CAAC2D,UAAU;AAExDtD,MAAM,CAACC,OAAO,CAACsD,MAAM,GAAG5D,OAAO,CAAC,UAAU,CAAC,CAAC4D,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}