{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar inherits = require('util').inherits;\nvar WriteResult = require('./base').WriteResult;\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\nfunction AtomRW(width, readAtomFrom, writeAtomInto) {\n  if (!(this instanceof AtomRW)) {\n    return new AtomRW(width, readAtomFrom, writeAtomInto);\n  }\n  this.width = width;\n  this.readAtomFrom = readAtomFrom;\n  this.writeAtomInto = writeAtomInto;\n  BufferRW.call(this);\n}\ninherits(AtomRW, BufferRW);\nAtomRW.prototype.poolByteLength = function byteLength(destResult) {\n  return destResult.reset(null, this.width);\n};\nAtomRW.prototype.poolReadFrom = function readFrom(destResult, buffer, offset) {\n  var remain = buffer.length - offset;\n  if (remain < this.width) {\n    return ReadResult.poolShortError(destResult, this.width, remain, offset);\n  }\n  return this.readAtomFrom(destResult, buffer, offset);\n};\nAtomRW.prototype.poolWriteInto = function writeInto(destResult, value, buffer, offset) {\n  var remain = buffer.length - offset;\n  // istanbul ignore next\n  if (remain < this.width) {\n    WriteResult.poolShortError(destResult, this.width, remain, offset);\n  }\n  return this.writeAtomInto(destResult, value, buffer, offset);\n};\n\n// jshint maxparams:5\nfunction IntegerRW(width, min, max, readAtomFrom, writeAtomInto) {\n  if (!(this instanceof IntegerRW)) {\n    return new IntegerRW(width, min, max, readAtomFrom, writeAtomInto);\n  }\n  AtomRW.call(this, width, readAtomFrom, writeAtomInto);\n  this.min = min;\n  this.max = max;\n}\ninherits(IntegerRW, AtomRW);\nIntegerRW.prototype.poolWriteInto = function poolWriteInto(destResult, value, buffer, offset) {\n  if (typeof value !== 'number') {\n    return destResult.reset(errors.expected(value, 'a number'));\n  }\n  if (value < this.min || value > this.max) {\n    return destResult.reset(errors.RangeError({\n      value: value,\n      min: this.min,\n      max: this.max\n    }), offset);\n  }\n  var remain = buffer.length - offset;\n  if (remain < this.width) {\n    return WriteResult.poolShortError(destResult, this.width, remain, offset);\n  }\n  return this.writeAtomInto(destResult, value, buffer, offset);\n};\nvar Int8 = IntegerRW(1, -0x80, 0x7f, function readInt8From(destResult, buffer, offset) {\n  var value = buffer.readInt8(offset, true);\n  return destResult.reset(null, offset + 1, value);\n}, function writeInt8Into(destResult, value, buffer, offset) {\n  buffer.writeInt8(value, offset, true);\n  return destResult.reset(null, offset + 1);\n});\nvar Int16BE = IntegerRW(2, -0x8000, 0x7fff, function readInt16BEFrom(destResult, buffer, offset) {\n  var value = buffer.readInt16BE(offset, true);\n  return destResult.reset(null, offset + 2, value);\n}, function writeInt16BEInto(destResult, value, buffer, offset) {\n  buffer.writeInt16BE(value, offset, true);\n  return destResult.reset(null, offset + 2);\n});\nvar Int32BE = IntegerRW(4, -0x80000000, 0x7fffffff, function readInt32BEFrom(destResult, buffer, offset) {\n  var value = buffer.readInt32BE(offset, true);\n  return destResult.reset(null, offset + 4, value);\n}, function writeInt32BEInto(destResult, value, buffer, offset) {\n  buffer.writeInt32BE(value, offset, true);\n  return destResult.reset(null, offset + 4);\n});\nvar Int16LE = IntegerRW(2, -0x8000, 0x7fff, function readInt16LEFrom(destResult, buffer, offset) {\n  var value = buffer.readInt16LE(offset, true);\n  return destResult.reset(null, offset + 2, value);\n}, function writeInt16LEInto(destResult, value, buffer, offset) {\n  buffer.writeInt16LE(value, offset, true);\n  return destResult.reset(null, offset + 2);\n});\nvar Int32LE = IntegerRW(4, -0x80000000, 0x7fffffff, function readInt32LEFrom(destResult, buffer, offset) {\n  var value = buffer.readInt32LE(offset, true);\n  return destResult.reset(null, offset + 4, value);\n}, function writeInt32LEInto(destResult, value, buffer, offset) {\n  buffer.writeInt32LE(value, offset, true);\n  return destResult.reset(null, offset + 4);\n});\nvar UInt8 = IntegerRW(1, 0, 0xff, function readUInt8From(destResult, buffer, offset) {\n  var value = buffer.readUInt8(offset, true);\n  return destResult.reset(null, offset + 1, value);\n}, function writeUInt8Into(destResult, value, buffer, offset) {\n  buffer.writeUInt8(value, offset, true);\n  return destResult.reset(null, offset + 1);\n});\nvar UInt16BE = IntegerRW(2, 0, 0xffff, function readUInt16BEFrom(destResult, buffer, offset) {\n  var value = buffer.readUInt16BE(offset, true);\n  return destResult.reset(null, offset + 2, value);\n}, function writeUInt16BEInto(destResult, value, buffer, offset) {\n  buffer.writeUInt16BE(value, offset, true);\n  return destResult.reset(null, offset + 2);\n});\nvar UInt32BE = IntegerRW(4, 0, 0xffffffff, function readUInt32BEFrom(destResult, buffer, offset) {\n  var value = buffer.readUInt32BE(offset, true);\n  return destResult.reset(null, offset + 4, value);\n}, function writeUInt32BEInto(destResult, value, buffer, offset) {\n  buffer.writeUInt32BE(value, offset, true);\n  return destResult.reset(null, offset + 4);\n});\nvar UInt16LE = IntegerRW(2, 0, 0xffff, function readUInt16LEFrom(destResult, buffer, offset) {\n  var value = buffer.readUInt16LE(offset, true);\n  return destResult.reset(null, offset + 2, value);\n}, function writeUInt16LEInto(destResult, value, buffer, offset) {\n  buffer.writeUInt16LE(value, offset, true);\n  return destResult.reset(null, offset + 2);\n});\nvar UInt32LE = IntegerRW(4, 0, 0xffffffff, function readUInt32LEFrom(destResult, buffer, offset) {\n  var value = buffer.readUInt32LE(offset, true);\n  return destResult.reset(null, offset + 4, value);\n}, function writeUInt32LEInto(destResult, value, buffer, offset) {\n  buffer.writeUInt32LE(value, offset, true);\n  return destResult.reset(null, offset + 4);\n});\nvar FloatLE = AtomRW(4, function readFloatLEFrom(destResult, buffer, offset) {\n  var value = buffer.readFloatLE(offset, true);\n  return destResult.reset(null, offset + 4, value);\n}, function writeFloatLEInto(destResult, value, buffer, offset) {\n  // istanbul ignore if\n  if (typeof value !== 'number') {\n    return destResult.reset(errors.expected(value, 'a number'), null);\n  } else {\n    buffer.writeFloatLE(value, offset);\n    return destResult.reset(null, offset + 4);\n  }\n});\nvar FloatBE = AtomRW(4, function readFloatBEFrom(destResult, buffer, offset) {\n  var value = buffer.readFloatBE(offset, true);\n  return destResult.reset(null, offset + 4, value);\n}, function writeFloatBEInto(destResult, value, buffer, offset) {\n  // istanbul ignore if\n  if (typeof value !== 'number') {\n    return destResult.reset(errors.expected(value, 'a number'), null);\n  } else {\n    buffer.writeFloatBE(value, offset);\n    return destResult.reset(null, offset + 4);\n  }\n});\nvar DoubleLE = AtomRW(8, function readDoubleLEFrom(destResult, buffer, offset) {\n  var value = buffer.readDoubleLE(offset, true);\n  return destResult.reset(null, offset + 8, value);\n}, function writeDoubleLEInto(destResult, value, buffer, offset) {\n  // istanbul ignore if\n  if (typeof value !== 'number') {\n    return destResult.reset(errors.expected(value, 'a number'), null);\n  } else {\n    buffer.writeDoubleLE(value, offset);\n    return destResult.reset(null, offset + 8);\n  }\n});\nvar DoubleBE = AtomRW(8, function readDoubleBEFrom(destResult, buffer, offset) {\n  var value = buffer.readDoubleBE(offset, true);\n  return destResult.reset(null, offset + 8, value);\n}, function writeDoubleBEInto(destResult, value, buffer, offset) {\n  // istanbul ignore if\n  if (typeof value !== 'number') {\n    return destResult.reset(errors.expected(value, 'a number'), null);\n  } else {\n    buffer.writeDoubleBE(value, offset);\n    return destResult.reset(null, offset + 8);\n  }\n});\nmodule.exports.AtomRW = AtomRW;\nmodule.exports.Int8 = Int8;\nmodule.exports.Int16BE = Int16BE;\nmodule.exports.Int32BE = Int32BE;\nmodule.exports.Int16LE = Int16LE;\nmodule.exports.Int32LE = Int32LE;\nmodule.exports.UInt8 = UInt8;\nmodule.exports.UInt16BE = UInt16BE;\nmodule.exports.UInt32BE = UInt32BE;\nmodule.exports.UInt16LE = UInt16LE;\nmodule.exports.UInt32LE = UInt32LE;\nmodule.exports.FloatLE = FloatLE;\nmodule.exports.FloatBE = FloatBE;\nmodule.exports.DoubleLE = DoubleLE;\nmodule.exports.DoubleBE = DoubleBE;","map":{"version":3,"names":["inherits","require","WriteResult","ReadResult","BufferRW","errors","AtomRW","width","readAtomFrom","writeAtomInto","call","prototype","poolByteLength","byteLength","destResult","reset","poolReadFrom","readFrom","buffer","offset","remain","length","poolShortError","poolWriteInto","writeInto","value","IntegerRW","min","max","expected","RangeError","Int8","readInt8From","readInt8","writeInt8Into","writeInt8","Int16BE","readInt16BEFrom","readInt16BE","writeInt16BEInto","writeInt16BE","Int32BE","readInt32BEFrom","readInt32BE","writeInt32BEInto","writeInt32BE","Int16LE","readInt16LEFrom","readInt16LE","writeInt16LEInto","writeInt16LE","Int32LE","readInt32LEFrom","readInt32LE","writeInt32LEInto","writeInt32LE","UInt8","readUInt8From","readUInt8","writeUInt8Into","writeUInt8","UInt16BE","readUInt16BEFrom","readUInt16BE","writeUInt16BEInto","writeUInt16BE","UInt32BE","readUInt32BEFrom","readUInt32BE","writeUInt32BEInto","writeUInt32BE","UInt16LE","readUInt16LEFrom","readUInt16LE","writeUInt16LEInto","writeUInt16LE","UInt32LE","readUInt32LEFrom","readUInt32LE","writeUInt32LEInto","writeUInt32LE","FloatLE","readFloatLEFrom","readFloatLE","writeFloatLEInto","writeFloatLE","FloatBE","readFloatBEFrom","readFloatBE","writeFloatBEInto","writeFloatBE","DoubleLE","readDoubleLEFrom","readDoubleLE","writeDoubleLEInto","writeDoubleLE","DoubleBE","readDoubleBEFrom","readDoubleBE","writeDoubleBEInto","writeDoubleBE","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/atoms.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar inherits = require('util').inherits;\n\nvar WriteResult = require('./base').WriteResult;\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\nfunction AtomRW(width, readAtomFrom, writeAtomInto) {\n    if (!(this instanceof AtomRW)) {\n        return new AtomRW(width, readAtomFrom, writeAtomInto);\n    }\n    this.width = width;\n    this.readAtomFrom = readAtomFrom;\n    this.writeAtomInto = writeAtomInto;\n    BufferRW.call(this);\n}\ninherits(AtomRW, BufferRW);\n\nAtomRW.prototype.poolByteLength = function byteLength(destResult) {\n    return destResult.reset(null, this.width);\n};\n\nAtomRW.prototype.poolReadFrom = function readFrom(destResult, buffer, offset) {\n    var remain = buffer.length - offset;\n    if (remain < this.width) {\n        return ReadResult.poolShortError(destResult, this.width, remain, offset);\n    }\n    return this.readAtomFrom(destResult, buffer, offset);\n};\n\nAtomRW.prototype.poolWriteInto = function writeInto(destResult, value, buffer, offset) {\n    var remain = buffer.length - offset;\n    // istanbul ignore next\n    if (remain < this.width) {\n        WriteResult.poolShortError(destResult, this.width, remain, offset);\n    }\n    return this.writeAtomInto(destResult, value, buffer, offset);\n};\n\n// jshint maxparams:5\nfunction IntegerRW(width, min, max, readAtomFrom, writeAtomInto) {\n    if (!(this instanceof IntegerRW)) {\n        return new IntegerRW(width, min, max, readAtomFrom, writeAtomInto);\n    }\n    AtomRW.call(this, width, readAtomFrom, writeAtomInto);\n    this.min = min;\n    this.max = max;\n}\ninherits(IntegerRW, AtomRW);\n\nIntegerRW.prototype.poolWriteInto = function poolWriteInto(destResult, value, buffer, offset) {\n    if (typeof value !== 'number') {\n        return destResult.reset(errors.expected(value, 'a number'));\n    }\n    if (value < this.min || value > this.max) {\n        return destResult.reset(errors.RangeError({\n            value: value,\n            min: this.min,\n            max: this.max\n        }), offset);\n    }\n    var remain = buffer.length - offset;\n    if (remain < this.width) {\n        return WriteResult.poolShortError(destResult, this.width, remain, offset);\n    }\n    return this.writeAtomInto(destResult, value, buffer, offset);\n};\n\nvar Int8 = IntegerRW(1, -0x80, 0x7f,\n    function readInt8From(destResult, buffer, offset) {\n        var value = buffer.readInt8(offset, true);\n        return destResult.reset(null, offset + 1, value);\n    },\n    function writeInt8Into(destResult, value, buffer, offset) {\n        buffer.writeInt8(value, offset, true);\n        return destResult.reset(null, offset + 1);\n    });\n\nvar Int16BE = IntegerRW(2, -0x8000, 0x7fff,\n    function readInt16BEFrom(destResult, buffer, offset) {\n        var value = buffer.readInt16BE(offset, true);\n        return destResult.reset(null, offset + 2, value);\n    },\n    function writeInt16BEInto(destResult, value, buffer, offset) {\n        buffer.writeInt16BE(value, offset, true);\n        return destResult.reset(null, offset + 2);\n    });\n\nvar Int32BE = IntegerRW(4, -0x80000000, 0x7fffffff,\n    function readInt32BEFrom(destResult, buffer, offset) {\n        var value = buffer.readInt32BE(offset, true);\n        return destResult.reset(null, offset + 4, value);\n    },\n    function writeInt32BEInto(destResult, value, buffer, offset) {\n        buffer.writeInt32BE(value, offset, true);\n        return destResult.reset(null, offset + 4);\n    });\n\nvar Int16LE = IntegerRW(2, -0x8000, 0x7fff,\n    function readInt16LEFrom(destResult, buffer, offset) {\n        var value = buffer.readInt16LE(offset, true);\n        return destResult.reset(null, offset + 2, value);\n    },\n    function writeInt16LEInto(destResult, value, buffer, offset) {\n        buffer.writeInt16LE(value, offset, true);\n        return destResult.reset(null, offset + 2);\n    });\n\nvar Int32LE = IntegerRW(4, -0x80000000, 0x7fffffff,\n    function readInt32LEFrom(destResult, buffer, offset) {\n        var value = buffer.readInt32LE(offset, true);\n        return destResult.reset(null, offset + 4, value);\n    },\n    function writeInt32LEInto(destResult, value, buffer, offset) {\n        buffer.writeInt32LE(value, offset, true);\n        return destResult.reset(null, offset + 4);\n    });\n\nvar UInt8 = IntegerRW(1, 0, 0xff,\n    function readUInt8From(destResult, buffer, offset) {\n        var value = buffer.readUInt8(offset, true);\n        return destResult.reset(null, offset + 1, value);\n    },\n    function writeUInt8Into(destResult, value, buffer, offset) {\n        buffer.writeUInt8(value, offset, true);\n        return destResult.reset(null, offset + 1);\n    });\n\nvar UInt16BE = IntegerRW(2, 0, 0xffff,\n    function readUInt16BEFrom(destResult, buffer, offset) {\n        var value = buffer.readUInt16BE(offset, true);\n        return destResult.reset(null, offset + 2, value);\n    },\n    function writeUInt16BEInto(destResult, value, buffer, offset) {\n        buffer.writeUInt16BE(value, offset, true);\n        return destResult.reset(null, offset + 2);\n    });\n\nvar UInt32BE = IntegerRW(4, 0, 0xffffffff,\n    function readUInt32BEFrom(destResult, buffer, offset) {\n        var value = buffer.readUInt32BE(offset, true);\n        return destResult.reset(null, offset + 4, value);\n    },\n    function writeUInt32BEInto(destResult, value, buffer, offset) {\n        buffer.writeUInt32BE(value, offset, true);\n        return destResult.reset(null, offset + 4);\n    });\n\nvar UInt16LE = IntegerRW(2, 0, 0xffff,\n    function readUInt16LEFrom(destResult, buffer, offset) {\n        var value = buffer.readUInt16LE(offset, true);\n        return destResult.reset(null, offset + 2, value);\n    },\n    function writeUInt16LEInto(destResult, value, buffer, offset) {\n        buffer.writeUInt16LE(value, offset, true);\n        return destResult.reset(null, offset + 2);\n    });\n\nvar UInt32LE = IntegerRW(4, 0, 0xffffffff,\n    function readUInt32LEFrom(destResult, buffer, offset) {\n        var value = buffer.readUInt32LE(offset, true);\n        return destResult.reset(null, offset + 4, value);\n    },\n    function writeUInt32LEInto(destResult, value, buffer, offset) {\n        buffer.writeUInt32LE(value, offset, true);\n        return destResult.reset(null, offset + 4);\n    });\n\nvar FloatLE = AtomRW(4,\n    function readFloatLEFrom(destResult, buffer, offset) {\n        var value = buffer.readFloatLE(offset, true);\n        return destResult.reset(null, offset + 4, value);\n    },\n    function writeFloatLEInto(destResult, value, buffer, offset) {\n        // istanbul ignore if\n        if (typeof value !== 'number') {\n            return destResult.reset(errors.expected(value, 'a number'), null);\n        } else {\n            buffer.writeFloatLE(value, offset);\n            return destResult.reset(null, offset + 4);\n        }\n    });\n\nvar FloatBE = AtomRW(4,\n    function readFloatBEFrom(destResult, buffer, offset) {\n        var value = buffer.readFloatBE(offset, true);\n        return destResult.reset(null, offset + 4, value);\n    },\n    function writeFloatBEInto(destResult, value, buffer, offset) {\n        // istanbul ignore if\n        if (typeof value !== 'number') {\n            return destResult.reset(errors.expected(value, 'a number'), null);\n        } else {\n            buffer.writeFloatBE(value, offset);\n            return destResult.reset(null, offset + 4);\n        }\n    });\n\nvar DoubleLE = AtomRW(8,\n    function readDoubleLEFrom(destResult, buffer, offset) {\n        var value = buffer.readDoubleLE(offset, true);\n        return destResult.reset(null, offset + 8, value);\n    },\n    function writeDoubleLEInto(destResult, value, buffer, offset) {\n        // istanbul ignore if\n        if (typeof value !== 'number') {\n            return destResult.reset(errors.expected(value, 'a number'), null);\n        } else {\n            buffer.writeDoubleLE(value, offset);\n            return destResult.reset(null, offset + 8);\n        }\n    });\n\nvar DoubleBE = AtomRW(8,\n    function readDoubleBEFrom(destResult, buffer, offset) {\n        var value = buffer.readDoubleBE(offset, true);\n        return destResult.reset(null, offset + 8, value);\n    },\n    function writeDoubleBEInto(destResult, value, buffer, offset) {\n        // istanbul ignore if\n        if (typeof value !== 'number') {\n            return destResult.reset(errors.expected(value, 'a number'), null);\n        } else {\n            buffer.writeDoubleBE(value, offset);\n            return destResult.reset(null, offset + 8);\n        }\n    });\n\nmodule.exports.AtomRW = AtomRW;\nmodule.exports.Int8 = Int8;\nmodule.exports.Int16BE = Int16BE;\nmodule.exports.Int32BE = Int32BE;\nmodule.exports.Int16LE = Int16LE;\nmodule.exports.Int32LE = Int32LE;\nmodule.exports.UInt8 = UInt8;\nmodule.exports.UInt16BE = UInt16BE;\nmodule.exports.UInt32BE = UInt32BE;\nmodule.exports.UInt16LE = UInt16LE;\nmodule.exports.UInt32LE = UInt32LE;\nmodule.exports.FloatLE = FloatLE;\nmodule.exports.FloatBE = FloatBE;\nmodule.exports.DoubleLE = DoubleLE;\nmodule.exports.DoubleBE = DoubleBE;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}