{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[1, 45] */\n'use strict';\n\nvar assert = require('assert');\nvar util = require('util');\nvar fs = require('fs');\nvar path = require('path');\nvar idl = require('./thrift-idl');\nvar Result = require('bufrw/result');\nvar lcp = require('./lib/lcp');\nvar ThriftService = require('./service').ThriftService;\nvar ThriftStruct = require('./struct').ThriftStruct;\nvar ThriftUnion = require('./union').ThriftUnion;\nvar ThriftEnum = require('./enum').ThriftEnum;\nvar ThriftVoid = require('./void').ThriftVoid;\nvar ThriftBoolean = require('./boolean').ThriftBoolean;\nvar ThriftString = require('./string').ThriftString;\nvar ThriftBinary = require('./binary').ThriftBinary;\nvar ThriftI8 = require('./i8').ThriftI8;\nvar ThriftI16 = require('./i16').ThriftI16;\nvar ThriftI32 = require('./i32').ThriftI32;\nvar ThriftI64 = require('./i64').ThriftI64;\nvar ThriftDouble = require('./double').ThriftDouble;\nvar ThriftList = require('./list').ThriftList;\nvar ThriftSet = require('./set').ThriftSet;\nvar ThriftMap = require('./map').ThriftMap;\nvar ThriftConst = require('./const').ThriftConst;\nvar ThriftTypedef = require('./typedef').ThriftTypedef;\nvar Literal = require('./ast').Literal;\nvar Message = require('./message').Message;\nvar messageExceptionDef = require('./message').exceptionDef;\nvar messageExceptionTypesDef = require('./message').exceptionTypesDef;\nvar validThriftIdentifierRE = /^[a-zA-Z_][a-zA-Z0-9_\\.]+$/;\nfunction Thrift(options) {\n  assert(options, 'options required');\n  assert(typeof options === 'object', 'options must be object');\n  assert(options.source || options.entryPoint, 'opts.entryPoint required');\n\n  // Coerce weakly-deprecated single include usage\n  if (options.source) {\n    assert(typeof options.source === 'string', 'source must be string');\n    options.entryPoint = 'service.thrift';\n    options.idls = {\n      'service.thrift': options.source\n    };\n  }\n\n  // filename to source\n  this.idls = options.idls || Object.create(null);\n  // filename to ast\n  this.asts = options.asts || Object.create(null);\n  // filename to Thrift instance\n  this.memo = options.memo || Object.create(null);\n\n  // Grant file system access for resolving includes, as opposed to lifting\n  // includes from provided options.idls alone.\n  this.fs = options.fs;\n  if (options.allowFilesystemAccess) {\n    this.fs = fs;\n  }\n  this.strict = options.strict !== undefined ? options.strict : true;\n  this.defaultValueDefinition = new Literal(options.defaultAsUndefined ? undefined : null);\n  this.defaultAsUndefined = options.defaultAsUndefined;\n\n  // [name] :Thrift* implementing {compile, link, &c}\n  // Heterogenous Thrift model objects by name in a consolidated name-space\n  // to prevent duplicate references with the same and different types, like\n  // a service and a struct with the same name in the scope of a Thrift IDL\n  // module:\n  this.models = Object.create(null);\n  // [serviceName][functionName] :{rw, Arguments, Result}\n  this.services = Object.create(null);\n  // [constName] :Value\n  this.consts = Object.create(null);\n  // [enumName][name] :String\n  this.enums = Object.create(null);\n  // [structName] :Constructor\n  this.structs = Object.create(null);\n  // [exceptionName] :Constructor\n  this.exceptions = Object.create(null);\n  // [unionName] :Constructor\n  this.unions = Object.create(null);\n  // [typedefName] :Constructor (might be Array, Object, or Number)\n  this.typedefs = Object.create(null);\n  // [moduleName] :Thrift\n  // Child modules indexed by their local alias.\n  this.modules = Object.create(null);\n  this.surface = this;\n  this.linked = false;\n  this.releaseSources = options.releaseSources || false;\n  this.allowIncludeAlias = options.allowIncludeAlias || false;\n  this.allowOptionalArguments = options.allowOptionalArguments || false;\n  this.filename = options.entryPoint;\n  this.dirname = path.dirname(this.filename);\n  this.memo[this.filename] = this;\n  var ast = this.asts[options.entryPoint];\n  var source = this.idls[options.entryPoint];\n  if (!source && !ast) {\n    /* eslint-disable max-len */\n    assert.ok(this.fs, this.filename + ': Thrift must be constructed with either a complete set of options.idls, options.asts, or options.fs access');\n    assert.ok(this.filename, 'Thrift must be constructed with a options.entryPoint');\n    /* eslint-enable max-len */\n    this.filename = path.resolve(this.filename);\n    source = this.fs.readFileSync(this.filename, 'ascii');\n    this.idls[this.filename] = source;\n  }\n  this.exception = null;\n\n  // Separate compile/link passes permits forward references and cyclic\n  // references.\n  this.compile(source);\n  // We only link from the root Thrift object.\n  if (!options.noLink) {\n    this.link();\n  }\n}\nThrift.prototype.models = 'module';\nThrift.prototype.Message = Message;\nThrift.prototype.getType = function getType(name) {\n  return this.getTypeResult(name).toValue();\n};\nThrift.prototype.getTypeResult = function getType(name) {\n  var model = this.models[name];\n  if (!model || model.models !== 'type') {\n    return new Result(new Error(util.format('type %s not found', name)));\n  }\n  return new Result(null, model.link(this));\n};\nThrift.prototype.getSources = function getSources() {\n  var filenames = Object.keys(this.idls);\n  var common = lcp.longestCommonPath(filenames);\n  var idls = {};\n  for (var index = 0; index < filenames.length; index++) {\n    var filename = filenames[index];\n    idls[filename.slice(common.length)] = this.idls[filename];\n  }\n  var entryPoint = this.filename.slice(common.length);\n  return {\n    entryPoint: entryPoint,\n    idls: idls\n  };\n};\nThrift.prototype.toJSON = function toJSON() {\n  var filenames = Object.keys(this.idls);\n  var common = lcp.longestCommonPath(filenames);\n  var asts = {};\n  for (var index = 0; index < filenames.length; index++) {\n    var filename = filenames[index];\n    asts[filename.slice(common.length)] = this.asts[filename];\n  }\n  var entryPoint = this.filename.slice(common.length);\n  return {\n    entryPoint: entryPoint,\n    asts: asts\n  };\n};\nThrift.prototype.getServiceEndpoints = function getServiceEndpoints(target) {\n  target = target || null;\n  var services = Object.keys(this.services);\n  var endpoints = [];\n  for (var i = 0; i < services.length; i++) {\n    var service = this.models[services[i]];\n    if (!target || target === service.name) {\n      for (var j = 0; j < service.functions.length; j++) {\n        endpoints.push(service.name + '::' + service.functions[j].name);\n      }\n    }\n  }\n  return endpoints;\n};\nThrift.prototype.baseTypes = {\n  void: ThriftVoid,\n  bool: ThriftBoolean,\n  byte: ThriftI8,\n  i8: ThriftI8,\n  i16: ThriftI16,\n  i32: ThriftI32,\n  i64: ThriftI64,\n  double: ThriftDouble,\n  string: ThriftString,\n  binary: ThriftBinary\n};\nThrift.prototype.compile = function compile(source) {\n  var syntax = this.asts[this.filename];\n  if (!syntax) {\n    syntax = idl.parse(source);\n    this.asts[this.filename] = syntax;\n  }\n  assert.equal(syntax.type, 'Program', 'expected a program');\n  this._compile(syntax.headers);\n  this._compile(syntax.definitions);\n  this.compileEnum(messageExceptionTypesDef);\n  this.exception = this.compileStruct(messageExceptionDef);\n};\nThrift.prototype.define = function define(name, def, model) {\n  assert(!this.models[name], 'duplicate reference to ' + name + ' at ' + def.line + ':' + def.column);\n  this.models[name] = model;\n};\nThrift.prototype.compilers = {\n  // sorted\n  Const: 'compileConst',\n  Enum: 'compileEnum',\n  Exception: 'compileException',\n  Include: 'compileInclude',\n  Service: 'compileService',\n  Struct: 'compileStruct',\n  Typedef: 'compileTypedef',\n  Union: 'compileUnion'\n};\nThrift.prototype._compile = function _compile(defs) {\n  for (var index = 0; index < defs.length; index++) {\n    var def = defs[index];\n    var compilerName = this.compilers[def.type];\n    // istanbul ignore else\n    if (compilerName) {\n      this[compilerName](def);\n    }\n  }\n};\nThrift.prototype.compileInclude = function compileInclude(def) {\n  if (def.id.lastIndexOf('/', 0) !== 0) {\n    var ns = def.namespace && def.namespace.name;\n    var filename = path.join(this.dirname, def.id);\n\n    // If include isn't name, get filename sans *.thrift file extension.\n    if (!this.allowIncludeAlias || !ns) {\n      var basename = path.basename(def.id);\n      ns = basename.slice(0, basename.length - 7);\n      if (!validThriftIdentifierRE.test(ns)) {\n        throw Error('Thrift include filename is not valid thrift identifier');\n      }\n    }\n    var model;\n    if (this.memo[filename]) {\n      model = this.memo[filename];\n    } else {\n      model = new Thrift({\n        entryPoint: filename,\n        fs: this.fs,\n        idls: this.idls,\n        asts: this.asts,\n        memo: this.memo,\n        strict: this.strict,\n        allowIncludeAlias: true,\n        allowOptionalArguments: this.allowOptionalArguments,\n        noLink: true,\n        releaseSources: this.releaseSources,\n        defaultAsUndefined: this.defaultAsUndefined\n      });\n    }\n    this.define(ns, def, model);\n\n    // Alias if first character is not lower-case\n    this.modules[ns] = model;\n    if (!/^[a-z]/.test(ns)) {\n      this[ns] = model;\n    }\n  } else {\n    throw Error('Include path string must not be an absolute path');\n  }\n};\nThrift.prototype.compileStruct = function compileStruct(def) {\n  var model = new ThriftStruct({\n    strict: this.strict,\n    defaultValueDefinition: this.defaultValueDefinition\n  });\n  model.compile(def, this);\n  this.define(model.fullName, def, model);\n  return model;\n};\nThrift.prototype.compileException = function compileException(def) {\n  var model = new ThriftStruct({\n    strict: this.strict,\n    isException: true\n  });\n  model.compile(def, this);\n  this.define(model.fullName, def, model);\n  return model;\n};\nThrift.prototype.compileUnion = function compileUnion(def) {\n  var model = new ThriftUnion({\n    strict: this.strict\n  });\n  model.compile(def, this);\n  this.define(model.fullName, def, model);\n  return model;\n};\nThrift.prototype.compileTypedef = function compileTypedef(def) {\n  var model = new ThriftTypedef({\n    strict: this.strict\n  });\n  model.compile(def, this);\n  this.define(model.name, def, model);\n  return model;\n};\nThrift.prototype.compileService = function compileService(def) {\n  var service = new ThriftService({\n    strict: this.strict\n  });\n  service.compile(def, this);\n  this.define(service.name, def.id, service);\n};\nThrift.prototype.compileConst = function compileConst(def, model) {\n  var thriftConst = new ThriftConst(def);\n  this.define(def.id.name, def.id, thriftConst);\n};\nThrift.prototype.compileEnum = function compileEnum(def) {\n  var model = new ThriftEnum();\n  model.compile(def, this);\n  this.define(model.name, def.id, model);\n};\nThrift.prototype.link = function link() {\n  if (this.linked) {\n    return this;\n  }\n  this.linked = true;\n  var names = Object.keys(this.models);\n  for (var index = 0; index < names.length; index++) {\n    this.models[names[index]].link(this);\n  }\n  this.exception.link(this);\n\n  // As part of the linking process, we also release aliased\n  // refs to idls, asts, etc.\n  if (this.releaseSources) {\n    this.idls = null;\n    this.asts = null;\n    this.memo = null;\n  }\n  return this;\n};\nThrift.prototype.resolve = function resolve(def) {\n  // istanbul ignore else\n  if (def.type === 'BaseType') {\n    return new this.baseTypes[def.baseType](def.annotations);\n  } else if (def.type === 'Identifier') {\n    return this.resolveIdentifier(def, def.name, 'type');\n  } else if (def.type === 'List') {\n    return new ThriftList(this.resolve(def.valueType), def.annotations);\n  } else if (def.type === 'Set') {\n    return new ThriftSet(this.resolve(def.valueType), def.annotations);\n  } else if (def.type === 'Map') {\n    return new ThriftMap(this.resolve(def.keyType), this.resolve(def.valueType), def.annotations);\n  } else {\n    assert.fail(util.format('Can\\'t get reader/writer for definition with unknown type %s at %s:%s', def.type, def.line, def.column));\n  }\n};\n\n// TODO thread type model and validate / coerce\nThrift.prototype.resolveValue = function resolveValue(def) {\n  // istanbul ignore else\n  if (!def) {\n    return null;\n  } else if (def.type === 'Literal') {\n    return def.value;\n  } else if (def.type === 'ConstList') {\n    return this.resolveListConst(def);\n  } else if (def.type === 'ConstMap') {\n    return this.resolveMapConst(def);\n  } else if (def.type === 'Identifier') {\n    if (def.name === 'true') {\n      return true;\n    } else if (def.name === 'false') {\n      return false;\n    }\n    return this.resolveIdentifier(def, def.name, 'value').value;\n  } else {\n    assert.fail('unrecognized const type ' + def.type);\n  }\n};\nThrift.prototype.resolveListConst = function resolveListConst(def) {\n  var list = [];\n  for (var index = 0; index < def.values.length; index++) {\n    list.push(this.resolveValue(def.values[index]));\n  }\n  return list;\n};\nThrift.prototype.resolveMapConst = function resolveMapConst(def) {\n  var map = {};\n  for (var index = 0; index < def.entries.length; index++) {\n    map[this.resolveValue(def.entries[index].key)] = this.resolveValue(def.entries[index].value);\n  }\n  return map;\n};\nThrift.prototype.resolveIdentifier = function resolveIdentifier(def, name, models) {\n  var model;\n\n  // short circuit if in global namespace of this thrift.\n  if (this.models[name]) {\n    model = this.models[name].link(this);\n    if (model.models !== models) {\n      err = new Error('type mismatch for ' + def.name + ' at ' + def.line + ':' + def.column + ', expects ' + models + ', got ' + model.models);\n      err.line = def.line;\n      err.column = def.column;\n      throw err;\n    }\n    return model;\n  }\n  var parts = name.split('.');\n  var err;\n  var module = this.modules[parts.shift()];\n  if (module) {\n    return module.resolveIdentifier(def, parts.join('.'), models);\n  } else {\n    err = new Error('cannot resolve reference to ' + def.name + ' at ' + def.line + ':' + def.column);\n    err.line = def.line;\n    err.column = def.column;\n    throw err;\n  }\n};\nmodule.exports.Thrift = Thrift;","map":{"version":3,"names":["assert","require","util","fs","path","idl","Result","lcp","ThriftService","ThriftStruct","ThriftUnion","ThriftEnum","ThriftVoid","ThriftBoolean","ThriftString","ThriftBinary","ThriftI8","ThriftI16","ThriftI32","ThriftI64","ThriftDouble","ThriftList","ThriftSet","ThriftMap","ThriftConst","ThriftTypedef","Literal","Message","messageExceptionDef","exceptionDef","messageExceptionTypesDef","exceptionTypesDef","validThriftIdentifierRE","Thrift","options","source","entryPoint","idls","Object","create","asts","memo","allowFilesystemAccess","strict","undefined","defaultValueDefinition","defaultAsUndefined","models","services","consts","enums","structs","exceptions","unions","typedefs","modules","surface","linked","releaseSources","allowIncludeAlias","allowOptionalArguments","filename","dirname","ast","ok","resolve","readFileSync","exception","compile","noLink","link","prototype","getType","name","getTypeResult","toValue","model","Error","format","getSources","filenames","keys","common","longestCommonPath","index","length","slice","toJSON","getServiceEndpoints","target","endpoints","i","service","j","functions","push","baseTypes","void","bool","byte","i8","i16","i32","i64","double","string","binary","syntax","parse","equal","type","_compile","headers","definitions","compileEnum","compileStruct","define","def","line","column","compilers","Const","Enum","Exception","Include","Service","Struct","Typedef","Union","defs","compilerName","compileInclude","id","lastIndexOf","ns","namespace","join","basename","test","fullName","compileException","isException","compileUnion","compileTypedef","compileService","compileConst","thriftConst","names","baseType","annotations","resolveIdentifier","valueType","keyType","fail","resolveValue","value","resolveListConst","resolveMapConst","list","values","map","entries","key","err","parts","split","module","shift","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/thrift.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[1, 45] */\n'use strict';\n\nvar assert = require('assert');\nvar util = require('util');\nvar fs = require('fs');\nvar path = require('path');\nvar idl = require('./thrift-idl');\nvar Result = require('bufrw/result');\nvar lcp = require('./lib/lcp');\n\nvar ThriftService = require('./service').ThriftService;\nvar ThriftStruct = require('./struct').ThriftStruct;\nvar ThriftUnion = require('./union').ThriftUnion;\nvar ThriftEnum = require('./enum').ThriftEnum;\n\nvar ThriftVoid = require('./void').ThriftVoid;\nvar ThriftBoolean = require('./boolean').ThriftBoolean;\nvar ThriftString = require('./string').ThriftString;\nvar ThriftBinary = require('./binary').ThriftBinary;\nvar ThriftI8 = require('./i8').ThriftI8;\nvar ThriftI16 = require('./i16').ThriftI16;\nvar ThriftI32 = require('./i32').ThriftI32;\nvar ThriftI64 = require('./i64').ThriftI64;\nvar ThriftDouble = require('./double').ThriftDouble;\nvar ThriftList = require('./list').ThriftList;\nvar ThriftSet = require('./set').ThriftSet;\nvar ThriftMap = require('./map').ThriftMap;\nvar ThriftConst = require('./const').ThriftConst;\nvar ThriftTypedef = require('./typedef').ThriftTypedef;\n\nvar Literal = require('./ast').Literal;\n\nvar Message = require('./message').Message;\nvar messageExceptionDef = require('./message').exceptionDef;\nvar messageExceptionTypesDef = require('./message').exceptionTypesDef;\n\nvar validThriftIdentifierRE = /^[a-zA-Z_][a-zA-Z0-9_\\.]+$/;\n\nfunction Thrift(options) {\n    assert(options, 'options required');\n    assert(typeof options === 'object', 'options must be object');\n    assert(options.source || options.entryPoint, 'opts.entryPoint required');\n\n    // Coerce weakly-deprecated single include usage\n    if (options.source) {\n        assert(typeof options.source === 'string', 'source must be string');\n        options.entryPoint = 'service.thrift';\n        options.idls = {'service.thrift': options.source};\n    }\n\n    // filename to source\n    this.idls = options.idls || Object.create(null);\n    // filename to ast\n    this.asts = options.asts || Object.create(null);\n    // filename to Thrift instance\n    this.memo = options.memo || Object.create(null);\n\n    // Grant file system access for resolving includes, as opposed to lifting\n    // includes from provided options.idls alone.\n    this.fs = options.fs;\n    if (options.allowFilesystemAccess) {\n        this.fs = fs;\n    }\n\n    this.strict = options.strict !== undefined ? options.strict : true;\n    this.defaultValueDefinition = new Literal(options.defaultAsUndefined ? undefined : null);\n    this.defaultAsUndefined = options.defaultAsUndefined;\n\n    // [name] :Thrift* implementing {compile, link, &c}\n    // Heterogenous Thrift model objects by name in a consolidated name-space\n    // to prevent duplicate references with the same and different types, like\n    // a service and a struct with the same name in the scope of a Thrift IDL\n    // module:\n    this.models = Object.create(null);\n    // [serviceName][functionName] :{rw, Arguments, Result}\n    this.services = Object.create(null);\n    // [constName] :Value\n    this.consts = Object.create(null);\n    // [enumName][name] :String\n    this.enums = Object.create(null);\n    // [structName] :Constructor\n    this.structs = Object.create(null);\n    // [exceptionName] :Constructor\n    this.exceptions = Object.create(null);\n    // [unionName] :Constructor\n    this.unions = Object.create(null);\n    // [typedefName] :Constructor (might be Array, Object, or Number)\n    this.typedefs = Object.create(null);\n    // [moduleName] :Thrift\n    // Child modules indexed by their local alias.\n    this.modules = Object.create(null);\n\n    this.surface = this;\n\n    this.linked = false;\n    this.releaseSources = options.releaseSources || false;\n    this.allowIncludeAlias = options.allowIncludeAlias || false;\n    this.allowOptionalArguments = options.allowOptionalArguments || false;\n\n    this.filename = options.entryPoint;\n    this.dirname = path.dirname(this.filename);\n    this.memo[this.filename] = this;\n\n    var ast = this.asts[options.entryPoint];\n    var source = this.idls[options.entryPoint];\n    if (!source && !ast) {\n        /* eslint-disable max-len */\n        assert.ok(this.fs, this.filename + ': Thrift must be constructed with either a complete set of options.idls, options.asts, or options.fs access');\n        assert.ok(this.filename, 'Thrift must be constructed with a options.entryPoint');\n        /* eslint-enable max-len */\n        this.filename = path.resolve(this.filename);\n        source = this.fs.readFileSync(this.filename, 'ascii');\n        this.idls[this.filename] = source;\n    }\n\n    this.exception = null;\n\n    // Separate compile/link passes permits forward references and cyclic\n    // references.\n    this.compile(source);\n    // We only link from the root Thrift object.\n    if (!options.noLink) {\n        this.link();\n    }\n}\n\nThrift.prototype.models = 'module';\n\nThrift.prototype.Message = Message;\n\nThrift.prototype.getType = function getType(name) {\n    return this.getTypeResult(name).toValue();\n};\n\nThrift.prototype.getTypeResult = function getType(name) {\n    var model = this.models[name];\n    if (!model || model.models !== 'type') {\n        return new Result(new Error(util.format('type %s not found', name)));\n    }\n    return new Result(null, model.link(this));\n};\n\nThrift.prototype.getSources = function getSources() {\n    var filenames = Object.keys(this.idls);\n    var common = lcp.longestCommonPath(filenames);\n    var idls = {};\n    for (var index = 0; index < filenames.length; index++) {\n        var filename = filenames[index];\n        idls[filename.slice(common.length)] = this.idls[filename];\n    }\n    var entryPoint = this.filename.slice(common.length);\n    return {entryPoint: entryPoint, idls: idls};\n};\n\nThrift.prototype.toJSON = function toJSON() {\n    var filenames = Object.keys(this.idls);\n    var common = lcp.longestCommonPath(filenames);\n    var asts = {};\n    for (var index = 0; index < filenames.length; index++) {\n        var filename = filenames[index];\n        asts[filename.slice(common.length)] = this.asts[filename];\n    }\n    var entryPoint = this.filename.slice(common.length);\n    return {entryPoint: entryPoint, asts: asts};\n};\n\nThrift.prototype.getServiceEndpoints = function getServiceEndpoints(target) {\n    target = target || null;\n    var services = Object.keys(this.services);\n    var endpoints = [];\n    for (var i = 0; i < services.length; i++) {\n        var service = this.models[services[i]];\n        if (!target || target === service.name) {\n            for (var j = 0; j < service.functions.length; j++) {\n                endpoints.push(service.name + '::' + service.functions[j].name);\n            }\n        }\n    }\n    return endpoints;\n};\n\nThrift.prototype.baseTypes = {\n    void: ThriftVoid,\n    bool: ThriftBoolean,\n    byte: ThriftI8,\n    i8: ThriftI8,\n    i16: ThriftI16,\n    i32: ThriftI32,\n    i64: ThriftI64,\n    double: ThriftDouble,\n    string: ThriftString,\n    binary: ThriftBinary\n};\n\nThrift.prototype.compile = function compile(source) {\n    var syntax = this.asts[this.filename];\n    if (!syntax) {\n        syntax = idl.parse(source);\n        this.asts[this.filename] = syntax;\n    }\n    assert.equal(syntax.type, 'Program', 'expected a program');\n    this._compile(syntax.headers);\n    this._compile(syntax.definitions);\n    this.compileEnum(messageExceptionTypesDef);\n    this.exception = this.compileStruct(messageExceptionDef);\n};\n\nThrift.prototype.define = function define(name, def, model) {\n    assert(!this.models[name], 'duplicate reference to ' + name + ' at ' + def.line + ':' + def.column);\n    this.models[name] = model;\n};\n\nThrift.prototype.compilers = {\n    // sorted\n    Const: 'compileConst',\n    Enum: 'compileEnum',\n    Exception: 'compileException',\n    Include: 'compileInclude',\n    Service: 'compileService',\n    Struct: 'compileStruct',\n    Typedef: 'compileTypedef',\n    Union: 'compileUnion'\n};\n\nThrift.prototype._compile = function _compile(defs) {\n    for (var index = 0; index < defs.length; index++) {\n        var def = defs[index];\n        var compilerName = this.compilers[def.type];\n        // istanbul ignore else\n        if (compilerName) {\n            this[compilerName](def);\n        }\n    }\n};\n\nThrift.prototype.compileInclude = function compileInclude(def) {\n    if (def.id.lastIndexOf('/', 0) !== 0) {\n        var ns = def.namespace && def.namespace.name;\n        var filename = path.join(this.dirname, def.id);\n\n        // If include isn't name, get filename sans *.thrift file extension.\n        if (!this.allowIncludeAlias || !ns) {\n            var basename = path.basename(def.id);\n            ns = basename.slice(0, basename.length - 7);\n            if (!validThriftIdentifierRE.test(ns)) {\n                throw Error(\n                    'Thrift include filename is not valid thrift identifier'\n                );\n            }\n        }\n\n        var model;\n\n        if (this.memo[filename]) {\n            model = this.memo[filename];\n        } else {\n            model = new Thrift({\n                entryPoint: filename,\n                fs: this.fs,\n                idls: this.idls,\n                asts: this.asts,\n                memo: this.memo,\n                strict: this.strict,\n                allowIncludeAlias: true,\n                allowOptionalArguments: this.allowOptionalArguments,\n                noLink: true,\n                releaseSources: this.releaseSources,\n                defaultAsUndefined: this.defaultAsUndefined\n            });\n        }\n\n        this.define(ns, def, model);\n\n        // Alias if first character is not lower-case\n        this.modules[ns] = model;\n\n        if (!/^[a-z]/.test(ns)) {\n            this[ns] = model;\n        }\n\n    } else {\n        throw Error('Include path string must not be an absolute path');\n    }\n};\n\nThrift.prototype.compileStruct = function compileStruct(def) {\n    var model = new ThriftStruct({strict: this.strict, defaultValueDefinition: this.defaultValueDefinition});\n    model.compile(def, this);\n    this.define(model.fullName, def, model);\n    return model;\n};\n\nThrift.prototype.compileException = function compileException(def) {\n    var model = new ThriftStruct({strict: this.strict, isException: true});\n    model.compile(def, this);\n    this.define(model.fullName, def, model);\n    return model;\n};\n\nThrift.prototype.compileUnion = function compileUnion(def) {\n    var model = new ThriftUnion({strict: this.strict});\n    model.compile(def, this);\n    this.define(model.fullName, def, model);\n    return model;\n};\n\nThrift.prototype.compileTypedef = function compileTypedef(def) {\n    var model = new ThriftTypedef({strict: this.strict});\n    model.compile(def, this);\n    this.define(model.name, def, model);\n    return model;\n};\n\nThrift.prototype.compileService = function compileService(def) {\n    var service = new ThriftService({strict: this.strict});\n    service.compile(def, this);\n    this.define(service.name, def.id, service);\n};\n\nThrift.prototype.compileConst = function compileConst(def, model) {\n    var thriftConst = new ThriftConst(def);\n    this.define(def.id.name, def.id, thriftConst);\n};\n\nThrift.prototype.compileEnum = function compileEnum(def) {\n    var model = new ThriftEnum();\n    model.compile(def, this);\n    this.define(model.name, def.id, model);\n};\n\nThrift.prototype.link = function link() {\n    if (this.linked) {\n        return this;\n    }\n    this.linked = true;\n\n    var names = Object.keys(this.models);\n    for (var index = 0; index < names.length; index++) {\n        this.models[names[index]].link(this);\n    }\n\n    this.exception.link(this);\n\n    // As part of the linking process, we also release aliased\n    // refs to idls, asts, etc.\n    if (this.releaseSources) {\n        this.idls = null;\n        this.asts = null;\n        this.memo = null;\n    }\n\n    return this;\n};\n\nThrift.prototype.resolve = function resolve(def) {\n    // istanbul ignore else\n    if (def.type === 'BaseType') {\n        return new this.baseTypes[def.baseType](def.annotations);\n    } else if (def.type === 'Identifier') {\n        return this.resolveIdentifier(def, def.name, 'type');\n    } else if (def.type === 'List') {\n        return new ThriftList(this.resolve(def.valueType), def.annotations);\n    } else if (def.type === 'Set') {\n        return new ThriftSet(this.resolve(def.valueType), def.annotations);\n    } else if (def.type === 'Map') {\n        return new ThriftMap(this.resolve(def.keyType), this.resolve(def.valueType), def.annotations);\n    } else {\n        assert.fail(util.format(\n            'Can\\'t get reader/writer for definition with unknown type %s at %s:%s',\n            def.type, def.line, def.column\n        ));\n    }\n};\n\n// TODO thread type model and validate / coerce\nThrift.prototype.resolveValue = function resolveValue(def) {\n    // istanbul ignore else\n    if (!def) {\n        return null;\n    } else if (def.type === 'Literal') {\n        return def.value;\n    } else if (def.type === 'ConstList') {\n        return this.resolveListConst(def);\n    } else if (def.type === 'ConstMap') {\n        return this.resolveMapConst(def);\n    } else if (def.type === 'Identifier') {\n        if (def.name === 'true') {\n            return true;\n        } else if (def.name === 'false') {\n            return false;\n        }\n        return this.resolveIdentifier(def, def.name, 'value').value;\n    } else {\n        assert.fail('unrecognized const type ' + def.type);\n    }\n};\n\nThrift.prototype.resolveListConst = function resolveListConst(def) {\n    var list = [];\n    for (var index = 0; index < def.values.length; index++) {\n        list.push(this.resolveValue(def.values[index]));\n    }\n    return list;\n};\n\nThrift.prototype.resolveMapConst = function resolveMapConst(def) {\n    var map = {};\n    for (var index = 0; index < def.entries.length; index++) {\n        map[this.resolveValue(def.entries[index].key)] =\n            this.resolveValue(def.entries[index].value);\n    }\n    return map;\n};\n\nThrift.prototype.resolveIdentifier = function resolveIdentifier(def, name, models) {\n    var model;\n\n    // short circuit if in global namespace of this thrift.\n    if (this.models[name]) {\n        model = this.models[name].link(this);\n        if (model.models !== models) {\n            err = new Error(\n                'type mismatch for ' + def.name + ' at ' + def.line + ':' + def.column +\n                ', expects ' + models + ', got ' + model.models\n            );\n            err.line = def.line;\n            err.column = def.column;\n            throw err;\n        }\n        return model;\n    }\n\n    var parts = name.split('.');\n    var err;\n\n    var module = this.modules[parts.shift()];\n    if (module) {\n        return module.resolveIdentifier(def, parts.join('.'), models);\n    } else {\n        err = new Error('cannot resolve reference to ' + def.name + ' at ' + def.line + ':' + def.column);\n        err.line = def.line;\n        err.column = def.column;\n        throw err;\n    }\n};\n\nmodule.exports.Thrift = Thrift;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}