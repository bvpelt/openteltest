{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = SwitchRW;\nvar inherits = require('util').inherits;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\n// TODO: cases should be an es6 map\n\nfunction SwitchRW(valrw, cases, opts) {\n  if (!(this instanceof SwitchRW)) {\n    return new SwitchRW(valrw, cases, opts);\n  }\n  opts = opts || {};\n  this.valrw = valrw;\n  this.cases = cases;\n  this.cons = opts.cons || Pair;\n  this.valKey = opts.valKey || '0';\n  this.dataKey = opts.dataKey || '1';\n  // istanbul ignore if TODO\n  if (opts.structMode) {\n    this.poolReadFrom = this.structReadFrom;\n  }\n  BufferRW.call(this);\n}\ninherits(SwitchRW, BufferRW);\nSwitchRW.prototype.poolByteLength = function poolByteLength(destResult, obj) {\n  var val = obj[this.valKey];\n  var data = obj[this.dataKey];\n  var datarw = this.cases[val];\n  if (datarw === undefined) {\n    return destResult.reset(errors.WriteInvalidSwitchValue({\n      value: val\n    }));\n  }\n  this.valrw.poolByteLength(destResult, val);\n  if (destResult.err) return destResult;\n  var vallen = destResult.length;\n  datarw.poolByteLength(destResult, data);\n  if (destResult.err) return destResult;\n  var caselen = destResult.length;\n  return destResult.reset(null, caselen + vallen);\n};\nSwitchRW.prototype.poolWriteInto = function poolWriteInto(destResult, obj, buffer, offset) {\n  var val = obj[this.valKey];\n  var data = obj[this.dataKey];\n  var datarw = this.cases[val];\n  if (datarw === undefined) {\n    return destResult.reset(errors.WriteInvalidSwitchValue({\n      value: val\n    }), offset);\n  }\n  var res = this.valrw.poolWriteInto(destResult, val, buffer, offset);\n  if (res.err) return res;\n  res = datarw.poolWriteInto(destResult, data, buffer, res.offset);\n  return res;\n};\nSwitchRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  var res = this.valrw.poolReadFrom(destResult, buffer, offset);\n  if (res.err) return res;\n  offset = res.offset;\n  var val = res.value;\n  var datarw = this.cases[val];\n  if (datarw === undefined) {\n    return destResult.reset(errors.ReadInvalidSwitchValue({\n      value: val\n    }), offset);\n  }\n  res = datarw.poolReadFrom(destResult, buffer, offset);\n  if (res.err) return res;\n  offset = res.offset;\n  var data = res.value;\n  var obj = new this.cons(val, data);\n  return destResult.reset(null, offset, obj);\n};\n\n// istanbul ignore next TODO\nSwitchRW.prototype.poolStructReadFrom = function poolStructReadFrom(destResult, obj, buffer, offset) {\n  var res = this.valrw.poolReadFrom(destResult, buffer, offset);\n  if (res.err) return res;\n  offset = res.offset;\n  var val = res.value;\n  var datarw = this.cases[val];\n  if (datarw === undefined) {\n    return destResult.reset(errors.ReadInvalidSwitchValue({\n      value: val\n    }), offset);\n  }\n  obj[this.valKey] = val;\n  res = datarw.poolReadFrom(destResult, buffer, offset);\n  if (!res.err) {\n    obj[this.dataKey] = res.value;\n  }\n  return res;\n};\nfunction Pair(a, b) {\n  Array.call(this);\n  this[0] = a;\n  this[1] = b;\n}\ninherits(Pair, Array);\nSwitchRW.Pair = Pair;","map":{"version":3,"names":["module","exports","SwitchRW","inherits","require","BufferRW","errors","valrw","cases","opts","cons","Pair","valKey","dataKey","structMode","poolReadFrom","structReadFrom","call","prototype","poolByteLength","destResult","obj","val","data","datarw","undefined","reset","WriteInvalidSwitchValue","value","err","vallen","length","caselen","poolWriteInto","buffer","offset","res","ReadInvalidSwitchValue","poolStructReadFrom","a","b","Array"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/switch.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = SwitchRW;\n\nvar inherits = require('util').inherits;\n\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\n// TODO: cases should be an es6 map\n\nfunction SwitchRW(valrw, cases, opts) {\n    if (!(this instanceof SwitchRW)) {\n        return new SwitchRW(valrw, cases, opts);\n    }\n    opts = opts || {};\n    this.valrw = valrw;\n    this.cases = cases;\n    this.cons = opts.cons || Pair;\n    this.valKey = opts.valKey || '0';\n    this.dataKey = opts.dataKey || '1';\n    // istanbul ignore if TODO\n    if (opts.structMode) {\n        this.poolReadFrom = this.structReadFrom;\n    }\n\n    BufferRW.call(this);\n}\ninherits(SwitchRW, BufferRW);\n\nSwitchRW.prototype.poolByteLength = function poolByteLength(destResult, obj) {\n    var val = obj[this.valKey];\n    var data = obj[this.dataKey];\n    var datarw = this.cases[val];\n    if (datarw === undefined) {\n        return destResult.reset(errors.WriteInvalidSwitchValue({\n            value: val\n        }));\n    }\n    this.valrw.poolByteLength(destResult, val);\n    if (destResult.err) return destResult;\n    var vallen = destResult.length;\n\n    datarw.poolByteLength(destResult, data);\n    if (destResult.err) return destResult;\n    var caselen = destResult.length;\n\n    return destResult.reset(null, caselen + vallen);\n};\n\nSwitchRW.prototype.poolWriteInto = function poolWriteInto(destResult, obj, buffer, offset) {\n    var val = obj[this.valKey];\n    var data = obj[this.dataKey];\n    var datarw = this.cases[val];\n    if (datarw === undefined) {\n        return destResult.reset(errors.WriteInvalidSwitchValue({\n            value: val\n        }), offset);\n    }\n    var res = this.valrw.poolWriteInto(destResult, val, buffer, offset);\n    if (res.err) return res;\n    res = datarw.poolWriteInto(destResult, data, buffer, res.offset);\n    return res;\n};\n\nSwitchRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    var res = this.valrw.poolReadFrom(destResult, buffer, offset);\n    if (res.err) return res;\n    offset = res.offset;\n    var val = res.value;\n    var datarw = this.cases[val];\n    if (datarw === undefined) {\n        return destResult.reset(errors.ReadInvalidSwitchValue({\n            value: val\n        }), offset);\n    }\n    res = datarw.poolReadFrom(destResult, buffer, offset);\n    if (res.err) return res;\n    offset = res.offset;\n    var data = res.value;\n    var obj = new this.cons(val, data);\n    return destResult.reset(null, offset, obj);\n};\n\n// istanbul ignore next TODO\nSwitchRW.prototype.poolStructReadFrom = \nfunction poolStructReadFrom(destResult, obj, buffer, offset) {\n    var res = this.valrw.poolReadFrom(destResult, buffer, offset);\n    if (res.err) return res;\n    offset = res.offset;\n    var val = res.value;\n    var datarw = this.cases[val];\n    if (datarw === undefined) {\n        return destResult.reset(errors.ReadInvalidSwitchValue({\n            value: val\n        }), offset);\n    }\n    obj[this.valKey] = val;\n    res = datarw.poolReadFrom(destResult, buffer, offset);\n    if (!res.err) {\n        obj[this.dataKey] = res.value;\n    }\n    return res;\n};\n\nfunction Pair(a, b) {\n    Array.call(this);\n    this[0] = a;\n    this[1] = b;\n}\ninherits(Pair, Array);\n\nSwitchRW.Pair = Pair;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}