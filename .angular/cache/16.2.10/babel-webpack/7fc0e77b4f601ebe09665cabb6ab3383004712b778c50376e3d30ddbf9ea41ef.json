{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { getOtlpEncoder } from '../common';\nimport { toAnyValue, toAttributes, toKeyValue } from '../common/internal';\nexport function createExportLogsServiceRequest(logRecords, options) {\n  var encoder = getOtlpEncoder(options);\n  return {\n    resourceLogs: logRecordsToResourceLogs(logRecords, encoder)\n  };\n}\nfunction createResourceMap(logRecords) {\n  var e_1, _a;\n  var resourceMap = new Map();\n  try {\n    for (var logRecords_1 = __values(logRecords), logRecords_1_1 = logRecords_1.next(); !logRecords_1_1.done; logRecords_1_1 = logRecords_1.next()) {\n      var record = logRecords_1_1.value;\n      var resource = record.resource,\n        _b = record.instrumentationScope,\n        name_1 = _b.name,\n        _c = _b.version,\n        version = _c === void 0 ? '' : _c,\n        _d = _b.schemaUrl,\n        schemaUrl = _d === void 0 ? '' : _d;\n      var ismMap = resourceMap.get(resource);\n      if (!ismMap) {\n        ismMap = new Map();\n        resourceMap.set(resource, ismMap);\n      }\n      var ismKey = name_1 + \"@\" + version + \":\" + schemaUrl;\n      var records = ismMap.get(ismKey);\n      if (!records) {\n        records = [];\n        ismMap.set(ismKey, records);\n      }\n      records.push(record);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (logRecords_1_1 && !logRecords_1_1.done && (_a = logRecords_1.return)) _a.call(logRecords_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return resourceMap;\n}\nfunction logRecordsToResourceLogs(logRecords, encoder) {\n  var resourceMap = createResourceMap(logRecords);\n  return Array.from(resourceMap, function (_a) {\n    var _b = __read(_a, 2),\n      resource = _b[0],\n      ismMap = _b[1];\n    return {\n      resource: {\n        attributes: toAttributes(resource.attributes),\n        droppedAttributesCount: 0\n      },\n      scopeLogs: Array.from(ismMap, function (_a) {\n        var _b = __read(_a, 2),\n          scopeLogs = _b[1];\n        var _c = scopeLogs[0].instrumentationScope,\n          name = _c.name,\n          version = _c.version,\n          schemaUrl = _c.schemaUrl;\n        return {\n          scope: {\n            name: name,\n            version: version\n          },\n          logRecords: scopeLogs.map(function (log) {\n            return toLogRecord(log, encoder);\n          }),\n          schemaUrl: schemaUrl\n        };\n      }),\n      schemaUrl: undefined\n    };\n  });\n}\nfunction toLogRecord(log, encoder) {\n  var _a, _b, _c;\n  return {\n    timeUnixNano: encoder.encodeHrTime(log.hrTime),\n    observedTimeUnixNano: encoder.encodeHrTime(log.hrTimeObserved),\n    severityNumber: toSeverityNumber(log.severityNumber),\n    severityText: log.severityText,\n    body: toAnyValue(log.body),\n    attributes: toLogAttributes(log.attributes),\n    droppedAttributesCount: 0,\n    flags: (_a = log.spanContext) === null || _a === void 0 ? void 0 : _a.traceFlags,\n    traceId: encoder.encodeOptionalSpanContext((_b = log.spanContext) === null || _b === void 0 ? void 0 : _b.traceId),\n    spanId: encoder.encodeOptionalSpanContext((_c = log.spanContext) === null || _c === void 0 ? void 0 : _c.spanId)\n  };\n}\nfunction toSeverityNumber(severityNumber) {\n  return severityNumber;\n}\nexport function toLogAttributes(attributes) {\n  return Object.keys(attributes).map(function (key) {\n    return toKeyValue(key, attributes[key]);\n  });\n}","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","ar","e","push","error","getOtlpEncoder","toAnyValue","toAttributes","toKeyValue","createExportLogsServiceRequest","logRecords","options","encoder","resourceLogs","logRecordsToResourceLogs","createResourceMap","e_1","_a","resourceMap","Map","logRecords_1","logRecords_1_1","record","resource","_b","instrumentationScope","name_1","name","_c","version","_d","schemaUrl","ismMap","get","set","ismKey","records","e_1_1","return","Array","from","attributes","droppedAttributesCount","scopeLogs","scope","map","log","toLogRecord","undefined","timeUnixNano","encodeHrTime","hrTime","observedTimeUnixNano","hrTimeObserved","severityNumber","toSeverityNumber","severityText","body","toLogAttributes","flags","spanContext","traceFlags","traceId","encodeOptionalSpanContext","spanId","Object","keys","key"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/otlp-transformer/build/esm/logs/index.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { getOtlpEncoder } from '../common';\nimport { toAnyValue, toAttributes, toKeyValue } from '../common/internal';\nexport function createExportLogsServiceRequest(logRecords, options) {\n    var encoder = getOtlpEncoder(options);\n    return {\n        resourceLogs: logRecordsToResourceLogs(logRecords, encoder),\n    };\n}\nfunction createResourceMap(logRecords) {\n    var e_1, _a;\n    var resourceMap = new Map();\n    try {\n        for (var logRecords_1 = __values(logRecords), logRecords_1_1 = logRecords_1.next(); !logRecords_1_1.done; logRecords_1_1 = logRecords_1.next()) {\n            var record = logRecords_1_1.value;\n            var resource = record.resource, _b = record.instrumentationScope, name_1 = _b.name, _c = _b.version, version = _c === void 0 ? '' : _c, _d = _b.schemaUrl, schemaUrl = _d === void 0 ? '' : _d;\n            var ismMap = resourceMap.get(resource);\n            if (!ismMap) {\n                ismMap = new Map();\n                resourceMap.set(resource, ismMap);\n            }\n            var ismKey = name_1 + \"@\" + version + \":\" + schemaUrl;\n            var records = ismMap.get(ismKey);\n            if (!records) {\n                records = [];\n                ismMap.set(ismKey, records);\n            }\n            records.push(record);\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (logRecords_1_1 && !logRecords_1_1.done && (_a = logRecords_1.return)) _a.call(logRecords_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return resourceMap;\n}\nfunction logRecordsToResourceLogs(logRecords, encoder) {\n    var resourceMap = createResourceMap(logRecords);\n    return Array.from(resourceMap, function (_a) {\n        var _b = __read(_a, 2), resource = _b[0], ismMap = _b[1];\n        return ({\n            resource: {\n                attributes: toAttributes(resource.attributes),\n                droppedAttributesCount: 0,\n            },\n            scopeLogs: Array.from(ismMap, function (_a) {\n                var _b = __read(_a, 2), scopeLogs = _b[1];\n                var _c = scopeLogs[0].instrumentationScope, name = _c.name, version = _c.version, schemaUrl = _c.schemaUrl;\n                return {\n                    scope: { name: name, version: version },\n                    logRecords: scopeLogs.map(function (log) { return toLogRecord(log, encoder); }),\n                    schemaUrl: schemaUrl,\n                };\n            }),\n            schemaUrl: undefined,\n        });\n    });\n}\nfunction toLogRecord(log, encoder) {\n    var _a, _b, _c;\n    return {\n        timeUnixNano: encoder.encodeHrTime(log.hrTime),\n        observedTimeUnixNano: encoder.encodeHrTime(log.hrTimeObserved),\n        severityNumber: toSeverityNumber(log.severityNumber),\n        severityText: log.severityText,\n        body: toAnyValue(log.body),\n        attributes: toLogAttributes(log.attributes),\n        droppedAttributesCount: 0,\n        flags: (_a = log.spanContext) === null || _a === void 0 ? void 0 : _a.traceFlags,\n        traceId: encoder.encodeOptionalSpanContext((_b = log.spanContext) === null || _b === void 0 ? void 0 : _b.traceId),\n        spanId: encoder.encodeOptionalSpanContext((_c = log.spanContext) === null || _c === void 0 ? void 0 : _c.spanId),\n    };\n}\nfunction toSeverityNumber(severityNumber) {\n    return severityNumber;\n}\nexport function toLogAttributes(attributes) {\n    return Object.keys(attributes).map(function (key) { return toKeyValue(key, attributes[key]); });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}