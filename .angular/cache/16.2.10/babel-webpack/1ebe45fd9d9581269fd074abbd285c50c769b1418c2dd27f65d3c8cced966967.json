{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */function () {\n  /**\n   * Initialize a new Reference instance.\n   *\n   * @param {string} type - the Reference type constant (e.g.,\n   *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n   * @param {SpanContext} referencedContext - the SpanContext being referred\n   *        to. As a convenience, a Span instance may be passed in instead\n   *        (in which case its .context() is used here).\n   */\n  function Reference(type, referencedContext) {\n    this._type = type;\n    this._referencedContext = referencedContext instanceof span_1.default ? referencedContext.context() : referencedContext;\n  }\n  /**\n   * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n   *         REFERENCE_FOLLOWS_FROM).\n   */\n  Reference.prototype.type = function () {\n    return this._type;\n  };\n  /**\n   * @return {SpanContext} The SpanContext being referred to (e.g., the\n   *         parent in a REFERENCE_CHILD_OF Reference).\n   */\n  Reference.prototype.referencedContext = function () {\n    return this._referencedContext;\n  };\n  return Reference;\n}();\nexports.default = Reference;","map":{"version":3,"names":["Object","defineProperty","exports","value","span_1","require","Reference","type","referencedContext","_type","_referencedContext","default","context","prototype"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/opentracing/lib/reference.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar span_1 = require(\"./span\");\n/**\n * Reference pairs a reference type constant (e.g., REFERENCE_CHILD_OF or\n * REFERENCE_FOLLOWS_FROM) with the SpanContext it points to.\n *\n * See the exported childOf() and followsFrom() functions at the package level.\n */\nvar Reference = /** @class */ (function () {\n    /**\n     * Initialize a new Reference instance.\n     *\n     * @param {string} type - the Reference type constant (e.g.,\n     *        REFERENCE_CHILD_OF or REFERENCE_FOLLOWS_FROM).\n     * @param {SpanContext} referencedContext - the SpanContext being referred\n     *        to. As a convenience, a Span instance may be passed in instead\n     *        (in which case its .context() is used here).\n     */\n    function Reference(type, referencedContext) {\n        this._type = type;\n        this._referencedContext = (referencedContext instanceof span_1.default ?\n            referencedContext.context() :\n            referencedContext);\n    }\n    /**\n     * @return {string} The Reference type (e.g., REFERENCE_CHILD_OF or\n     *         REFERENCE_FOLLOWS_FROM).\n     */\n    Reference.prototype.type = function () {\n        return this._type;\n    };\n    /**\n     * @return {SpanContext} The SpanContext being referred to (e.g., the\n     *         parent in a REFERENCE_CHILD_OF Reference).\n     */\n    Reference.prototype.referencedContext = function () {\n        return this._referencedContext;\n    };\n    return Reference;\n}());\nexports.default = Reference;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAe,YAAY;EACvC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,SAASA,CAACC,IAAI,EAAEC,iBAAiB,EAAE;IACxC,IAAI,CAACC,KAAK,GAAGF,IAAI;IACjB,IAAI,CAACG,kBAAkB,GAAIF,iBAAiB,YAAYJ,MAAM,CAACO,OAAO,GAClEH,iBAAiB,CAACI,OAAO,CAAC,CAAC,GAC3BJ,iBAAkB;EAC1B;EACA;AACJ;AACA;AACA;EACIF,SAAS,CAACO,SAAS,CAACN,IAAI,GAAG,YAAY;IACnC,OAAO,IAAI,CAACE,KAAK;EACrB,CAAC;EACD;AACJ;AACA;AACA;EACIH,SAAS,CAACO,SAAS,CAACL,iBAAiB,GAAG,YAAY;IAChD,OAAO,IAAI,CAACE,kBAAkB;EAClC,CAAC;EACD,OAAOJ,SAAS;AACpB,CAAC,CAAC,CAAE;AACJJ,OAAO,CAACS,OAAO,GAAGL,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}