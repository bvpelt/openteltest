{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[0, 99] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar inherits = require('util').inherits;\nvar errors = require('./errors');\n\n// RW a thrift map to an Object\n\n// ktype:1 vtype:1 length:4 (k... v...){length}\n\nfunction MapObjectRW(ktype, vtype) {\n  this.ktype = ktype;\n  this.vtype = vtype;\n  if (this.vtype.rw.width) {\n    this.poolByteLength = this.mapVarFixbyteLength;\n  }\n  bufrw.Base.call(this);\n}\ninherits(MapObjectRW, bufrw.Base);\nMapObjectRW.prototype.poolByteLength = function mapVarVarByteLength(destResult, obj) {\n  var keys = obj && Object.keys(obj);\n  var len = 6; // static overhead\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    var res = this.ktype.rw.poolByteLength(destResult, key);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n    res = this.vtype.rw.poolByteLength(destResult, value);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n  }\n  return destResult.reset(null, len);\n};\nMapObjectRW.prototype.mapVarFixbyteLength = function mapVarFixByteLength(destResult, obj) {\n  var keys = obj && Object.keys(obj);\n  var len = 6 + keys.length * this.vtype.rw.width;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var res = this.ktype.rw.poolByteLength(destResult, key);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n  }\n  return destResult.reset(null, len);\n};\nMapObjectRW.prototype.poolWriteInto = function poolWriteInto(destResult, obj, buffer, offset) {\n  // ktype:1\n  var res = bufrw.UInt8.poolWriteInto(destResult, this.ktype.typeid, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n\n  // vtype:1\n  res = bufrw.UInt8.poolWriteInto(destResult, this.vtype.typeid, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n\n  // length:4\n  var keys = obj && Object.keys(obj);\n  res = bufrw.UInt32BE.poolWriteInto(destResult, keys.length, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n\n  // (k... v...){length}\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n\n    // k...\n    res = this.ktype.rw.poolWriteInto(destResult, key, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // v...\n    res = this.vtype.rw.poolWriteInto(destResult, value, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n  }\n  return destResult.reset(null, offset);\n};\nMapObjectRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  // ktype:1\n  var res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n  var ktypeid = res.value;\n  if (ktypeid !== this.ktype.typeid) {\n    return destResult.reset(errors.MapKeyTypeIdMismatch({\n      encoded: ktypeid,\n      expected: this.ktype.name,\n      expectedId: this.ktype.typeid\n    }), offset);\n  }\n\n  // vtype:1\n  res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n  var vtypeid = res.value;\n  if (vtypeid !== this.vtype.typeid) {\n    return destResult.reset(errors.MapValTypeIdMismatch({\n      encoded: vtypeid,\n      expected: this.vtype.name,\n      expectedId: this.vtype.typeid\n    }), offset);\n  }\n\n  // length:4\n  res = bufrw.UInt32BE.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n  var length = res.value;\n\n  // (k... v...){length}\n  var obj = {};\n  for (var i = 0; i < length; i++) {\n    // k...\n    res = this.ktype.rw.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var key = res.value;\n\n    // v...\n    res = this.vtype.rw.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var val = res.value;\n    obj[key] = val;\n  }\n  return destResult.reset(null, offset, obj);\n};\nmodule.exports.MapObjectRW = MapObjectRW;","map":{"version":3,"names":["bufrw","require","inherits","errors","MapObjectRW","ktype","vtype","rw","width","poolByteLength","mapVarFixbyteLength","Base","call","prototype","mapVarVarByteLength","destResult","obj","keys","Object","len","i","length","key","value","res","err","reset","mapVarFixByteLength","poolWriteInto","buffer","offset","UInt8","typeid","UInt32BE","poolReadFrom","ktypeid","MapKeyTypeIdMismatch","encoded","expected","name","expectedId","vtypeid","MapValTypeIdMismatch","val","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/map-object.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[0, 99] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar inherits = require('util').inherits;\nvar errors = require('./errors');\n\n// RW a thrift map to an Object\n\n// ktype:1 vtype:1 length:4 (k... v...){length}\n\nfunction MapObjectRW(ktype, vtype) {\n    this.ktype = ktype;\n    this.vtype = vtype;\n\n    if (this.vtype.rw.width) {\n        this.poolByteLength = this.mapVarFixbyteLength;\n    }\n\n    bufrw.Base.call(this);\n}\ninherits(MapObjectRW, bufrw.Base);\n\nMapObjectRW.prototype.poolByteLength = function mapVarVarByteLength(destResult, obj) {\n    var keys = obj && Object.keys(obj);\n    var len = 6; // static overhead\n\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = obj[key];\n        var res = this.ktype.rw.poolByteLength(destResult, key);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n\n        res = this.vtype.rw.poolByteLength(destResult, value);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n    }\n\n    return destResult.reset(null, len);\n};\n\nMapObjectRW.prototype.mapVarFixbyteLength = function mapVarFixByteLength(destResult, obj) {\n    var keys = obj && Object.keys(obj);\n    var len = 6 + keys.length * this.vtype.rw.width;\n\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var res = this.ktype.rw.poolByteLength(destResult, key);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n    }\n\n    return destResult.reset(null, len);\n};\n\nMapObjectRW.prototype.poolWriteInto = function poolWriteInto(destResult, obj, buffer, offset) {\n    // ktype:1\n    var res = bufrw.UInt8.poolWriteInto(destResult, this.ktype.typeid, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // vtype:1\n    res = bufrw.UInt8.poolWriteInto(destResult, this.vtype.typeid, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // length:4\n    var keys = obj && Object.keys(obj);\n    res = bufrw.UInt32BE.poolWriteInto(destResult, keys.length, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // (k... v...){length}\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var value = obj[key];\n\n        // k...\n        res = this.ktype.rw.poolWriteInto(destResult, key, buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n\n        // v...\n        res = this.vtype.rw.poolWriteInto(destResult, value, buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n    }\n\n    return destResult.reset(null, offset);\n};\n\nMapObjectRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    // ktype:1\n    var res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var ktypeid = res.value;\n\n    if (ktypeid !== this.ktype.typeid) {\n        return destResult.reset(errors.MapKeyTypeIdMismatch({\n            encoded: ktypeid,\n            expected: this.ktype.name,\n            expectedId: this.ktype.typeid\n        }), offset);\n    }\n\n    // vtype:1\n    res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var vtypeid = res.value;\n\n    if (vtypeid !== this.vtype.typeid) {\n        return destResult.reset(errors.MapValTypeIdMismatch({\n            encoded: vtypeid,\n            expected: this.vtype.name,\n            expectedId: this.vtype.typeid\n        }), offset);\n    }\n\n    // length:4\n    res = bufrw.UInt32BE.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var length = res.value;\n\n    // (k... v...){length}\n    var obj = {};\n    for (var i = 0; i < length; i++) {\n\n        // k...\n        res = this.ktype.rw.poolReadFrom(destResult, buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n        var key = res.value;\n\n        // v...\n        res = this.vtype.rw.poolReadFrom(destResult, buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n        var val = res.value;\n\n        obj[key] = val;\n    }\n\n    return destResult.reset(null, offset, obj);\n};\n\nmodule.exports.MapObjectRW = MapObjectRW;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}