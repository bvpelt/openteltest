{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar util = require('util');\nvar ThriftStruct = require('./struct').ThriftStruct;\nfunction ThriftUnion(options) {\n  ThriftStruct.call(this, options);\n}\nutil.inherits(ThriftUnion, ThriftStruct);\nThriftUnion.prototype.isUnion = true;\nThriftUnion.prototype.models = 'type';\nThriftUnion.prototype.createConstructor = function createConstructor(name, fields) {\n  function Union(options) {\n    this.type = null;\n    if (typeof options !== 'object') {\n      return;\n    }\n    for (var type in options) {\n      // istanbul ignore else\n      if (hasOwnProperty.call(options, type) && options[type] !== null) {\n        this.type = type;\n        this[type] = options[type];\n      }\n      // TODO assert no further names\n    }\n  }\n\n  return Union;\n};\nThriftUnion.prototype.set = function set(union, key, value) {\n  // TODO return error if multiple values\n  union.type = key;\n  union[key] = value;\n};\nmodule.exports.ThriftUnion = ThriftUnion;","map":{"version":3,"names":["util","require","ThriftStruct","ThriftUnion","options","call","inherits","prototype","isUnion","models","createConstructor","name","fields","Union","type","hasOwnProperty","set","union","key","value","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/union.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar util = require('util');\nvar ThriftStruct = require('./struct').ThriftStruct;\n\nfunction ThriftUnion(options) {\n    ThriftStruct.call(this, options);\n}\n\nutil.inherits(ThriftUnion, ThriftStruct);\n\nThriftUnion.prototype.isUnion = true;\nThriftUnion.prototype.models = 'type';\n\nThriftUnion.prototype.createConstructor = function createConstructor(name, fields) {\n    function Union(options) {\n        this.type = null;\n        if (typeof options !== 'object') {\n            return;\n        }\n        for (var type in options) {\n            // istanbul ignore else\n            if (\n                hasOwnProperty.call(options, type) &&\n                options[type] !== null\n            ) {\n                this.type = type;\n                this[type] = options[type];\n            }\n            // TODO assert no further names\n        }\n    }\n\n    return Union;\n};\n\nThriftUnion.prototype.set = function set(union, key, value) {\n    // TODO return error if multiple values\n    union.type = key;\n    union[key] = value;\n};\n\nmodule.exports.ThriftUnion = ThriftUnion;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,YAAY,GAAGD,OAAO,CAAC,UAAU,CAAC,CAACC,YAAY;AAEnD,SAASC,WAAWA,CAACC,OAAO,EAAE;EAC1BF,YAAY,CAACG,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;AACpC;AAEAJ,IAAI,CAACM,QAAQ,CAACH,WAAW,EAAED,YAAY,CAAC;AAExCC,WAAW,CAACI,SAAS,CAACC,OAAO,GAAG,IAAI;AACpCL,WAAW,CAACI,SAAS,CAACE,MAAM,GAAG,MAAM;AAErCN,WAAW,CAACI,SAAS,CAACG,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC/E,SAASC,KAAKA,CAACT,OAAO,EAAE;IACpB,IAAI,CAACU,IAAI,GAAG,IAAI;IAChB,IAAI,OAAOV,OAAO,KAAK,QAAQ,EAAE;MAC7B;IACJ;IACA,KAAK,IAAIU,IAAI,IAAIV,OAAO,EAAE;MACtB;MACA,IACIW,cAAc,CAACV,IAAI,CAACD,OAAO,EAAEU,IAAI,CAAC,IAClCV,OAAO,CAACU,IAAI,CAAC,KAAK,IAAI,EACxB;QACE,IAAI,CAACA,IAAI,GAAGA,IAAI;QAChB,IAAI,CAACA,IAAI,CAAC,GAAGV,OAAO,CAACU,IAAI,CAAC;MAC9B;MACA;IACJ;EACJ;;EAEA,OAAOD,KAAK;AAChB,CAAC;AAEDV,WAAW,CAACI,SAAS,CAACS,GAAG,GAAG,SAASA,GAAGA,CAACC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACxD;EACAF,KAAK,CAACH,IAAI,GAAGI,GAAG;EAChBD,KAAK,CAACC,GAAG,CAAC,GAAGC,KAAK;AACtB,CAAC;AAEDC,MAAM,CAACC,OAAO,CAAClB,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}