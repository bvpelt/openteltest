{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar hex = require('hexer');\nvar color = require('ansi-color').set;\nvar stripColor = require('./lib/strip_color.js');\nvar extend = require('xtend');\nvar inspect = require('util').inspect;\nfunction AnnotatedBuffer(buffer) {\n  this.buffer = buffer;\n  this.annotations = [];\n}\nObject.defineProperty(AnnotatedBuffer.prototype, 'length', {\n  enumerable: true,\n  get: function getLength() {\n    return this.buffer.length;\n  }\n});\n\n// -- strings\n\nAnnotatedBuffer.prototype.toString = function toString(encoding, start, end) {\n  var value = this.buffer.toString(encoding, start, end);\n  this.annotations.push({\n    kind: 'read',\n    name: 'string',\n    value: value,\n    encoding: encoding,\n    start: start,\n    end: end\n  });\n  return value;\n};\n\n// -- bytes\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.copy = function copy(targetBuffer, targetStart, sourceStart, sourceEnd) {\n  var copied = this.buffer.copy(targetBuffer, targetStart, sourceStart, sourceEnd);\n  // istanbul ignore next\n  var start = sourceStart || 0;\n  var end = sourceEnd || start + copied;\n  this.annotations.push({\n    kind: 'read',\n    name: 'copy',\n    value: this.buffer.slice(start, end),\n    start: start,\n    end: end\n  });\n  return copied;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.slice = function slice(start, end) {\n  var value = this.buffer.slice(start, end);\n  this.annotations.push({\n    kind: 'read',\n    name: 'slice',\n    value: value,\n    start: start,\n    end: end\n  });\n  return value;\n};\n\n// -- atom readers\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  var value = this.buffer.readInt8(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'Int8',\n    value: value,\n    start: offset,\n    end: offset + 1\n  });\n  return value;\n};\nAnnotatedBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  var value = this.buffer.readUInt8(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'UInt8',\n    value: value,\n    start: offset,\n    end: offset + 1\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  var value = this.buffer.readUInt16LE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'UInt16LE',\n    value: value,\n    start: offset,\n    end: offset + 2\n  });\n  return value;\n};\nAnnotatedBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  var value = this.buffer.readUInt16BE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'UInt16BE',\n    value: value,\n    start: offset,\n    end: offset + 2\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  var value = this.buffer.readUInt32LE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'UInt32LE',\n    value: value,\n    start: offset,\n    end: offset + 4\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  var value = this.buffer.readUInt32BE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'UInt32BE',\n    value: value,\n    start: offset,\n    end: offset + 4\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  var value = this.buffer.readInt16LE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'Int16LE',\n    value: value,\n    start: offset,\n    end: offset + 2\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  var value = this.buffer.readInt16BE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'Int16BE',\n    value: value,\n    start: offset,\n    end: offset + 2\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  var value = this.buffer.readInt32LE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'Int32LE',\n    value: value,\n    start: offset,\n    end: offset + 4\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  var value = this.buffer.readInt32BE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'Int32BE',\n    value: value,\n    start: offset,\n    end: offset + 4\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  var value = this.buffer.readFloatLE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'FloatLE',\n    value: value,\n    start: offset,\n    end: offset + 4\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  var value = this.buffer.readFloatBE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'FloatBE',\n    value: value,\n    start: offset,\n    end: offset + 4\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  var value = this.buffer.readDoubleLE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'DoubleLE',\n    value: value,\n    start: offset,\n    end: offset + 8\n  });\n  return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  var value = this.buffer.readDoubleBE(offset, noAssert);\n  this.annotations.push({\n    kind: 'read',\n    name: 'DoubleBE',\n    value: value,\n    start: offset,\n    end: offset + 8\n  });\n  return value;\n};\n\n// -- extras\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.hexdump = function hexdump(options) {\n  var self = this;\n  options = extend(options, {\n    emptyHuman: ' ',\n    annotateLine: annotateLine\n  });\n  if (options.boldStart === undefined) options.boldStart = true;\n  options.decorateHexen = colorRegions;\n  options.decorateHuman = colorRegions;\n  var colors = options.colors || ['magenta', 'cyan', 'yellow', 'green'];\n  var colorI = 0;\n  var annI = 0;\n  var last = 0;\n  return hex(this.buffer, options);\n  function annotateLine(start, end) {\n    var parts = [];\n    for (var i = last; i <= annI; i++) {\n      var ann = self.annotations[i];\n      if (ann && ann.start >= start && ann.start < end) {\n        if (options.colored) {\n          ann.color = colors[i % colors.length];\n        }\n        parts.push(ann);\n        last = i + 1;\n      }\n    }\n    return '  ' + parts.map(function (part) {\n      var desc = part.name;\n      if (typeof part.value !== 'string' && !Buffer.isBuffer(part.value)) {\n        desc += '(' + inspect(part.value) + ')';\n      }\n      if (part.color) {\n        desc = color(desc, part.color);\n      } else if (part.start === part.end) {\n        desc += '@' + part.start.toString(16);\n      } else {\n        desc += '@[' + part.start.toString(16) + ',' + part.end.toString(16) + ']';\n      }\n      if (options.highlight) {\n        desc = options.highlight(part.start, 0, desc);\n      }\n      return desc;\n    }).join(' ');\n  }\n  function colorRegions(i, j, str) {\n    var ann = self.annotations[annI];\n    while (ann && i >= ann.end) {\n      ann = self.annotations[++annI];\n      colorI = (colorI + 1) % colors.length;\n    }\n    if (ann && options.colored && i >= ann.start && i < ann.end) {\n      str = stripColor(str);\n      str = color(str, colors[colorI]);\n      if (i === ann.start && options.boldStart) str = color(str, 'bold');\n    }\n    if (options.highlight) {\n      str = options.highlight(i, j, str);\n    }\n    return str;\n  }\n};\nmodule.exports = AnnotatedBuffer;","map":{"version":3,"names":["hex","require","color","set","stripColor","extend","inspect","AnnotatedBuffer","buffer","annotations","Object","defineProperty","prototype","enumerable","get","getLength","length","toString","encoding","start","end","value","push","kind","name","copy","targetBuffer","targetStart","sourceStart","sourceEnd","copied","slice","readInt8","offset","noAssert","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","hexdump","options","self","emptyHuman","annotateLine","boldStart","undefined","decorateHexen","colorRegions","decorateHuman","colors","colorI","annI","last","parts","i","ann","colored","map","part","desc","Buffer","isBuffer","highlight","join","j","str","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/annotated_buffer.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar hex = require('hexer');\n\nvar color = require('ansi-color').set;\nvar stripColor = require('./lib/strip_color.js');\nvar extend = require('xtend');\nvar inspect = require('util').inspect;\n\nfunction AnnotatedBuffer(buffer) {\n    this.buffer = buffer;\n    this.annotations = [];\n}\n\nObject.defineProperty(AnnotatedBuffer.prototype, 'length', {\n    enumerable: true,\n    get: function getLength() {\n        return this.buffer.length;\n    }\n});\n\n// -- strings\n\nAnnotatedBuffer.prototype.toString = function toString(encoding, start, end) {\n    var value = this.buffer.toString(encoding, start, end);\n    this.annotations.push({\n        kind: 'read',\n        name: 'string',\n        value: value,\n        encoding: encoding,\n        start: start,\n        end: end\n    });\n    return value;\n};\n\n// -- bytes\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.copy = function copy(targetBuffer, targetStart, sourceStart, sourceEnd) {\n    var copied = this.buffer.copy(targetBuffer, targetStart, sourceStart, sourceEnd);\n    // istanbul ignore next\n    var start = sourceStart || 0;\n    var end = sourceEnd || start + copied;\n    this.annotations.push({\n        kind: 'read',\n        name: 'copy',\n        value: this.buffer.slice(start, end),\n        start: start,\n        end: end\n    });\n    return copied;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.slice = function slice(start, end) {\n    var value = this.buffer.slice(start, end);\n    this.annotations.push({\n        kind: 'read',\n        name: 'slice',\n        value: value,\n        start: start,\n        end: end\n    });\n    return value;\n};\n\n// -- atom readers\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    var value = this.buffer.readInt8(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'Int8',\n        value: value,\n        start: offset,\n        end: offset + 1\n    });\n    return value;\n};\n\nAnnotatedBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    var value = this.buffer.readUInt8(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'UInt8',\n        value: value,\n        start: offset,\n        end: offset + 1\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    var value = this.buffer.readUInt16LE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'UInt16LE',\n        value: value,\n        start: offset,\n        end: offset + 2\n    });\n    return value;\n};\n\nAnnotatedBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    var value = this.buffer.readUInt16BE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'UInt16BE',\n        value: value,\n        start: offset,\n        end: offset + 2\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    var value = this.buffer.readUInt32LE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'UInt32LE',\n        value: value,\n        start: offset,\n        end: offset + 4\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    var value = this.buffer.readUInt32BE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'UInt32BE',\n        value: value,\n        start: offset,\n        end: offset + 4\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    var value = this.buffer.readInt16LE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'Int16LE',\n        value: value,\n        start: offset,\n        end: offset + 2\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    var value = this.buffer.readInt16BE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'Int16BE',\n        value: value,\n        start: offset,\n        end: offset + 2\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    var value = this.buffer.readInt32LE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'Int32LE',\n        value: value,\n        start: offset,\n        end: offset + 4\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    var value = this.buffer.readInt32BE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'Int32BE',\n        value: value,\n        start: offset,\n        end: offset + 4\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    var value = this.buffer.readFloatLE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'FloatLE',\n        value: value,\n        start: offset,\n        end: offset + 4\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    var value = this.buffer.readFloatBE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'FloatBE',\n        value: value,\n        start: offset,\n        end: offset + 4\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    var value = this.buffer.readDoubleLE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'DoubleLE',\n        value: value,\n        start: offset,\n        end: offset + 8\n    });\n    return value;\n};\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    var value = this.buffer.readDoubleBE(offset, noAssert);\n    this.annotations.push({\n        kind: 'read',\n        name: 'DoubleBE',\n        value: value,\n        start: offset,\n        end: offset + 8\n    });\n    return value;\n};\n\n// -- extras\n\n// istanbul ignore next\nAnnotatedBuffer.prototype.hexdump = function hexdump(options) {\n    var self = this;\n\n    options = extend(options, {\n        emptyHuman: ' ',\n        annotateLine: annotateLine\n    });\n    if (options.boldStart === undefined) options.boldStart = true;\n    options.decorateHexen = colorRegions;\n    options.decorateHuman = colorRegions;\n    var colors = options.colors || ['magenta', 'cyan', 'yellow', 'green'];\n    var colorI = 0;\n    var annI = 0;\n    var last = 0;\n    return hex(this.buffer, options);\n\n    function annotateLine(start, end) {\n        var parts = [];\n        for (var i = last; i <= annI; i++) {\n            var ann = self.annotations[i];\n            if (ann && ann.start >= start && ann.start < end) {\n                if (options.colored) {\n                    ann.color = colors[i % colors.length];\n                }\n                parts.push(ann);\n                last = i + 1;\n            }\n        }\n        return '  ' + parts.map(function(part) {\n            var desc = part.name;\n            if (typeof part.value !== 'string' &&\n                !Buffer.isBuffer(part.value)) {\n                desc += '(' + inspect(part.value) + ')';\n            }\n            if (part.color) {\n                desc = color(desc, part.color);\n            } else if (part.start === part.end) {\n                desc += '@' + part.start.toString(16);\n            } else {\n                desc += '@[' + part.start.toString(16) + ',' +\n                               part.end.toString(16) + ']';\n            }\n            if (options.highlight) {\n                desc = options.highlight(part.start, 0, desc);\n            }\n            return desc;\n        }).join(' ');\n    }\n\n    function colorRegions(i, j, str) {\n        var ann = self.annotations[annI];\n        while (ann && i >= ann.end) {\n            ann = self.annotations[++annI];\n            colorI = (colorI + 1) % colors.length;\n        }\n\n        if (ann && options.colored &&\n            i >= ann.start &&\n            i < ann.end) {\n            str = stripColor(str);\n            str = color(str, colors[colorI]);\n            if (i === ann.start && options.boldStart) str = color(str, 'bold');\n        }\n\n        if (options.highlight) {\n            str = options.highlight(i, j, str);\n        }\n\n        return str;\n    }\n};\n\nmodule.exports = AnnotatedBuffer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}