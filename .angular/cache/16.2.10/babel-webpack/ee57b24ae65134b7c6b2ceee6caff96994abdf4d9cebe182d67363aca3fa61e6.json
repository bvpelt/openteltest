{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[1, 30] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar assert = require('assert');\nvar TYPE = require('./TYPE');\nvar errors = require('./errors');\nvar util = require('util');\nfunction ThriftList(valueType, annotations) {\n  this.valueType = valueType;\n  this.rw = new ListRW(valueType, this);\n  this.annotations = annotations;\n}\nThriftList.prototype.name = 'list';\nThriftList.prototype.typeid = TYPE.LIST;\nThriftList.prototype.surface = Array;\nThriftList.prototype.models = 'type';\nfunction ListRW(valueType, model) {\n  this.valueType = valueType;\n  this.model = model;\n  bufrw.Base.call(this);\n}\nutil.inherits(ListRW, bufrw.Base);\nListRW.prototype.headerRW = bufrw.Series([bufrw.Int8, bufrw.Int32BE]);\nListRW.prototype.form = {\n  create: function create() {\n    return [];\n  },\n  add: function add(array, value) {\n    array.push(value);\n  },\n  toArray: function toArray(array) {\n    assert(Array.isArray(array), 'list must be expressed as an array');\n    return array;\n  }\n};\nListRW.prototype.poolByteLength = function poolByteLength(destResult, list) {\n  var valueType = this.valueType;\n  list = this.form.toArray(list);\n  var length = 5; // header length\n  var t;\n  for (var i = 0; i < list.length; i++) {\n    t = valueType.rw.poolByteLength(destResult, list[i]);\n    // istanbul ignore if\n    if (t.err) {\n      return t;\n    }\n    length += t.length;\n  }\n  return destResult.reset(null, length);\n};\nListRW.prototype.poolWriteInto = function poolWriteInto(destResult, list, buffer, offset) {\n  var valueType = this.valueType;\n  list = this.form.toArray(list);\n  var t = this.headerRW.poolWriteInto(destResult, [valueType.typeid, list.length], buffer, offset);\n  // istanbul ignore if\n  if (t.err) {\n    return t;\n  }\n  offset = t.offset;\n  for (var i = 0; i < list.length; i++) {\n    t = valueType.rw.poolWriteInto(destResult, list[i], buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n      return t;\n    }\n    offset = t.offset;\n  }\n  return destResult.reset(null, offset);\n};\nListRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  var valueType = this.valueType;\n  var t = this.headerRW.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (t.err) {\n    return t;\n  }\n  offset = t.offset;\n  var valueTypeid = t.value[0];\n  var size = t.value[1];\n  if (valueTypeid !== valueType.typeid) {\n    return destResult.reset(errors.TypeIdMismatch({\n      encoded: valueTypeid,\n      expectedId: valueType.typeid,\n      expected: valueType.name,\n      what: this.model.name\n    }), offset, null);\n  }\n  if (size < 0) {\n    return destResult.reset(errors.InvalidSizeError({\n      size: size,\n      what: this.model.name\n    }), offset, null);\n  }\n  var list = this.form.create();\n  for (var i = 0; i < size; i++) {\n    t = valueType.rw.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n      return t;\n    }\n    offset = t.offset;\n    this.form.add(list, t.value);\n  }\n  return destResult.reset(null, offset, list);\n};\nmodule.exports.ListRW = ListRW;\nmodule.exports.ThriftList = ThriftList;","map":{"version":3,"names":["bufrw","require","assert","TYPE","errors","util","ThriftList","valueType","annotations","rw","ListRW","prototype","name","typeid","LIST","surface","Array","models","model","Base","call","inherits","headerRW","Series","Int8","Int32BE","form","create","add","array","value","push","toArray","isArray","poolByteLength","destResult","list","length","t","i","err","reset","poolWriteInto","buffer","offset","poolReadFrom","valueTypeid","size","TypeIdMismatch","encoded","expectedId","expected","what","InvalidSizeError","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/list.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[1, 30] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar assert = require('assert');\nvar TYPE = require('./TYPE');\nvar errors = require('./errors');\nvar util = require('util');\n\nfunction ThriftList(valueType, annotations) {\n    this.valueType = valueType;\n    this.rw = new ListRW(valueType, this);\n    this.annotations = annotations;\n}\n\nThriftList.prototype.name = 'list';\nThriftList.prototype.typeid = TYPE.LIST;\nThriftList.prototype.surface = Array;\nThriftList.prototype.models = 'type';\n\nfunction ListRW(valueType, model) {\n    this.valueType = valueType;\n    this.model = model;\n\n    bufrw.Base.call(this);\n}\n\nutil.inherits(ListRW, bufrw.Base);\n\nListRW.prototype.headerRW = bufrw.Series([bufrw.Int8, bufrw.Int32BE]);\n\nListRW.prototype.form = {\n    create: function create() {\n        return [];\n    },\n    add: function add(array, value) {\n        array.push(value);\n    },\n    toArray: function toArray(array) {\n        assert(Array.isArray(array), 'list must be expressed as an array');\n        return array;\n    }\n};\n\nListRW.prototype.poolByteLength = function poolByteLength(destResult, list) {\n    var valueType = this.valueType;\n\n    list = this.form.toArray(list);\n\n    var length = 5; // header length\n    var t;\n    for (var i = 0; i < list.length; i++) {\n        t = valueType.rw.poolByteLength(destResult, list[i]);\n        // istanbul ignore if\n        if (t.err) {\n            return t;\n        }\n        length += t.length;\n    }\n    return destResult.reset(null, length);\n};\n\nListRW.prototype.poolWriteInto = function poolWriteInto(destResult, list, buffer, offset) {\n    var valueType = this.valueType;\n\n    list = this.form.toArray(list);\n\n    var t = this.headerRW.poolWriteInto(destResult, [valueType.typeid, list.length],\n        buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n        return t;\n    }\n    offset = t.offset;\n\n    for (var i = 0; i < list.length; i++) {\n        t = valueType.rw.poolWriteInto(destResult, list[i], buffer, offset);\n        // istanbul ignore if\n        if (t.err) {\n            return t;\n        }\n        offset = t.offset;\n    }\n    return destResult.reset(null, offset);\n};\n\nListRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    var valueType = this.valueType;\n\n    var t = this.headerRW.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n        return t;\n    }\n    offset = t.offset;\n    var valueTypeid = t.value[0];\n    var size = t.value[1];\n\n    if (valueTypeid !== valueType.typeid) {\n        return destResult.reset(errors.TypeIdMismatch({\n            encoded: valueTypeid,\n            expectedId: valueType.typeid,\n            expected: valueType.name,\n            what: this.model.name\n        }), offset, null);\n    }\n    if (size < 0) {\n        return destResult.reset(errors.InvalidSizeError({\n            size: size,\n            what: this.model.name\n        }), offset, null);\n    }\n\n    var list = this.form.create();\n\n    for (var i = 0; i < size; i++) {\n        t = valueType.rw.poolReadFrom(destResult, buffer, offset);\n        // istanbul ignore if\n        if (t.err) {\n            return t;\n        }\n        offset = t.offset;\n        this.form.add(list, t.value);\n    }\n    return destResult.reset(null, offset, list);\n};\n\nmodule.exports.ListRW = ListRW;\nmodule.exports.ThriftList = ThriftList;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}