{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = SeriesRW;\nvar inherits = require('util').inherits;\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\nfunction SeriesRW(rws) {\n  if (!Array.isArray(rws) || arguments.length > 1) {\n    rws = Array.prototype.slice.call(arguments);\n  }\n  if (!(this instanceof SeriesRW)) {\n    return new SeriesRW(rws);\n  }\n  this.rws = rws;\n  BufferRW.call(this);\n}\ninherits(SeriesRW, BufferRW);\nSeriesRW.prototype.poolByteLength = function poolByteLength(destResult, values) {\n  if (!Array.isArray(values) && values !== null) {\n    return destResult.reset(errors.expected(values, 'an array or null'));\n  }\n  var length = 0;\n  for (var i = 0; i < this.rws.length; i++) {\n    this.rws[i].poolByteLength(destResult, values && values[i]);\n    if (destResult.err) return destResult;\n    length += destResult.length;\n  }\n  return destResult.reset(null, length);\n};\nSeriesRW.prototype.poolWriteInto = function poolWriteInto(destResult, values, buffer, offset) {\n  if (!Array.isArray(values) && values !== null) {\n    return destResult.reset(errors.expected(values, 'an array or null'), offset);\n  }\n  for (var i = 0; i < this.rws.length; i++) {\n    this.rws[i].poolWriteInto(destResult, values && values[i], buffer, offset);\n    if (destResult.err) return destResult;\n    offset = destResult.offset;\n  }\n  return destResult;\n};\nvar readResult = new ReadResult();\nSeriesRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  // The prior value cannot be reused, even if it is already an array of the right size.\n  // The array may have been captured by reference by the prior consumer.\n  var values = new Array(this.rws.length);\n  for (var i = 0; i < this.rws.length; i++) {\n    this.rws[i].poolReadFrom(readResult, buffer, offset);\n    if (readResult.err) return destResult.copyFrom(readResult);\n    offset = readResult.offset;\n    values[i] = readResult.value;\n  }\n  // The values must be assigned to the result last so reading a series is reentrant.\n  destResult.value = values;\n  return destResult.reset(null, offset, destResult.value);\n};","map":{"version":3,"names":["module","exports","SeriesRW","inherits","require","ReadResult","BufferRW","errors","rws","Array","isArray","arguments","length","prototype","slice","call","poolByteLength","destResult","values","reset","expected","i","err","poolWriteInto","buffer","offset","readResult","poolReadFrom","copyFrom","value"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/series.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = SeriesRW;\n\nvar inherits = require('util').inherits;\n\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\nfunction SeriesRW(rws) {\n    if (!Array.isArray(rws) || arguments.length > 1) {\n        rws = Array.prototype.slice.call(arguments);\n    }\n    if (!(this instanceof SeriesRW)) {\n        return new SeriesRW(rws);\n    }\n    this.rws = rws;\n    BufferRW.call(this);\n}\ninherits(SeriesRW, BufferRW);\n\nSeriesRW.prototype.poolByteLength = function poolByteLength(destResult, values) {\n    if (!Array.isArray(values) && values !== null) {\n        return destResult.reset(errors.expected(values, 'an array or null'));\n    }\n    var length = 0;\n    for (var i = 0; i < this.rws.length; i++) {\n        this.rws[i].poolByteLength(destResult, values && values[i]);\n        if (destResult.err) return destResult;\n        length += destResult.length;\n    }\n    return destResult.reset(null, length);\n};\n\nSeriesRW.prototype.poolWriteInto = function poolWriteInto(destResult, values, buffer, offset) {\n    if (!Array.isArray(values) && values !== null) {\n        return destResult.reset(errors.expected(values, 'an array or null'), offset);\n    }\n    for (var i = 0; i < this.rws.length; i++) {\n        this.rws[i].poolWriteInto(destResult, values && values[i], buffer, offset);\n        if (destResult.err) return destResult;\n        offset = destResult.offset;\n    }\n    return destResult;\n};\n\nvar readResult = new ReadResult();\nSeriesRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    // The prior value cannot be reused, even if it is already an array of the right size.\n    // The array may have been captured by reference by the prior consumer.\n    var values = new Array(this.rws.length);\n    for (var i = 0; i < this.rws.length; i++) {\n        this.rws[i].poolReadFrom(readResult, buffer, offset);\n        if (readResult.err) return destResult.copyFrom(readResult);\n        offset = readResult.offset;\n        values[i] = readResult.value;\n    }\n    // The values must be assigned to the result last so reading a series is reentrant.\n    destResult.value = values;\n    return destResult.reset(null, offset, destResult.value);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}