{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[0, 99] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar inherits = require('util').inherits;\nvar errors = require('./errors');\n\n// RW a thrift map to an array of [k, v] entries\n\n// ktype:1 vtype:1 length:4 (k... v...){length}\n\nfunction MapEntriesRW(ktype, vtype) {\n  this.ktype = ktype;\n  this.vtype = vtype;\n  if (this.ktype.rw.width && this.vtype.rw.width) {\n    this.poolByteLength = this.mapFixFixbyteLength;\n  } else if (this.ktype.rw.width) {\n    this.poolByteLength = this.mapFixVarbyteLength;\n  } else if (this.vtype.rw.width) {\n    this.poolByteLength = this.mapVarFixbyteLength;\n  }\n  bufrw.Base.call(this);\n}\ninherits(MapEntriesRW, bufrw.Base);\nMapEntriesRW.prototype.poolByteLength = function mapVarVarByteLength(destResult, entries) {\n  var len = 6; // static overhead\n\n  for (var i = 0; i < entries.length; i++) {\n    var res = this.ktype.rw.poolByteLength(destResult, entries[i][0]);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n    res = this.vtype.rw.poolByteLength(destResult, entries[i][1]);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n  }\n  return destResult.reset(null, len);\n};\nMapEntriesRW.prototype.mapVarFixbyteLength = function mapVarFixByteLength(destResult, entries) {\n  var len = 6 + entries.length * this.vtype.rw.width;\n  for (var i = 0; i < entries.length; i++) {\n    var res = this.ktype.rw.poolByteLength(destResult, entries[i][0]);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n  }\n  return destResult.reset(null, len);\n};\nMapEntriesRW.prototype.mapFixVarbyteLength = function mapFixVarByteLength(destResult, entries) {\n  var len = 6 + entries.length * this.ktype.rw.width;\n  for (var i = 0; i < entries.length; i++) {\n    var res = this.vtype.rw.poolByteLength(destResult, entries[i][1]);\n    // istanbul ignore if\n    if (res.err) return res;\n    len += res.length;\n  }\n  return destResult.reset(null, len);\n};\nMapEntriesRW.prototype.mapFixFixbyteLength = function mapFixFixByteLength(destResult, entries) {\n  var len = 6 + entries.length * this.ktype.rw.width + entries.length * this.vtype.rw.width;\n  return destResult.reset(null, len);\n};\nMapEntriesRW.prototype.poolWriteInto = function poolWriteInto(destResult, entries, buffer, offset) {\n  // ktype:1\n  var res = bufrw.UInt8.poolWriteInto(destResult, this.ktype.typeid, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n\n  // vtype:1\n  res = bufrw.UInt8.poolWriteInto(destResult, this.vtype.typeid, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n\n  // length:4\n  res = bufrw.UInt32BE.poolWriteInto(destResult, entries.length, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n\n  // (k... v...){length}\n  for (var i = 0; i < entries.length; i++) {\n    var pair = entries[i];\n\n    // k...\n    res = this.ktype.rw.poolWriteInto(destResult, pair[0], buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // v...\n    res = this.vtype.rw.poolWriteInto(destResult, pair[1], buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n  }\n  return destResult.reset(null, offset);\n};\nMapEntriesRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  // ktype:1\n  var res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n  var ktypeid = res.value;\n  if (ktypeid !== this.ktype.typeid) {\n    return destResult.reset(errors.MapKeyTypeIdMismatch({\n      encoded: ktypeid,\n      expected: this.ktype.name,\n      expectedId: this.ktype.typeid\n    }), offset);\n  }\n\n  // vtype:1\n  res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n  var vtypeid = res.value;\n  if (vtypeid !== this.vtype.typeid) {\n    return destResult.reset(errors.MapValTypeIdMismatch({\n      encoded: vtypeid,\n      expected: this.vtype.name,\n      expectedId: this.vtype.typeid\n    }), offset);\n  }\n\n  // length:4\n  res = bufrw.UInt32BE.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (res.err) return res;\n  offset = res.offset;\n  var length = res.value;\n\n  // (k... v...){length}\n  var entries = [];\n  for (var i = 0; i < length; i++) {\n    // k...\n    res = this.ktype.rw.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var key = res.value;\n\n    // v...\n    res = this.vtype.rw.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var val = res.value;\n    entries.push([key, val]);\n  }\n  return destResult.reset(null, offset, entries);\n};\nmodule.exports.MapEntriesRW = MapEntriesRW;","map":{"version":3,"names":["bufrw","require","inherits","errors","MapEntriesRW","ktype","vtype","rw","width","poolByteLength","mapFixFixbyteLength","mapFixVarbyteLength","mapVarFixbyteLength","Base","call","prototype","mapVarVarByteLength","destResult","entries","len","i","length","res","err","reset","mapVarFixByteLength","mapFixVarByteLength","mapFixFixByteLength","poolWriteInto","buffer","offset","UInt8","typeid","UInt32BE","pair","poolReadFrom","ktypeid","value","MapKeyTypeIdMismatch","encoded","expected","name","expectedId","vtypeid","MapValTypeIdMismatch","key","val","push","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/map-entries.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[0, 99] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar inherits = require('util').inherits;\nvar errors = require('./errors');\n\n// RW a thrift map to an array of [k, v] entries\n\n// ktype:1 vtype:1 length:4 (k... v...){length}\n\nfunction MapEntriesRW(ktype, vtype) {\n    this.ktype = ktype;\n    this.vtype = vtype;\n\n    if (this.ktype.rw.width && this.vtype.rw.width) {\n        this.poolByteLength = this.mapFixFixbyteLength;\n    } else if (this.ktype.rw.width) {\n        this.poolByteLength = this.mapFixVarbyteLength;\n    } else if (this.vtype.rw.width) {\n        this.poolByteLength = this.mapVarFixbyteLength;\n    }\n\n    bufrw.Base.call(this);\n}\ninherits(MapEntriesRW, bufrw.Base);\n\nMapEntriesRW.prototype.poolByteLength =\nfunction mapVarVarByteLength(destResult, entries) {\n    var len = 6; // static overhead\n\n    for (var i = 0; i < entries.length; i++) {\n        var res = this.ktype.rw.poolByteLength(destResult, entries[i][0]);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n\n        res = this.vtype.rw.poolByteLength(destResult, entries[i][1]);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n    }\n\n    return destResult.reset(null, len);\n};\n\nMapEntriesRW.prototype.mapVarFixbyteLength =\nfunction mapVarFixByteLength(destResult, entries) {\n    var len = 6 + entries.length * this.vtype.rw.width;\n    for (var i = 0; i < entries.length; i++) {\n        var res = this.ktype.rw.poolByteLength(destResult, entries[i][0]);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n    }\n    return destResult.reset(null, len);\n};\n\nMapEntriesRW.prototype.mapFixVarbyteLength =\nfunction mapFixVarByteLength(destResult, entries) {\n    var len = 6 + entries.length * this.ktype.rw.width;\n    for (var i = 0; i < entries.length; i++) {\n        var res = this.vtype.rw.poolByteLength(destResult, entries[i][1]);\n        // istanbul ignore if\n        if (res.err) return res;\n        len += res.length;\n    }\n    return destResult.reset(null, len);\n};\n\nMapEntriesRW.prototype.mapFixFixbyteLength =\nfunction mapFixFixByteLength(destResult, entries) {\n    var len = 6 +\n        entries.length * this.ktype.rw.width +\n        entries.length * this.vtype.rw.width;\n    return destResult.reset(null, len);\n};\n\nMapEntriesRW.prototype.poolWriteInto =\nfunction poolWriteInto(destResult, entries, buffer, offset) {\n    // ktype:1\n    var res = bufrw.UInt8.poolWriteInto(destResult, this.ktype.typeid, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // vtype:1\n    res = bufrw.UInt8.poolWriteInto(destResult, this.vtype.typeid, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // length:4\n    res = bufrw.UInt32BE.poolWriteInto(destResult, entries.length, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n\n    // (k... v...){length}\n    for (var i = 0; i < entries.length; i++) {\n        var pair = entries[i];\n\n        // k...\n        res = this.ktype.rw.poolWriteInto(destResult, pair[0], buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n\n        // v...\n        res = this.vtype.rw.poolWriteInto(destResult, pair[1], buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n    }\n\n    return destResult.reset(null, offset);\n};\n\nMapEntriesRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    // ktype:1\n    var res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var ktypeid = res.value;\n\n    if (ktypeid !== this.ktype.typeid) {\n        return destResult.reset(errors.MapKeyTypeIdMismatch({\n            encoded: ktypeid,\n            expected: this.ktype.name,\n            expectedId: this.ktype.typeid\n        }), offset);\n    }\n\n    // vtype:1\n    res = bufrw.UInt8.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var vtypeid = res.value;\n\n    if (vtypeid !== this.vtype.typeid) {\n        return destResult.reset(errors.MapValTypeIdMismatch({\n            encoded: vtypeid,\n            expected: this.vtype.name,\n            expectedId: this.vtype.typeid\n        }), offset);\n    }\n\n    // length:4\n    res = bufrw.UInt32BE.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (res.err) return res;\n    offset = res.offset;\n    var length = res.value;\n\n    // (k... v...){length}\n    var entries = [];\n    for (var i = 0; i < length; i++) {\n\n        // k...\n        res = this.ktype.rw.poolReadFrom(destResult, buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n        var key = res.value;\n\n        // v...\n        res = this.vtype.rw.poolReadFrom(destResult, buffer, offset);\n        // istanbul ignore if\n        if (res.err) return res;\n        offset = res.offset;\n        var val = res.value;\n\n        entries.push([key, val]);\n    }\n\n    return destResult.reset(null, offset, entries);\n};\n\nmodule.exports.MapEntriesRW = MapEntriesRW;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}