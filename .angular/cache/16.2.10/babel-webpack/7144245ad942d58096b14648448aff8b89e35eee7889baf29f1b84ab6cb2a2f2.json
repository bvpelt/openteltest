{"ast":null,"code":"var __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\nimport { DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR } from './AggregationSelector';\n/* eslint-disable no-console */\nvar ConsoleMetricExporter = /** @class */function () {\n  function ConsoleMetricExporter(options) {\n    var _a;\n    this._shutdown = false;\n    this._temporalitySelector = (_a = options === null || options === void 0 ? void 0 : options.temporalitySelector) !== null && _a !== void 0 ? _a : DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR;\n  }\n  ConsoleMetricExporter.prototype.export = function (metrics, resultCallback) {\n    if (this._shutdown) {\n      // If the exporter is shutting down, by spec, we need to return FAILED as export result\n      setImmediate(resultCallback, {\n        code: ExportResultCode.FAILED\n      });\n      return;\n    }\n    return ConsoleMetricExporter._sendMetrics(metrics, resultCallback);\n  };\n  ConsoleMetricExporter.prototype.forceFlush = function () {\n    return Promise.resolve();\n  };\n  ConsoleMetricExporter.prototype.selectAggregationTemporality = function (_instrumentType) {\n    return this._temporalitySelector(_instrumentType);\n  };\n  ConsoleMetricExporter.prototype.shutdown = function () {\n    this._shutdown = true;\n    return Promise.resolve();\n  };\n  ConsoleMetricExporter._sendMetrics = function (metrics, done) {\n    var e_1, _a, e_2, _b;\n    try {\n      for (var _c = __values(metrics.scopeMetrics), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var scopeMetrics = _d.value;\n        try {\n          for (var _e = (e_2 = void 0, __values(scopeMetrics.metrics)), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var metric = _f.value;\n            console.dir({\n              descriptor: metric.descriptor,\n              dataPointType: metric.dataPointType,\n              dataPoints: metric.dataPoints\n            });\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    done({\n      code: ExportResultCode.SUCCESS\n    });\n  };\n  return ConsoleMetricExporter;\n}();\nexport { ConsoleMetricExporter };","map":{"version":3,"names":["__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","ExportResultCode","DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR","ConsoleMetricExporter","options","_a","_shutdown","_temporalitySelector","temporalitySelector","prototype","export","metrics","resultCallback","setImmediate","code","FAILED","_sendMetrics","forceFlush","Promise","resolve","selectAggregationTemporality","_instrumentType","shutdown","e_1","e_2","_b","_c","scopeMetrics","_d","_e","_f","metric","console","dir","descriptor","dataPointType","dataPoints","e_2_1","error","return","e_1_1","SUCCESS"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/sdk-metrics/build/esm/export/ConsoleMetricExporter.js"],"sourcesContent":["var __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ExportResultCode } from '@opentelemetry/core';\nimport { DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR, } from './AggregationSelector';\n/* eslint-disable no-console */\nvar ConsoleMetricExporter = /** @class */ (function () {\n    function ConsoleMetricExporter(options) {\n        var _a;\n        this._shutdown = false;\n        this._temporalitySelector =\n            (_a = options === null || options === void 0 ? void 0 : options.temporalitySelector) !== null && _a !== void 0 ? _a : DEFAULT_AGGREGATION_TEMPORALITY_SELECTOR;\n    }\n    ConsoleMetricExporter.prototype.export = function (metrics, resultCallback) {\n        if (this._shutdown) {\n            // If the exporter is shutting down, by spec, we need to return FAILED as export result\n            setImmediate(resultCallback, { code: ExportResultCode.FAILED });\n            return;\n        }\n        return ConsoleMetricExporter._sendMetrics(metrics, resultCallback);\n    };\n    ConsoleMetricExporter.prototype.forceFlush = function () {\n        return Promise.resolve();\n    };\n    ConsoleMetricExporter.prototype.selectAggregationTemporality = function (_instrumentType) {\n        return this._temporalitySelector(_instrumentType);\n    };\n    ConsoleMetricExporter.prototype.shutdown = function () {\n        this._shutdown = true;\n        return Promise.resolve();\n    };\n    ConsoleMetricExporter._sendMetrics = function (metrics, done) {\n        var e_1, _a, e_2, _b;\n        try {\n            for (var _c = __values(metrics.scopeMetrics), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var scopeMetrics = _d.value;\n                try {\n                    for (var _e = (e_2 = void 0, __values(scopeMetrics.metrics)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                        var metric = _f.value;\n                        console.dir({\n                            descriptor: metric.descriptor,\n                            dataPointType: metric.dataPointType,\n                            dataPoints: metric.dataPoints,\n                        });\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        done({ code: ExportResultCode.SUCCESS });\n    };\n    return ConsoleMetricExporter;\n}());\nexport { ConsoleMetricExporter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}