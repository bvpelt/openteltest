{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar assert = require('assert');\nvar bufrw = require('bufrw');\nvar TYPE = require('./TYPE');\nvar errors = require('./errors');\nvar ThriftConst = require('./const').ThriftConst;\nvar ast = require('./ast');\nvar inherits = require('util').inherits;\nvar LengthResult = bufrw.LengthResult;\nfunction ThriftEnum() {\n  this.namesToValues = Object.create(null);\n  this.valuesToNames = Object.create(null);\n  // \"Interned\" names\n  this.namesToNames = Object.create(null);\n  this.namesToAnnotations = Object.create(null);\n  this.surface = this.namesToNames;\n  this.annotations = null;\n  this.rw = new EnumRW(this);\n  this.linked = false;\n}\nThriftEnum.prototype.typeid = TYPE.I32;\nThriftEnum.prototype.models = 'type';\nThriftEnum.prototype.compile = function compile(def, model) {\n  this.name = def.id.name;\n  var value = 0;\n  var enumDefs = def.definitions;\n  for (var index = 0; index < enumDefs.length; index++) {\n    var enumDef = enumDefs[index];\n    var name = enumDef.id.name;\n    var valueDef = enumDef.value;\n    if (valueDef && valueDef.value !== undefined) {\n      value = valueDef.value;\n    }\n    assert(this.namesToValues[name] === undefined, 'duplicate name in enum ' + this.name + ' at ' + def.id.line + ':' + def.id.column);\n    assert(value <= 0x7fffffff, 'overflow in value in enum ' + this.name + ' at ' + def.id.line + ':' + def.id.column);\n    var fullName = this.name + '.' + name;\n    var constDef = new ast.Const(new ast.Identifier(name), null,\n    // TODO infer type for default value validation\n    new ast.Literal(name));\n    var constModel = new ThriftConst(constDef);\n    model.consts[fullName] = constModel;\n    model.define(fullName, enumDef.id, constModel);\n    this.namesToValues[name] = value;\n    this.namesToNames[name] = name;\n    this.valuesToNames[value] = name;\n    this.namesToAnnotations[name] = enumDef.annotations;\n    value++;\n  }\n  this.annotations = def.annotations;\n};\nThriftEnum.prototype.link = function link(model) {\n  if (this.linked) {\n    return this;\n  }\n  this.linked = true;\n  model.enums[this.name] = this.namesToNames;\n\n  // Alias if first character is not lower-case\n  // istanbul ignore else\n  if (!/^[a-z]/.test(this.name)) {\n    model[this.name] = this.surface;\n  }\n  return this;\n};\nfunction EnumRW(model) {\n  this.model = model;\n  bufrw.Base.call(this);\n}\ninherits(EnumRW, bufrw.Base);\nEnumRW.prototype.lengthResult = new LengthResult(null, bufrw.Int32BE.width);\nEnumRW.prototype.poolByteLength = function poolByteLength(destResult) {\n  return destResult.reset(null, bufrw.Int32BE.width);\n};\nEnumRW.prototype.poolWriteInto = function poolWriteInto(destResult, name, buffer, offset) {\n  if (typeof name !== 'string') {\n    return destResult.reset(errors.InvalidEnumerationTypeError({\n      enumName: this.model.name,\n      name: name,\n      nameType: typeof name\n    }), null);\n  }\n  var value = this.model.namesToValues[name];\n  // istanbul ignore if\n  if (value === undefined) {\n    return destResult.reset(errors.InvalidEnumerationNameError({\n      enumName: this.model.name,\n      name: name\n    }), null);\n  }\n  return bufrw.Int32BE.poolWriteInto(destResult, value, buffer, offset);\n};\nEnumRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  var result;\n  result = bufrw.Int32BE.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (result.err) {\n    return result;\n  }\n  offset = result.offset;\n  var value = result.value;\n  var name = this.model.valuesToNames[value];\n  if (!name) {\n    return destResult.reset(errors.InvalidEnumerationValueError({\n      enumName: this.model.name,\n      value: value\n    }), offset, null);\n  }\n  return destResult.reset(null, offset, name);\n};\nmodule.exports.ThriftEnum = ThriftEnum;","map":{"version":3,"names":["assert","require","bufrw","TYPE","errors","ThriftConst","ast","inherits","LengthResult","ThriftEnum","namesToValues","Object","create","valuesToNames","namesToNames","namesToAnnotations","surface","annotations","rw","EnumRW","linked","prototype","typeid","I32","models","compile","def","model","name","id","value","enumDefs","definitions","index","length","enumDef","valueDef","undefined","line","column","fullName","constDef","Const","Identifier","Literal","constModel","consts","define","link","enums","test","Base","call","lengthResult","Int32BE","width","poolByteLength","destResult","reset","poolWriteInto","buffer","offset","InvalidEnumerationTypeError","enumName","nameType","InvalidEnumerationNameError","poolReadFrom","result","err","InvalidEnumerationValueError","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/enum.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar assert = require('assert');\nvar bufrw = require('bufrw');\nvar TYPE = require('./TYPE');\nvar errors = require('./errors');\nvar ThriftConst = require('./const').ThriftConst;\nvar ast = require('./ast');\nvar inherits = require('util').inherits;\n\nvar LengthResult = bufrw.LengthResult;\n\nfunction ThriftEnum() {\n    this.namesToValues = Object.create(null);\n    this.valuesToNames = Object.create(null);\n    // \"Interned\" names\n    this.namesToNames = Object.create(null);\n    this.namesToAnnotations = Object.create(null);\n    this.surface = this.namesToNames;\n    this.annotations = null;\n    this.rw = new EnumRW(this);\n    this.linked = false;\n}\n\nThriftEnum.prototype.typeid = TYPE.I32;\nThriftEnum.prototype.models = 'type';\n\nThriftEnum.prototype.compile = function compile(def, model) {\n    this.name = def.id.name;\n\n    var value = 0;\n    var enumDefs = def.definitions;\n    for (var index = 0; index < enumDefs.length; index++) {\n        var enumDef = enumDefs[index];\n        var name = enumDef.id.name;\n        var valueDef = enumDef.value;\n        if (valueDef && valueDef.value !== undefined) {\n            value = valueDef.value;\n        }\n\n        assert(this.namesToValues[name] === undefined,\n            'duplicate name in enum ' + this.name +\n            ' at ' + def.id.line + ':' + def.id.column);\n        assert(value <= 0x7fffffff,\n            'overflow in value in enum ' + this.name +\n            ' at ' + def.id.line + ':' + def.id.column);\n\n        var fullName = this.name + '.' + name;\n        var constDef = new ast.Const(\n            new ast.Identifier(name),\n            null, // TODO infer type for default value validation\n            new ast.Literal(name)\n        );\n        var constModel = new ThriftConst(constDef);\n        model.consts[fullName] = constModel;\n        model.define(fullName, enumDef.id, constModel);\n        this.namesToValues[name] = value;\n        this.namesToNames[name] = name;\n        this.valuesToNames[value] = name;\n        this.namesToAnnotations[name] = enumDef.annotations;\n        value++;\n    }\n\n    this.annotations = def.annotations;\n};\n\nThriftEnum.prototype.link = function link(model) {\n    if (this.linked) {\n        return this;\n    }\n    this.linked = true;\n\n    model.enums[this.name] = this.namesToNames;\n\n    // Alias if first character is not lower-case\n    // istanbul ignore else\n    if (!/^[a-z]/.test(this.name)) {\n        model[this.name] = this.surface;\n    }\n\n    return this;\n};\n\nfunction EnumRW(model) {\n    this.model = model;\n    bufrw.Base.call(this);\n}\n\ninherits(EnumRW, bufrw.Base);\n\nEnumRW.prototype.lengthResult = new LengthResult(null, bufrw.Int32BE.width);\n\nEnumRW.prototype.poolByteLength = function poolByteLength(destResult) {\n    return destResult.reset(null, bufrw.Int32BE.width);\n};\n\nEnumRW.prototype.poolWriteInto = function poolWriteInto(destResult, name, buffer, offset) {\n    if (typeof name !== 'string') {\n        return destResult.reset(errors.InvalidEnumerationTypeError({\n            enumName: this.model.name,\n            name: name,\n            nameType: typeof name\n        }), null);\n    }\n    var value = this.model.namesToValues[name];\n    // istanbul ignore if\n    if (value === undefined) {\n        return destResult.reset(errors.InvalidEnumerationNameError({\n            enumName: this.model.name,\n            name: name\n        }), null);\n    }\n    return bufrw.Int32BE.poolWriteInto(destResult, value, buffer, offset);\n};\n\nEnumRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    var result;\n    result = bufrw.Int32BE.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (result.err) {\n        return result;\n    }\n    offset = result.offset;\n    var value = result.value;\n    var name = this.model.valuesToNames[value];\n    if (!name) {\n        return destResult.reset(errors.InvalidEnumerationValueError({\n            enumName: this.model.name,\n            value: value\n        }), offset, null);\n    }\n    return destResult.reset(null, offset, name);\n};\n\nmodule.exports.ThriftEnum = ThriftEnum;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}