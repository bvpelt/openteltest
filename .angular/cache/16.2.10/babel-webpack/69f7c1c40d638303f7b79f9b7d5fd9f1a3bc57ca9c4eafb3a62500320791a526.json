{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[0, 99] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar inherits = require('util').inherits;\nvar errors = require('./errors');\nfunction TList(etypeid, elements) {\n  if (!(this instanceof TList)) {\n    return new TList(etypeid, elements);\n  }\n  this.etypeid = etypeid;\n  this.elements = elements || [];\n}\nfunction TListRW(opts) {\n  if (!(this instanceof TListRW)) {\n    return new TListRW(opts);\n  }\n  this.ttypes = opts.ttypes;\n}\ninherits(TListRW, bufrw.Base);\nTListRW.prototype.headerRW = bufrw.Series([bufrw.Int8, bufrw.Int32BE]);\nTListRW.prototype.poolByteLength = function poolByteLength(destResult, list) {\n  var etype = this.ttypes[list.etypeid];\n  if (!etype) {\n    return destResult.reset(errors.InvalidTypeidError({\n      typeid: list.etypeid,\n      what: 'list::etype'\n    }));\n  }\n  var length = 5; // header length\n  var t;\n  for (var i = 0; i < list.elements.length; i++) {\n    t = etype.poolByteLength(destResult, list.elements[i]);\n    // istanbul ignore if\n    if (t.err) {\n      return t;\n    }\n    length += t.length;\n  }\n  return destResult.reset(null, length);\n};\nTListRW.prototype.poolWriteInto = function poolWriteInto(destResult, list, buffer, offset) {\n  var etype = this.ttypes[list.etypeid];\n  if (!etype) {\n    return destResult.reset(errors.InvalidTypeidError({\n      typeid: list.etypeid,\n      what: 'list::etype'\n    }));\n  }\n  var t = this.headerRW.poolWriteInto(destResult, [list.etypeid, list.elements.length], buffer, offset);\n  // istanbul ignore if\n  if (t.err) {\n    return t;\n  }\n  offset = t.offset;\n  for (var i = 0; i < list.elements.length; i++) {\n    t = etype.poolWriteInto(destResult, list.elements[i], buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n      return t;\n    }\n    offset = t.offset;\n  }\n  return destResult.reset(null, offset);\n};\nTListRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  var t = this.headerRW.poolReadFrom(destResult, buffer, offset);\n  // istanbul ignore if\n  if (t.err) {\n    return t;\n  }\n  offset = t.offset;\n  var etypeid = t.value[0];\n  var size = t.value[1];\n  if (size < 0) {\n    return destResult.reset(errors.InvalidSizeError({\n      size: size,\n      what: 'list::size'\n    }), offset);\n  }\n  var list = new TList(etypeid);\n  var etype = this.ttypes[list.etypeid];\n  if (!etype) {\n    return destResult.reset(errors.InvalidTypeidError({\n      typeid: list.etypeid,\n      what: 'list::etype'\n    }), offset);\n  }\n  for (var i = 0; i < size; i++) {\n    t = etype.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n      return t;\n    }\n    offset = t.offset;\n    list.elements.push(t.value);\n  }\n  return destResult.reset(null, offset, list);\n};\nmodule.exports.TList = TList;\nmodule.exports.TListRW = TListRW;","map":{"version":3,"names":["bufrw","require","inherits","errors","TList","etypeid","elements","TListRW","opts","ttypes","Base","prototype","headerRW","Series","Int8","Int32BE","poolByteLength","destResult","list","etype","reset","InvalidTypeidError","typeid","what","length","t","i","err","poolWriteInto","buffer","offset","poolReadFrom","value","size","InvalidSizeError","push","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/tlist.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint max-statements:[0, 99] */\n'use strict';\n\nvar bufrw = require('bufrw');\nvar inherits = require('util').inherits;\nvar errors = require('./errors');\n\nfunction TList(etypeid, elements) {\n    if (!(this instanceof TList)) {\n        return new TList(etypeid, elements);\n    }\n    this.etypeid = etypeid;\n    this.elements = elements || [];\n}\n\nfunction TListRW(opts) {\n    if (!(this instanceof TListRW)) {\n        return new TListRW(opts);\n    }\n    this.ttypes = opts.ttypes;\n}\ninherits(TListRW, bufrw.Base);\n\nTListRW.prototype.headerRW = bufrw.Series([bufrw.Int8, bufrw.Int32BE]);\n\nTListRW.prototype.poolByteLength = function poolByteLength(destResult, list) {\n    var etype = this.ttypes[list.etypeid];\n    if (!etype) {\n        return destResult.reset(errors.InvalidTypeidError({\n            typeid: list.etypeid,\n            what: 'list::etype'\n        }));\n    }\n\n    var length = 5; // header length\n    var t;\n    for (var i = 0; i < list.elements.length; i++) {\n        t = etype.poolByteLength(destResult, list.elements[i]);\n        // istanbul ignore if\n        if (t.err) {\n            return t;\n        }\n        length += t.length;\n    }\n    return destResult.reset(null, length);\n};\n\nTListRW.prototype.poolWriteInto = function poolWriteInto(destResult, list, buffer, offset) {\n    var etype = this.ttypes[list.etypeid];\n    if (!etype) {\n        return destResult.reset(errors.InvalidTypeidError({\n            typeid: list.etypeid,\n            what: 'list::etype'\n        }));\n    }\n\n    var t = this.headerRW.poolWriteInto(destResult, [list.etypeid, list.elements.length],\n        buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n        return t;\n    }\n    offset = t.offset;\n\n    for (var i = 0; i < list.elements.length; i++) {\n        t = etype.poolWriteInto(destResult, list.elements[i], buffer, offset);\n        // istanbul ignore if\n        if (t.err) {\n            return t;\n        }\n        offset = t.offset;\n    }\n    return destResult.reset(null, offset);\n};\n\nTListRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    var t = this.headerRW.poolReadFrom(destResult, buffer, offset);\n    // istanbul ignore if\n    if (t.err) {\n        return t;\n    }\n    offset = t.offset;\n    var etypeid = t.value[0];\n    var size = t.value[1];\n    if (size < 0) {\n        return destResult.reset(errors.InvalidSizeError({\n            size: size,\n            what: 'list::size'\n        }), offset);\n    }\n\n    var list = new TList(etypeid);\n    var etype = this.ttypes[list.etypeid];\n    if (!etype) {\n        return destResult.reset(errors.InvalidTypeidError({\n            typeid: list.etypeid,\n            what: 'list::etype'\n        }), offset);\n    }\n\n    for (var i = 0; i < size; i++) {\n        t = etype.poolReadFrom(destResult, buffer, offset);\n        // istanbul ignore if\n        if (t.err) {\n            return t;\n        }\n        offset = t.offset;\n        list.elements.push(t.value);\n    }\n    return destResult.reset(null, offset, list);\n};\n\nmodule.exports.TList = TList;\nmodule.exports.TListRW = TListRW;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}