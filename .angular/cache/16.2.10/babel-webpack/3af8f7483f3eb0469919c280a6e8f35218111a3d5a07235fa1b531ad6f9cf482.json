{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = VariableBufferRW;\nvar inherits = require('util').inherits;\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\nfunction VariableBufferRW(sizerw, lazy) {\n  if (!(this instanceof VariableBufferRW)) {\n    return new VariableBufferRW(sizerw, lazy);\n  }\n  this.sizerw = sizerw;\n  if (lazy) {\n    this.poolReadFrom = this.lazyPoolReadFrom;\n  } else {\n    this.poolReadFrom = this.eagerPoolReadFrom;\n  }\n  BufferRW.call(this);\n}\ninherits(VariableBufferRW, BufferRW);\nVariableBufferRW.prototype.poolByteLength = function poolByteLength(destResult, buf) {\n  var length = 0;\n  if (Buffer.isBuffer(buf)) {\n    length = buf.length;\n  } else if (buf === null || buf === undefined) {\n    length = 0;\n  } else {\n    return destResult.reset(errors.expected(buf, 'buffer, null, or undefined'), null);\n  }\n  this.sizerw.poolByteLength(destResult, length);\n  if (destResult.err) return destResult;\n  return destResult.reset(null, destResult.length + length);\n};\nVariableBufferRW.prototype.poolWriteInto = function poolWriteInto(destResult, buf, buffer, offset) {\n  var start = offset + this.sizerw.width;\n  var length = 0;\n  if (Buffer.isBuffer(buf)) {\n    length = buf.copy(buffer, start);\n  } else if (buf === null || buf === undefined) {\n    length = 0;\n  } else {\n    return destResult.reset(errors.expected(buf, 'buffer, null, or undefined'), offset);\n  }\n  this.sizerw.poolWriteInto(destResult, length, buffer, offset);\n  if (destResult.err) return destResult;\n  return destResult.reset(null, start + length);\n};\nVariableBufferRW.prototype.eagerPoolReadFrom = function eagerPoolReadFrom(destResult, buffer, offset) {\n  this.sizerw.poolReadFrom(destResult, buffer, offset);\n  if (destResult.err) return destResult;\n  var length = destResult.value;\n  var remain = buffer.length - destResult.offset;\n  if (remain < length) {\n    return ReadResult.poolShortError(destResult, length, remain, offset, destResult.offset);\n  } else {\n    offset = destResult.offset;\n    var buf = Buffer.alloc(length);\n    buffer.copy(buf, 0, offset);\n    return destResult.reset(null, offset + length, buf);\n  }\n};\nVariableBufferRW.prototype.lazyPoolReadFrom = function lazyPoolReadFrom(destResult, buffer, offset) {\n  this.sizerw.poolReadFrom(destResult, buffer, offset);\n  if (destResult.err) return destResult;\n  var length = destResult.value;\n  var remain = buffer.length - destResult.offset;\n  if (remain < length) {\n    return ReadResult.poolShortError(destResult, length, remain, offset, destResult.offset);\n  } else {\n    offset = destResult.offset;\n    var end = offset + length;\n    var buf = buffer.slice(offset, end);\n    return destResult.reset(null, end, buf);\n  }\n};","map":{"version":3,"names":["module","exports","VariableBufferRW","inherits","require","ReadResult","BufferRW","errors","sizerw","lazy","poolReadFrom","lazyPoolReadFrom","eagerPoolReadFrom","call","prototype","poolByteLength","destResult","buf","length","Buffer","isBuffer","undefined","reset","expected","err","poolWriteInto","buffer","offset","start","width","copy","value","remain","poolShortError","alloc","end","slice"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/variable_buffer_rw.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = VariableBufferRW;\n\nvar inherits = require('util').inherits;\n\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\nfunction VariableBufferRW(sizerw, lazy) {\n    if (!(this instanceof VariableBufferRW)) {\n        return new VariableBufferRW(sizerw, lazy);\n    }\n    this.sizerw = sizerw;\n    if (lazy) {\n        this.poolReadFrom = this.lazyPoolReadFrom;\n    } else {\n        this.poolReadFrom = this.eagerPoolReadFrom;\n    }\n    BufferRW.call(this);\n}\ninherits(VariableBufferRW, BufferRW);\n\nVariableBufferRW.prototype.poolByteLength = function poolByteLength(destResult, buf) {\n    var length = 0;\n    if (Buffer.isBuffer(buf)) {\n        length = buf.length;\n    } else if (buf === null || buf === undefined) {\n        length = 0;\n    } else {\n        return destResult.reset(errors.expected(buf, 'buffer, null, or undefined'), null);\n    }\n    this.sizerw.poolByteLength(destResult, length);\n    if (destResult.err) return destResult;\n    return destResult.reset(null, destResult.length + length);\n};\n\nVariableBufferRW.prototype.poolWriteInto = function poolWriteInto(destResult, buf, buffer, offset) {\n    var start = offset + this.sizerw.width;\n    var length = 0;\n    if (Buffer.isBuffer(buf)) {\n        length = buf.copy(buffer, start);\n    } else if (buf === null || buf === undefined) {\n        length = 0;\n    } else {\n        return destResult.reset(errors.expected(buf, 'buffer, null, or undefined'), offset);\n    }\n    this.sizerw.poolWriteInto(destResult, length, buffer, offset);\n    if (destResult.err) return destResult;\n    return destResult.reset(null, start + length);\n};\n\nVariableBufferRW.prototype.eagerPoolReadFrom = function eagerPoolReadFrom(destResult, buffer, offset) {\n    this.sizerw.poolReadFrom(destResult, buffer, offset);\n    if (destResult.err) return destResult;\n    var length = destResult.value;\n    var remain = buffer.length - destResult.offset;\n    if (remain < length) {\n        return ReadResult.poolShortError(destResult, length, remain, offset, destResult.offset);\n    } else {\n        offset = destResult.offset;\n        var buf = Buffer.alloc(length);\n        buffer.copy(buf, 0, offset);\n        return destResult.reset(null, offset + length, buf);\n    }\n};\n\nVariableBufferRW.prototype.lazyPoolReadFrom = function lazyPoolReadFrom(destResult, buffer, offset) {\n    this.sizerw.poolReadFrom(destResult, buffer, offset);\n    if (destResult.err) return destResult;\n    var length = destResult.value;\n    var remain = buffer.length - destResult.offset;\n    if (remain < length) {\n        return ReadResult.poolShortError(destResult, length, remain, offset, destResult.offset);\n    } else {\n        offset = destResult.offset;\n        var end = offset + length;\n        var buf = buffer.slice(offset, end);\n        return destResult.reset(null, end, buf);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}