{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nfunction lengthOfCommonPrefix(strings) {\n  if (strings.length === 0) {\n    return Infinity;\n  }\n  var longest = strings[0];\n  var length = longest.length;\n  for (var i = 1; i < strings.length; i++) {\n    var string = strings[i];\n    for (var j = 0; j < Math.min(length, string.length); j++) {\n      if (string[j] !== longest[j]) {\n        break;\n      }\n    }\n    length = j;\n  }\n  return length;\n}\nfunction longestCommonPath(paths) {\n  var length = lengthOfCommonPrefix(paths);\n  var end = paths[0].lastIndexOf('/', length - 1);\n  return paths[0].slice(0, end + 1);\n}\nmodule.exports.lengthOfCommonPrefix = lengthOfCommonPrefix;\nmodule.exports.longestCommonPath = longestCommonPath;","map":{"version":3,"names":["lengthOfCommonPrefix","strings","length","Infinity","longest","i","string","j","Math","min","longestCommonPath","paths","end","lastIndexOf","slice","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/lib/lcp.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nfunction lengthOfCommonPrefix(strings) {\n    if (strings.length === 0) {\n        return Infinity;\n    }\n    var longest = strings[0];\n    var length = longest.length;\n    for (var i = 1; i < strings.length; i++) {\n        var string = strings[i];\n        for (var j = 0; j < Math.min(length, string.length); j++) {\n            if (string[j] !== longest[j]) {\n                break;\n            }\n        }\n        length = j;\n    }\n    return length;\n}\n\nfunction longestCommonPath(paths) {\n    var length = lengthOfCommonPrefix(paths);\n    var end = paths[0].lastIndexOf('/', length - 1);\n    return paths[0].slice(0, end + 1);\n}\n\nmodule.exports.lengthOfCommonPrefix = lengthOfCommonPrefix;\nmodule.exports.longestCommonPath = longestCommonPath;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,SAASA,oBAAoBA,CAACC,OAAO,EAAE;EACnC,IAAIA,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAOC,QAAQ;EACnB;EACA,IAAIC,OAAO,GAAGH,OAAO,CAAC,CAAC,CAAC;EACxB,IAAIC,MAAM,GAAGE,OAAO,CAACF,MAAM;EAC3B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACC,MAAM,EAAEG,CAAC,EAAE,EAAE;IACrC,IAAIC,MAAM,GAAGL,OAAO,CAACI,CAAC,CAAC;IACvB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACP,MAAM,EAAEI,MAAM,CAACJ,MAAM,CAAC,EAAEK,CAAC,EAAE,EAAE;MACtD,IAAID,MAAM,CAACC,CAAC,CAAC,KAAKH,OAAO,CAACG,CAAC,CAAC,EAAE;QAC1B;MACJ;IACJ;IACAL,MAAM,GAAGK,CAAC;EACd;EACA,OAAOL,MAAM;AACjB;AAEA,SAASQ,iBAAiBA,CAACC,KAAK,EAAE;EAC9B,IAAIT,MAAM,GAAGF,oBAAoB,CAACW,KAAK,CAAC;EACxC,IAAIC,GAAG,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,WAAW,CAAC,GAAG,EAAEX,MAAM,GAAG,CAAC,CAAC;EAC/C,OAAOS,KAAK,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,EAAEF,GAAG,GAAG,CAAC,CAAC;AACrC;AAEAG,MAAM,CAACC,OAAO,CAAChB,oBAAoB,GAAGA,oBAAoB;AAC1De,MAAM,CAACC,OAAO,CAACN,iBAAiB,GAAGA,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}