{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */function (_super) {\n  __extends(GlobalTracerDelegate, _super);\n  function GlobalTracerDelegate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  GlobalTracerDelegate.prototype.startSpan = function () {\n    var tracer = _globalTracer || noopTracer;\n    return tracer.startSpan.apply(tracer, arguments);\n  };\n  GlobalTracerDelegate.prototype.inject = function () {\n    var tracer = _globalTracer || noopTracer;\n    return tracer.inject.apply(tracer, arguments);\n  };\n  GlobalTracerDelegate.prototype.extract = function () {\n    var tracer = _globalTracer || noopTracer;\n    return tracer.extract.apply(tracer, arguments);\n  };\n  return GlobalTracerDelegate;\n}(tracer_1.default);\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n  _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n  // Return the delegate.  Since the global tracer is largely a convenience\n  // (the user can always create their own tracers), the delegate is used to\n  // give the added convenience of not needing to worry about initialization\n  // order.\n  return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","tracer_1","require","noopTracer","default","_globalTracer","GlobalTracerDelegate","_super","apply","arguments","startSpan","tracer","inject","extract","globalTracerDelegate","initGlobalTracer","globalTracer"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/opentracing/lib/global_tracer.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tracer_1 = require(\"./tracer\");\nvar noopTracer = new tracer_1.default();\nvar _globalTracer = null;\n// Allows direct importing/requiring of the global tracer:\n//\n// let globalTracer = require('opentracing/global');\n//      OR\n// import globalTracer from 'opentracing/global';\n//\n// Acts a bridge to the global tracer that can be safely called before the\n// global tracer is initialized. The purpose of the delegation is to avoid the\n// sometimes nearly intractible initialization order problems that can arise in\n// applications with a complex set of dependencies, while also avoiding the\n// case where\nvar GlobalTracerDelegate = /** @class */ (function (_super) {\n    __extends(GlobalTracerDelegate, _super);\n    function GlobalTracerDelegate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalTracerDelegate.prototype.startSpan = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.startSpan.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.inject = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.inject.apply(tracer, arguments);\n    };\n    GlobalTracerDelegate.prototype.extract = function () {\n        var tracer = _globalTracer || noopTracer;\n        return tracer.extract.apply(tracer, arguments);\n    };\n    return GlobalTracerDelegate;\n}(tracer_1.default));\nvar globalTracerDelegate = new GlobalTracerDelegate();\n/**\n * Set the global Tracer.\n *\n * The behavior is undefined if this function is called more than once.\n *\n * @param {Tracer} tracer - the Tracer implementation\n */\nfunction initGlobalTracer(tracer) {\n    _globalTracer = tracer;\n}\nexports.initGlobalTracer = initGlobalTracer;\n/**\n * Returns the global tracer.\n */\nfunction globalTracer() {\n    // Return the delegate.  Since the global tracer is largely a convenience\n    // (the user can always create their own tracers), the delegate is used to\n    // give the added convenience of not needing to worry about initialization\n    // order.\n    return globalTracerDelegate;\n}\nexports.globalTracer = globalTracer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}