{"ast":null,"code":"\"use strict\";\n\nhex.Transform = require('./hex_transform');\nhex.ChunkedTransform = require('./chunked_hex_transform');\nhex.Spy = require('./hex_spy');\nmodule.exports = hex;\nfunction hex(buffer, options) {\n  if (typeof buffer === 'string') {\n    return hex(Buffer(buffer), options);\n  }\n  if (!Buffer.isBuffer(buffer)) {\n    throw new Error('invalid argument to hex, expected a buffer or string');\n  }\n  options = options || {};\n  if (!options.offsetWidth) {\n    options.offsetWidth = 2 * Math.ceil(buffer.length.toString(16).length / 2);\n  }\n  var stream = hex.Transform(options);\n  stream.write(buffer);\n  stream.end();\n  var out = stream.read();\n  if (out === null) {\n    return '';\n  }\n  out = String(out);\n  out = out.replace(/\\n+$/, '');\n  return out;\n}","map":{"version":3,"names":["hex","Transform","require","ChunkedTransform","Spy","module","exports","buffer","options","Buffer","isBuffer","Error","offsetWidth","Math","ceil","length","toString","stream","write","end","out","read","String","replace"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/hexer/index.js"],"sourcesContent":["\"use strict\";\n\nhex.Transform = require('./hex_transform');\nhex.ChunkedTransform = require('./chunked_hex_transform');\nhex.Spy = require('./hex_spy');\n\nmodule.exports = hex;\n\nfunction hex(buffer, options) {\n    if (typeof buffer === 'string') {\n        return hex(Buffer(buffer), options);\n    }\n    if (!Buffer.isBuffer(buffer)) {\n        throw new Error('invalid argument to hex, expected a buffer or string');\n    }\n    options = options || {};\n    if (!options.offsetWidth) {\n        options.offsetWidth = 2 * Math.ceil(buffer.length.toString(16).length / 2);\n    }\n    var stream = hex.Transform(options);\n    stream.write(buffer);\n    stream.end();\n    var out = stream.read();\n    if (out === null) {\n        return '';\n    }\n    out = String(out);\n    out = out.replace(/\\n+$/, '');\n    return out;\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,GAAG,CAACC,SAAS,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC1CF,GAAG,CAACG,gBAAgB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACzDF,GAAG,CAACI,GAAG,GAAGF,OAAO,CAAC,WAAW,CAAC;AAE9BG,MAAM,CAACC,OAAO,GAAGN,GAAG;AAEpB,SAASA,GAAGA,CAACO,MAAM,EAAEC,OAAO,EAAE;EAC1B,IAAI,OAAOD,MAAM,KAAK,QAAQ,EAAE;IAC5B,OAAOP,GAAG,CAACS,MAAM,CAACF,MAAM,CAAC,EAAEC,OAAO,CAAC;EACvC;EACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACH,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAII,KAAK,CAAC,sDAAsD,CAAC;EAC3E;EACAH,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EACvB,IAAI,CAACA,OAAO,CAACI,WAAW,EAAE;IACtBJ,OAAO,CAACI,WAAW,GAAG,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACP,MAAM,CAACQ,MAAM,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACD,MAAM,GAAG,CAAC,CAAC;EAC9E;EACA,IAAIE,MAAM,GAAGjB,GAAG,CAACC,SAAS,CAACO,OAAO,CAAC;EACnCS,MAAM,CAACC,KAAK,CAACX,MAAM,CAAC;EACpBU,MAAM,CAACE,GAAG,CAAC,CAAC;EACZ,IAAIC,GAAG,GAAGH,MAAM,CAACI,IAAI,CAAC,CAAC;EACvB,IAAID,GAAG,KAAK,IAAI,EAAE;IACd,OAAO,EAAE;EACb;EACAA,GAAG,GAAGE,MAAM,CAACF,GAAG,CAAC;EACjBA,GAAG,GAAGA,GAAG,CAACG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC7B,OAAOH,GAAG;AACd"},"metadata":{},"sourceType":"script","externalDependencies":[]}