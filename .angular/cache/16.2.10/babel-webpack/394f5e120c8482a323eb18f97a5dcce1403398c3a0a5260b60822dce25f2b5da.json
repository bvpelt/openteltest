{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { noopDetectorSync } from './NoopDetectorSync';\nvar NoopDetector = /** @class */function () {\n  function NoopDetector() {}\n  NoopDetector.prototype.detect = function () {\n    return Promise.resolve(noopDetectorSync.detect());\n  };\n  return NoopDetector;\n}();\nexport { NoopDetector };\nexport var noopDetector = new NoopDetector();","map":{"version":3,"names":["noopDetectorSync","NoopDetector","prototype","detect","Promise","resolve","noopDetector"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/instrumentation-fetch/node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/resources/build/esm/detectors/NoopDetector.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { noopDetectorSync } from './NoopDetectorSync';\nvar NoopDetector = /** @class */ (function () {\n    function NoopDetector() {\n    }\n    NoopDetector.prototype.detect = function () {\n        return Promise.resolve(noopDetectorSync.detect());\n    };\n    return NoopDetector;\n}());\nexport { NoopDetector };\nexport var noopDetector = new NoopDetector();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,IAAIC,YAAY,GAAG,aAAe,YAAY;EAC1C,SAASA,YAAYA,CAAA,EAAG,CACxB;EACAA,YAAY,CAACC,SAAS,CAACC,MAAM,GAAG,YAAY;IACxC,OAAOC,OAAO,CAACC,OAAO,CAACL,gBAAgB,CAACG,MAAM,CAAC,CAAC,CAAC;EACrD,CAAC;EACD,OAAOF,YAAY;AACvB,CAAC,CAAC,CAAE;AACJ,SAASA,YAAY;AACrB,OAAO,IAAIK,YAAY,GAAG,IAAIL,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}