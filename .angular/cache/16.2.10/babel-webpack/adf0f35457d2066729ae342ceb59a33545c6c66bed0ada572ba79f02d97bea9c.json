{"ast":null,"code":"var util = require('util');\nvar Transform = require('stream').Transform;\nvar ChunkedHexTransform = require('./chunked_hex_transform');\nmodule.exports = HexSpy;\nfunction HexSpy(sink, options) {\n  if (!(this instanceof HexSpy)) {\n    return new HexSpy(sink, options);\n  }\n  // istanbul ignore next\n  if (!options) options = {};\n  // istanbul ignore else\n  if (options.highWaterMark === undefined) {\n    options.highWaterMark = 1;\n  }\n  var self = this;\n  Transform.call(self, options);\n  self.hex = ChunkedHexTransform(options);\n  self.hex.pipe(sink);\n}\nutil.inherits(HexSpy, Transform);\nHexSpy.prototype._transform = function _transform(chunk, encoding, callback) {\n  var self = this;\n  self.hex.write(chunk, encoding, function writeDone() {\n    self.push(chunk);\n    callback();\n  });\n};\nHexSpy.prototype._flush = function _flush(callback) {\n  var self = this;\n  self.hex.end(null, null, callback);\n};","map":{"version":3,"names":["util","require","Transform","ChunkedHexTransform","module","exports","HexSpy","sink","options","highWaterMark","undefined","self","call","hex","pipe","inherits","prototype","_transform","chunk","encoding","callback","write","writeDone","push","_flush","end"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/hexer/hex_spy.js"],"sourcesContent":["var util = require('util');\nvar Transform = require('stream').Transform;\nvar ChunkedHexTransform = require('./chunked_hex_transform');\n\nmodule.exports = HexSpy;\n\nfunction HexSpy(sink, options) {\n    if (!(this instanceof HexSpy)) {\n        return new HexSpy(sink, options);\n    }\n    // istanbul ignore next\n    if (!options) options = {};\n    // istanbul ignore else\n    if (options.highWaterMark === undefined) {\n        options.highWaterMark = 1;\n    }\n    var self = this;\n    Transform.call(self, options);\n    self.hex = ChunkedHexTransform(options);\n    self.hex.pipe(sink);\n}\nutil.inherits(HexSpy, Transform);\n\nHexSpy.prototype._transform = function _transform(chunk, encoding, callback) {\n    var self = this;\n    self.hex.write(chunk, encoding, function writeDone() {\n        self.push(chunk);\n        callback();\n    });\n};\n\nHexSpy.prototype._flush = function _flush(callback) {\n    var self = this;\n    self.hex.end(null, null, callback);\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,SAAS,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,SAAS;AAC3C,IAAIC,mBAAmB,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAE5DG,MAAM,CAACC,OAAO,GAAGC,MAAM;AAEvB,SAASA,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAE;EAC3B,IAAI,EAAE,IAAI,YAAYF,MAAM,CAAC,EAAE;IAC3B,OAAO,IAAIA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC;EACpC;EACA;EACA,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAC;EAC1B;EACA,IAAIA,OAAO,CAACC,aAAa,KAAKC,SAAS,EAAE;IACrCF,OAAO,CAACC,aAAa,GAAG,CAAC;EAC7B;EACA,IAAIE,IAAI,GAAG,IAAI;EACfT,SAAS,CAACU,IAAI,CAACD,IAAI,EAAEH,OAAO,CAAC;EAC7BG,IAAI,CAACE,GAAG,GAAGV,mBAAmB,CAACK,OAAO,CAAC;EACvCG,IAAI,CAACE,GAAG,CAACC,IAAI,CAACP,IAAI,CAAC;AACvB;AACAP,IAAI,CAACe,QAAQ,CAACT,MAAM,EAAEJ,SAAS,CAAC;AAEhCI,MAAM,CAACU,SAAS,CAACC,UAAU,GAAG,SAASA,UAAUA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;EACzE,IAAIT,IAAI,GAAG,IAAI;EACfA,IAAI,CAACE,GAAG,CAACQ,KAAK,CAACH,KAAK,EAAEC,QAAQ,EAAE,SAASG,SAASA,CAAA,EAAG;IACjDX,IAAI,CAACY,IAAI,CAACL,KAAK,CAAC;IAChBE,QAAQ,CAAC,CAAC;EACd,CAAC,CAAC;AACN,CAAC;AAEDd,MAAM,CAACU,SAAS,CAACQ,MAAM,GAAG,SAASA,MAAMA,CAACJ,QAAQ,EAAE;EAChD,IAAIT,IAAI,GAAG,IAAI;EACfA,IAAI,CAACE,GAAG,CAACY,GAAG,CAAC,IAAI,EAAE,IAAI,EAAEL,QAAQ,CAAC;AACtC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}