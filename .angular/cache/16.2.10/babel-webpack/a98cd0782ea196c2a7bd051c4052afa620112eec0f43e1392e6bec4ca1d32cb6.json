{"ast":null,"code":"// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar TYPE = require('./TYPE');\nvar MapObjectRW = require('./map-object').MapObjectRW;\nvar MapEntriesRW = require('./map-entries').MapEntriesRW;\nvar errors = require('./errors');\nfunction ThriftMap(keyType, valueType, annotations) {\n  this.rw = null;\n  this.surface = null;\n  var type = annotations['js.type'] || 'object';\n  if (type === 'object') {\n    this.rw = new MapObjectRW(keyType, valueType);\n    this.surface = Object;\n  } else if (type === 'entries') {\n    this.rw = new MapEntriesRW(keyType, valueType);\n    this.surface = Array;\n  } else {\n    throw errors.UnexpectedMapTypeAnnotation({\n      mapType: type\n    });\n  }\n  this.annotations = annotations;\n}\nThriftMap.prototype.name = 'map';\nThriftMap.prototype.typeid = TYPE.MAP;\nThriftMap.prototype.models = 'type';\nmodule.exports.ThriftMap = ThriftMap;","map":{"version":3,"names":["TYPE","require","MapObjectRW","MapEntriesRW","errors","ThriftMap","keyType","valueType","annotations","rw","surface","type","Object","Array","UnexpectedMapTypeAnnotation","mapType","prototype","name","typeid","MAP","models","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/thriftrw/map.js"],"sourcesContent":["// Copyright (c) 2018 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n'use strict';\n\nvar TYPE = require('./TYPE');\nvar MapObjectRW = require('./map-object').MapObjectRW;\nvar MapEntriesRW = require('./map-entries').MapEntriesRW;\nvar errors = require('./errors');\n\nfunction ThriftMap(keyType, valueType, annotations) {\n    this.rw = null;\n    this.surface = null;\n\n    var type = annotations['js.type'] || 'object';\n\n    if (type === 'object') {\n        this.rw = new MapObjectRW(keyType, valueType);\n        this.surface = Object;\n    } else if (type === 'entries') {\n        this.rw = new MapEntriesRW(keyType, valueType);\n        this.surface = Array;\n    } else {\n        throw errors.UnexpectedMapTypeAnnotation({\n            mapType: type\n        });\n    }\n\n    this.annotations = annotations;\n}\n\nThriftMap.prototype.name = 'map';\nThriftMap.prototype.typeid = TYPE.MAP;\nThriftMap.prototype.models = 'type';\n\nmodule.exports.ThriftMap = ThriftMap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIC,WAAW,GAAGD,OAAO,CAAC,cAAc,CAAC,CAACC,WAAW;AACrD,IAAIC,YAAY,GAAGF,OAAO,CAAC,eAAe,CAAC,CAACE,YAAY;AACxD,IAAIC,MAAM,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEhC,SAASI,SAASA,CAACC,OAAO,EAAEC,SAAS,EAAEC,WAAW,EAAE;EAChD,IAAI,CAACC,EAAE,GAAG,IAAI;EACd,IAAI,CAACC,OAAO,GAAG,IAAI;EAEnB,IAAIC,IAAI,GAAGH,WAAW,CAAC,SAAS,CAAC,IAAI,QAAQ;EAE7C,IAAIG,IAAI,KAAK,QAAQ,EAAE;IACnB,IAAI,CAACF,EAAE,GAAG,IAAIP,WAAW,CAACI,OAAO,EAAEC,SAAS,CAAC;IAC7C,IAAI,CAACG,OAAO,GAAGE,MAAM;EACzB,CAAC,MAAM,IAAID,IAAI,KAAK,SAAS,EAAE;IAC3B,IAAI,CAACF,EAAE,GAAG,IAAIN,YAAY,CAACG,OAAO,EAAEC,SAAS,CAAC;IAC9C,IAAI,CAACG,OAAO,GAAGG,KAAK;EACxB,CAAC,MAAM;IACH,MAAMT,MAAM,CAACU,2BAA2B,CAAC;MACrCC,OAAO,EAAEJ;IACb,CAAC,CAAC;EACN;EAEA,IAAI,CAACH,WAAW,GAAGA,WAAW;AAClC;AAEAH,SAAS,CAACW,SAAS,CAACC,IAAI,GAAG,KAAK;AAChCZ,SAAS,CAACW,SAAS,CAACE,MAAM,GAAGlB,IAAI,CAACmB,GAAG;AACrCd,SAAS,CAACW,SAAS,CAACI,MAAM,GAAG,MAAM;AAEnCC,MAAM,CAACC,OAAO,CAACjB,SAAS,GAAGA,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}