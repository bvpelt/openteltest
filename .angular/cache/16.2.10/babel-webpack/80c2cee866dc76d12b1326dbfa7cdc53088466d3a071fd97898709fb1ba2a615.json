{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n'use strict';\n\nmodule.exports = FixedWidthRW;\nvar inherits = require('util').inherits;\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\nfunction FixedWidthRW(length, readFrom, writeInto) {\n  if (!(this instanceof FixedWidthRW)) {\n    return new FixedWidthRW(length, readFrom, writeInto);\n  }\n  this.length = length;\n\n  // BufferRW.call(this);\n}\n\ninherits(FixedWidthRW, BufferRW);\nFixedWidthRW.prototype.poolByteLength = function poolByteLength(destResult, slice) {\n  if (slice.length !== this.length) {\n    return destResult.reset(errors.FixedLengthMismatch({\n      expected: this.length,\n      got: slice.length\n    }), null);\n  } else {\n    return destResult.reset(null, this.length);\n  }\n};\nFixedWidthRW.prototype.poolWriteInto = function poolWriteInto(destResult, slice, buffer, offset) {\n  if (slice.length !== this.length) {\n    return destResult.reset(errors.FixedLengthMismatch({\n      expected: this.length,\n      got: slice.length\n    }), offset);\n  }\n  slice.copy(buffer, offset);\n  //return new WriteResult(null, offset + this.length);\n  return destResult.reset(null, offset + this.length);\n};\nFixedWidthRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  var end = offset + this.length;\n  if (end > buffer.length) {\n    return ReadResult.poolShortError(destResult, this.length, buffer.length - offset, offset);\n  } else {\n    //var res = new ReadResult(null, end, buffer.slice(offset, end));\n    return destResult.reset(null, end, buffer.slice(offset, end));\n  }\n};","map":{"version":3,"names":["module","exports","FixedWidthRW","inherits","require","ReadResult","BufferRW","errors","length","readFrom","writeInto","prototype","poolByteLength","destResult","slice","reset","FixedLengthMismatch","expected","got","poolWriteInto","buffer","offset","copy","poolReadFrom","end","poolShortError"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/fixed_width_rw.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n'use strict';\n\nmodule.exports = FixedWidthRW;\n\nvar inherits = require('util').inherits;\n\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\nfunction FixedWidthRW(length, readFrom, writeInto) {\n    if (!(this instanceof FixedWidthRW)) {\n        return new FixedWidthRW(length, readFrom, writeInto);\n    }\n    this.length = length;\n\n   // BufferRW.call(this);\n}\ninherits(FixedWidthRW, BufferRW);\n\nFixedWidthRW.prototype.poolByteLength = function poolByteLength(destResult, slice) {\n    if (slice.length !== this.length) {\n        return destResult.reset(errors.FixedLengthMismatch({\n            expected: this.length,\n            got: slice.length\n        }), null);\n    } else {\n        return destResult.reset(null, this.length);\n    }\n};\n\nFixedWidthRW.prototype.poolWriteInto = function poolWriteInto(destResult, slice, buffer, offset) {\n    if (slice.length !== this.length) {\n        return destResult.reset(errors.FixedLengthMismatch({\n            expected: this.length,\n            got: slice.length\n        }), offset);\n    }\n    slice.copy(buffer, offset);\n    //return new WriteResult(null, offset + this.length);\n    return destResult.reset(null, offset + this.length);\n};\n\nFixedWidthRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    var end = offset + this.length;\n    if (end > buffer.length) {\n        return ReadResult.poolShortError(destResult, this.length, buffer.length - offset, offset);\n    } else {\n        //var res = new ReadResult(null, end, buffer.slice(offset, end));\n        return destResult.reset(null, end, buffer.slice(offset, end));\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,YAAY;AAE7B,IAAIC,QAAQ,GAAGC,OAAO,CAAC,MAAM,CAAC,CAACD,QAAQ;AAEvC,IAAIE,UAAU,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,UAAU;AAC7C,IAAIC,QAAQ,GAAGF,OAAO,CAAC,QAAQ,CAAC,CAACE,QAAQ;AACzC,IAAIC,MAAM,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEhC,SAASF,YAAYA,CAACM,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAE;EAC/C,IAAI,EAAE,IAAI,YAAYR,YAAY,CAAC,EAAE;IACjC,OAAO,IAAIA,YAAY,CAACM,MAAM,EAAEC,QAAQ,EAAEC,SAAS,CAAC;EACxD;EACA,IAAI,CAACF,MAAM,GAAGA,MAAM;;EAErB;AACH;;AACAL,QAAQ,CAACD,YAAY,EAAEI,QAAQ,CAAC;AAEhCJ,YAAY,CAACS,SAAS,CAACC,cAAc,GAAG,SAASA,cAAcA,CAACC,UAAU,EAAEC,KAAK,EAAE;EAC/E,IAAIA,KAAK,CAACN,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;IAC9B,OAAOK,UAAU,CAACE,KAAK,CAACR,MAAM,CAACS,mBAAmB,CAAC;MAC/CC,QAAQ,EAAE,IAAI,CAACT,MAAM;MACrBU,GAAG,EAAEJ,KAAK,CAACN;IACf,CAAC,CAAC,EAAE,IAAI,CAAC;EACb,CAAC,MAAM;IACH,OAAOK,UAAU,CAACE,KAAK,CAAC,IAAI,EAAE,IAAI,CAACP,MAAM,CAAC;EAC9C;AACJ,CAAC;AAEDN,YAAY,CAACS,SAAS,CAACQ,aAAa,GAAG,SAASA,aAAaA,CAACN,UAAU,EAAEC,KAAK,EAAEM,MAAM,EAAEC,MAAM,EAAE;EAC7F,IAAIP,KAAK,CAACN,MAAM,KAAK,IAAI,CAACA,MAAM,EAAE;IAC9B,OAAOK,UAAU,CAACE,KAAK,CAACR,MAAM,CAACS,mBAAmB,CAAC;MAC/CC,QAAQ,EAAE,IAAI,CAACT,MAAM;MACrBU,GAAG,EAAEJ,KAAK,CAACN;IACf,CAAC,CAAC,EAAEa,MAAM,CAAC;EACf;EACAP,KAAK,CAACQ,IAAI,CAACF,MAAM,EAAEC,MAAM,CAAC;EAC1B;EACA,OAAOR,UAAU,CAACE,KAAK,CAAC,IAAI,EAAEM,MAAM,GAAG,IAAI,CAACb,MAAM,CAAC;AACvD,CAAC;AAEDN,YAAY,CAACS,SAAS,CAACY,YAAY,GAAG,SAASA,YAAYA,CAACV,UAAU,EAAEO,MAAM,EAAEC,MAAM,EAAE;EACpF,IAAIG,GAAG,GAAGH,MAAM,GAAG,IAAI,CAACb,MAAM;EAC9B,IAAIgB,GAAG,GAAGJ,MAAM,CAACZ,MAAM,EAAE;IACrB,OAAOH,UAAU,CAACoB,cAAc,CAACZ,UAAU,EAAE,IAAI,CAACL,MAAM,EAAEY,MAAM,CAACZ,MAAM,GAAGa,MAAM,EAAEA,MAAM,CAAC;EAC7F,CAAC,MAAM;IACH;IACA,OAAOR,UAAU,CAACE,KAAK,CAAC,IAAI,EAAES,GAAG,EAAEJ,MAAM,CAACN,KAAK,CAACO,MAAM,EAAEG,GAAG,CAAC,CAAC;EACjE;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}