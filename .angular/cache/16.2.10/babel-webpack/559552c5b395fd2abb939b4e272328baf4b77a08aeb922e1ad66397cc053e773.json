{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.spanToThrift = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst types_1 = require(\"./types\");\nconst DEFAULT_FLAGS = 0x1;\n/**\n * Translate OpenTelemetry ReadableSpan to Jaeger Thrift Span\n * @param span Span to be translated\n */\nfunction spanToThrift(span) {\n  const traceId = span.spanContext().traceId.padStart(32, '0');\n  const traceIdHigh = traceId.slice(0, 16);\n  const traceIdLow = traceId.slice(16);\n  const parentSpan = span.parentSpanId ? types_1.Utils.encodeInt64(span.parentSpanId) : types_1.ThriftUtils.emptyBuffer;\n  const tags = Object.keys(span.attributes).map(name => ({\n    key: name,\n    value: toTagValue(span.attributes[name])\n  }));\n  if (span.status.code !== api_1.SpanStatusCode.UNSET) {\n    tags.push({\n      key: 'otel.status_code',\n      value: api_1.SpanStatusCode[span.status.code]\n    });\n    if (span.status.message) {\n      tags.push({\n        key: 'otel.status_description',\n        value: span.status.message\n      });\n    }\n  }\n  // Ensure that if SpanStatus.Code is ERROR, that we set the \"error\" tag on the\n  // Jaeger span.\n  if (span.status.code === api_1.SpanStatusCode.ERROR) {\n    tags.push({\n      key: 'error',\n      value: true\n    });\n  }\n  if (span.kind !== undefined && span.kind !== api_1.SpanKind.INTERNAL) {\n    tags.push({\n      key: 'span.kind',\n      value: api_1.SpanKind[span.kind].toLowerCase()\n    });\n  }\n  Object.keys(span.resource.attributes).forEach(name => tags.push({\n    key: name,\n    value: toTagValue(span.resource.attributes[name])\n  }));\n  if (span.instrumentationLibrary) {\n    tags.push({\n      key: 'otel.library.name',\n      value: toTagValue(span.instrumentationLibrary.name)\n    });\n    tags.push({\n      key: 'otel.library.version',\n      value: toTagValue(span.instrumentationLibrary.version)\n    });\n  }\n  /* Add droppedAttributesCount as a tag */\n  if (span.droppedAttributesCount) {\n    tags.push({\n      key: 'otel.dropped_attributes_count',\n      value: toTagValue(span.droppedAttributesCount)\n    });\n  }\n  /* Add droppedEventsCount as a tag */\n  if (span.droppedEventsCount) {\n    tags.push({\n      key: 'otel.dropped_events_count',\n      value: toTagValue(span.droppedEventsCount)\n    });\n  }\n  /* Add droppedLinksCount as a tag */\n  if (span.droppedLinksCount) {\n    tags.push({\n      key: 'otel.dropped_links_count',\n      value: toTagValue(span.droppedLinksCount)\n    });\n  }\n  const spanTags = types_1.ThriftUtils.getThriftTags(tags);\n  const logs = span.events.map(event => {\n    const fields = [{\n      key: 'event',\n      value: event.name\n    }];\n    const attrs = event.attributes;\n    if (attrs) {\n      Object.keys(attrs).forEach(attr => fields.push({\n        key: attr,\n        value: toTagValue(attrs[attr])\n      }));\n    }\n    if (event.droppedAttributesCount) {\n      fields.push({\n        key: 'otel.event.dropped_attributes_count',\n        value: event.droppedAttributesCount\n      });\n    }\n    return {\n      timestamp: (0, core_1.hrTimeToMilliseconds)(event.time),\n      fields\n    };\n  });\n  const spanLogs = types_1.ThriftUtils.getThriftLogs(logs);\n  return {\n    traceIdLow: types_1.Utils.encodeInt64(traceIdLow),\n    traceIdHigh: types_1.Utils.encodeInt64(traceIdHigh),\n    spanId: types_1.Utils.encodeInt64(span.spanContext().spanId),\n    parentSpanId: parentSpan,\n    operationName: span.name,\n    references: spanLinksToThriftRefs(span.links),\n    flags: span.spanContext().traceFlags || DEFAULT_FLAGS,\n    startTime: types_1.Utils.encodeInt64((0, core_1.hrTimeToMicroseconds)(span.startTime)),\n    duration: types_1.Utils.encodeInt64((0, core_1.hrTimeToMicroseconds)(span.duration)),\n    tags: spanTags,\n    logs: spanLogs\n  };\n}\nexports.spanToThrift = spanToThrift;\n/** Translate OpenTelemetry {@link Link}s to Jaeger ThriftReference. */\nfunction spanLinksToThriftRefs(links) {\n  return links.map(link => {\n    const refType = types_1.ThriftReferenceType.FOLLOWS_FROM;\n    const traceId = link.context.traceId;\n    const traceIdHigh = types_1.Utils.encodeInt64(traceId.slice(0, 16));\n    const traceIdLow = types_1.Utils.encodeInt64(traceId.slice(16));\n    const spanId = types_1.Utils.encodeInt64(link.context.spanId);\n    return {\n      traceIdLow,\n      traceIdHigh,\n      spanId,\n      refType\n    };\n  });\n}\n/** Translate OpenTelemetry attribute value to Jaeger TagValue. */\nfunction toTagValue(value) {\n  const valueType = typeof value;\n  if (valueType === 'boolean') {\n    return value;\n  } else if (valueType === 'number') {\n    return value;\n  }\n  return String(value);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","spanToThrift","api_1","require","core_1","types_1","DEFAULT_FLAGS","span","traceId","spanContext","padStart","traceIdHigh","slice","traceIdLow","parentSpan","parentSpanId","Utils","encodeInt64","ThriftUtils","emptyBuffer","tags","keys","attributes","map","name","key","toTagValue","status","code","SpanStatusCode","UNSET","push","message","ERROR","kind","undefined","SpanKind","INTERNAL","toLowerCase","resource","forEach","instrumentationLibrary","version","droppedAttributesCount","droppedEventsCount","droppedLinksCount","spanTags","getThriftTags","logs","events","event","fields","attrs","attr","timestamp","hrTimeToMilliseconds","time","spanLogs","getThriftLogs","spanId","operationName","references","spanLinksToThriftRefs","links","flags","traceFlags","startTime","hrTimeToMicroseconds","duration","link","refType","ThriftReferenceType","FOLLOWS_FROM","context","valueType","String"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/exporter-jaeger/build/src/transform.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.spanToThrift = void 0;\nconst api_1 = require(\"@opentelemetry/api\");\nconst core_1 = require(\"@opentelemetry/core\");\nconst types_1 = require(\"./types\");\nconst DEFAULT_FLAGS = 0x1;\n/**\n * Translate OpenTelemetry ReadableSpan to Jaeger Thrift Span\n * @param span Span to be translated\n */\nfunction spanToThrift(span) {\n    const traceId = span.spanContext().traceId.padStart(32, '0');\n    const traceIdHigh = traceId.slice(0, 16);\n    const traceIdLow = traceId.slice(16);\n    const parentSpan = span.parentSpanId\n        ? types_1.Utils.encodeInt64(span.parentSpanId)\n        : types_1.ThriftUtils.emptyBuffer;\n    const tags = Object.keys(span.attributes).map((name) => ({ key: name, value: toTagValue(span.attributes[name]) }));\n    if (span.status.code !== api_1.SpanStatusCode.UNSET) {\n        tags.push({\n            key: 'otel.status_code',\n            value: api_1.SpanStatusCode[span.status.code],\n        });\n        if (span.status.message) {\n            tags.push({ key: 'otel.status_description', value: span.status.message });\n        }\n    }\n    // Ensure that if SpanStatus.Code is ERROR, that we set the \"error\" tag on the\n    // Jaeger span.\n    if (span.status.code === api_1.SpanStatusCode.ERROR) {\n        tags.push({ key: 'error', value: true });\n    }\n    if (span.kind !== undefined && span.kind !== api_1.SpanKind.INTERNAL) {\n        tags.push({ key: 'span.kind', value: api_1.SpanKind[span.kind].toLowerCase() });\n    }\n    Object.keys(span.resource.attributes).forEach(name => tags.push({\n        key: name,\n        value: toTagValue(span.resource.attributes[name]),\n    }));\n    if (span.instrumentationLibrary) {\n        tags.push({\n            key: 'otel.library.name',\n            value: toTagValue(span.instrumentationLibrary.name),\n        });\n        tags.push({\n            key: 'otel.library.version',\n            value: toTagValue(span.instrumentationLibrary.version),\n        });\n    }\n    /* Add droppedAttributesCount as a tag */\n    if (span.droppedAttributesCount) {\n        tags.push({\n            key: 'otel.dropped_attributes_count',\n            value: toTagValue(span.droppedAttributesCount),\n        });\n    }\n    /* Add droppedEventsCount as a tag */\n    if (span.droppedEventsCount) {\n        tags.push({\n            key: 'otel.dropped_events_count',\n            value: toTagValue(span.droppedEventsCount),\n        });\n    }\n    /* Add droppedLinksCount as a tag */\n    if (span.droppedLinksCount) {\n        tags.push({\n            key: 'otel.dropped_links_count',\n            value: toTagValue(span.droppedLinksCount),\n        });\n    }\n    const spanTags = types_1.ThriftUtils.getThriftTags(tags);\n    const logs = span.events.map((event) => {\n        const fields = [{ key: 'event', value: event.name }];\n        const attrs = event.attributes;\n        if (attrs) {\n            Object.keys(attrs).forEach(attr => fields.push({ key: attr, value: toTagValue(attrs[attr]) }));\n        }\n        if (event.droppedAttributesCount) {\n            fields.push({\n                key: 'otel.event.dropped_attributes_count',\n                value: event.droppedAttributesCount,\n            });\n        }\n        return { timestamp: (0, core_1.hrTimeToMilliseconds)(event.time), fields };\n    });\n    const spanLogs = types_1.ThriftUtils.getThriftLogs(logs);\n    return {\n        traceIdLow: types_1.Utils.encodeInt64(traceIdLow),\n        traceIdHigh: types_1.Utils.encodeInt64(traceIdHigh),\n        spanId: types_1.Utils.encodeInt64(span.spanContext().spanId),\n        parentSpanId: parentSpan,\n        operationName: span.name,\n        references: spanLinksToThriftRefs(span.links),\n        flags: span.spanContext().traceFlags || DEFAULT_FLAGS,\n        startTime: types_1.Utils.encodeInt64((0, core_1.hrTimeToMicroseconds)(span.startTime)),\n        duration: types_1.Utils.encodeInt64((0, core_1.hrTimeToMicroseconds)(span.duration)),\n        tags: spanTags,\n        logs: spanLogs,\n    };\n}\nexports.spanToThrift = spanToThrift;\n/** Translate OpenTelemetry {@link Link}s to Jaeger ThriftReference. */\nfunction spanLinksToThriftRefs(links) {\n    return links.map((link) => {\n        const refType = types_1.ThriftReferenceType.FOLLOWS_FROM;\n        const traceId = link.context.traceId;\n        const traceIdHigh = types_1.Utils.encodeInt64(traceId.slice(0, 16));\n        const traceIdLow = types_1.Utils.encodeInt64(traceId.slice(16));\n        const spanId = types_1.Utils.encodeInt64(link.context.spanId);\n        return { traceIdLow, traceIdHigh, spanId, refType };\n    });\n}\n/** Translate OpenTelemetry attribute value to Jaeger TagValue. */\nfunction toTagValue(value) {\n    const valueType = typeof value;\n    if (valueType === 'boolean') {\n        return value;\n    }\n    else if (valueType === 'number') {\n        return value;\n    }\n    return String(value);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}