{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports.fromBuffer = require('./interface').fromBuffer;\nmodule.exports.byteLength = require('./interface').byteLength;\nmodule.exports.toBuffer = require('./interface').toBuffer;\nmodule.exports.intoBuffer = require('./interface').intoBuffer;\nmodule.exports.fromBufferTuple = require('./interface').fromBufferTuple;\nmodule.exports.byteLengthTuple = require('./interface').byteLengthTuple;\nmodule.exports.toBufferTuple = require('./interface').toBufferTuple;\nmodule.exports.intoBufferTuple = require('./interface').intoBufferTuple;\nmodule.exports.fromBufferResult = require('./interface').fromBufferResult;\nmodule.exports.byteLengthResult = require('./interface').byteLengthResult;\nmodule.exports.toBufferResult = require('./interface').toBufferResult;\nmodule.exports.intoBufferResult = require('./interface').intoBufferResult;\nmodule.exports.formatError = require('./interface').formatError;\nmodule.exports.Base = require('./base').BufferRW; // TODO: align names\nmodule.exports.LengthResult = require('./base').LengthResult;\nmodule.exports.WriteResult = require('./base').WriteResult;\nmodule.exports.ReadResult = require('./base').ReadResult;\nvar atoms = require('./atoms');\nmodule.exports.AtomRW = atoms.AtomRW;\nmodule.exports.Int8 = atoms.Int8;\nmodule.exports.Int16BE = atoms.Int16BE;\nmodule.exports.Int32BE = atoms.Int32BE;\nmodule.exports.Int16LE = atoms.Int16LE;\nmodule.exports.Int32LE = atoms.Int32LE;\nmodule.exports.UInt8 = atoms.UInt8;\nmodule.exports.UInt16BE = atoms.UInt16BE;\nmodule.exports.UInt32BE = atoms.UInt32BE;\nmodule.exports.UInt16LE = atoms.UInt16LE;\nmodule.exports.UInt32LE = atoms.UInt32LE;\nmodule.exports.FloatLE = atoms.FloatLE;\nmodule.exports.FloatBE = atoms.FloatBE;\nmodule.exports.DoubleLE = atoms.DoubleLE;\nmodule.exports.DoubleBE = atoms.DoubleBE;\nmodule.exports.Null = require('./null');\nmodule.exports.FixedWidth = require('./fixed_width_rw');\nvar VariableBuffer = require('./variable_buffer_rw');\nvar buf1 = VariableBuffer(atoms.UInt8);\nvar buf2 = VariableBuffer(atoms.UInt16BE);\nmodule.exports.buf1 = buf1;\nmodule.exports.buf2 = buf2;\nmodule.exports.VariableBuffer = VariableBuffer;\nvar StringRW = require('./string_rw');\nvar varint = require('./varint');\nvar str1 = StringRW(atoms.UInt8, 'utf8');\nvar str2 = StringRW(atoms.UInt16BE, 'utf8');\nvar strn = StringRW(varint.unsigned, 'utf8');\nmodule.exports.str1 = str1;\nmodule.exports.str2 = str2;\nmodule.exports.strn = strn;\nmodule.exports.String = StringRW;\nmodule.exports.varint = varint;\nmodule.exports.Series = require('./series');\nmodule.exports.Struct = require('./struct');\nmodule.exports.Switch = require('./switch');\nmodule.exports.Repeat = require('./repeat');\nmodule.exports.Skip = require('./skip');","map":{"version":3,"names":["module","exports","fromBuffer","require","byteLength","toBuffer","intoBuffer","fromBufferTuple","byteLengthTuple","toBufferTuple","intoBufferTuple","fromBufferResult","byteLengthResult","toBufferResult","intoBufferResult","formatError","Base","BufferRW","LengthResult","WriteResult","ReadResult","atoms","AtomRW","Int8","Int16BE","Int32BE","Int16LE","Int32LE","UInt8","UInt16BE","UInt32BE","UInt16LE","UInt32LE","FloatLE","FloatBE","DoubleLE","DoubleBE","Null","FixedWidth","VariableBuffer","buf1","buf2","StringRW","varint","str1","str2","strn","unsigned","String","Series","Struct","Switch","Repeat","Skip"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/index.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports.fromBuffer = require('./interface').fromBuffer;\nmodule.exports.byteLength = require('./interface').byteLength;\nmodule.exports.toBuffer = require('./interface').toBuffer;\nmodule.exports.intoBuffer = require('./interface').intoBuffer;\n\nmodule.exports.fromBufferTuple = require('./interface').fromBufferTuple;\nmodule.exports.byteLengthTuple = require('./interface').byteLengthTuple;\nmodule.exports.toBufferTuple = require('./interface').toBufferTuple;\nmodule.exports.intoBufferTuple = require('./interface').intoBufferTuple;\n\nmodule.exports.fromBufferResult = require('./interface').fromBufferResult;\nmodule.exports.byteLengthResult = require('./interface').byteLengthResult;\nmodule.exports.toBufferResult = require('./interface').toBufferResult;\nmodule.exports.intoBufferResult = require('./interface').intoBufferResult;\n\nmodule.exports.formatError = require('./interface').formatError;\n\nmodule.exports.Base = require('./base').BufferRW; // TODO: align names\nmodule.exports.LengthResult = require('./base').LengthResult;\nmodule.exports.WriteResult = require('./base').WriteResult;\nmodule.exports.ReadResult = require('./base').ReadResult;\n\nvar atoms = require('./atoms');\n\nmodule.exports.AtomRW = atoms.AtomRW;\nmodule.exports.Int8 = atoms.Int8;\nmodule.exports.Int16BE = atoms.Int16BE;\nmodule.exports.Int32BE = atoms.Int32BE;\nmodule.exports.Int16LE = atoms.Int16LE;\nmodule.exports.Int32LE = atoms.Int32LE;\nmodule.exports.UInt8 = atoms.UInt8;\nmodule.exports.UInt16BE = atoms.UInt16BE;\nmodule.exports.UInt32BE = atoms.UInt32BE;\nmodule.exports.UInt16LE = atoms.UInt16LE;\nmodule.exports.UInt32LE = atoms.UInt32LE;\nmodule.exports.FloatLE = atoms.FloatLE;\nmodule.exports.FloatBE = atoms.FloatBE;\nmodule.exports.DoubleLE = atoms.DoubleLE;\nmodule.exports.DoubleBE = atoms.DoubleBE;\n\nmodule.exports.Null = require('./null');\nmodule.exports.FixedWidth = require('./fixed_width_rw');\n\nvar VariableBuffer = require('./variable_buffer_rw');\nvar buf1 = VariableBuffer(atoms.UInt8);\nvar buf2 = VariableBuffer(atoms.UInt16BE);\nmodule.exports.buf1 = buf1;\nmodule.exports.buf2 = buf2;\nmodule.exports.VariableBuffer = VariableBuffer;\n\nvar StringRW = require('./string_rw');\nvar varint = require('./varint');\nvar str1 = StringRW(atoms.UInt8, 'utf8');\nvar str2 = StringRW(atoms.UInt16BE, 'utf8');\nvar strn = StringRW(varint.unsigned, 'utf8');\n\nmodule.exports.str1 = str1;\nmodule.exports.str2 = str2;\nmodule.exports.strn = strn;\nmodule.exports.String = StringRW;\n\nmodule.exports.varint = varint;\n\nmodule.exports.Series = require('./series');\nmodule.exports.Struct = require('./struct');\nmodule.exports.Switch = require('./switch');\nmodule.exports.Repeat = require('./repeat');\nmodule.exports.Skip = require('./skip');\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}