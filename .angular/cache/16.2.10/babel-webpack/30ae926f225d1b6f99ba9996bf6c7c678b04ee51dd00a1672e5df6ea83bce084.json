{"ast":null,"code":"import { toAttributes } from '../common/internal';\nexport function sdkSpanToOtlpSpan(span, encoder) {\n  var _a;\n  var ctx = span.spanContext();\n  var status = span.status;\n  return {\n    traceId: encoder.encodeSpanContext(ctx.traceId),\n    spanId: encoder.encodeSpanContext(ctx.spanId),\n    parentSpanId: encoder.encodeOptionalSpanContext(span.parentSpanId),\n    traceState: (_a = ctx.traceState) === null || _a === void 0 ? void 0 : _a.serialize(),\n    name: span.name,\n    // Span kind is offset by 1 because the API does not define a value for unset\n    kind: span.kind == null ? 0 : span.kind + 1,\n    startTimeUnixNano: encoder.encodeHrTime(span.startTime),\n    endTimeUnixNano: encoder.encodeHrTime(span.endTime),\n    attributes: toAttributes(span.attributes),\n    droppedAttributesCount: span.droppedAttributesCount,\n    events: span.events.map(function (event) {\n      return toOtlpSpanEvent(event, encoder);\n    }),\n    droppedEventsCount: span.droppedEventsCount,\n    status: {\n      // API and proto enums share the same values\n      code: status.code,\n      message: status.message\n    },\n    links: span.links.map(function (link) {\n      return toOtlpLink(link, encoder);\n    }),\n    droppedLinksCount: span.droppedLinksCount\n  };\n}\nexport function toOtlpLink(link, encoder) {\n  var _a;\n  return {\n    attributes: link.attributes ? toAttributes(link.attributes) : [],\n    spanId: encoder.encodeSpanContext(link.context.spanId),\n    traceId: encoder.encodeSpanContext(link.context.traceId),\n    traceState: (_a = link.context.traceState) === null || _a === void 0 ? void 0 : _a.serialize(),\n    droppedAttributesCount: link.droppedAttributesCount || 0\n  };\n}\nexport function toOtlpSpanEvent(timedEvent, encoder) {\n  return {\n    attributes: timedEvent.attributes ? toAttributes(timedEvent.attributes) : [],\n    name: timedEvent.name,\n    timeUnixNano: encoder.encodeHrTime(timedEvent.time),\n    droppedAttributesCount: timedEvent.droppedAttributesCount || 0\n  };\n}","map":{"version":3,"names":["toAttributes","sdkSpanToOtlpSpan","span","encoder","_a","ctx","spanContext","status","traceId","encodeSpanContext","spanId","parentSpanId","encodeOptionalSpanContext","traceState","serialize","name","kind","startTimeUnixNano","encodeHrTime","startTime","endTimeUnixNano","endTime","attributes","droppedAttributesCount","events","map","event","toOtlpSpanEvent","droppedEventsCount","code","message","links","link","toOtlpLink","droppedLinksCount","context","timedEvent","timeUnixNano","time"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/otlp-transformer/build/esm/trace/internal.js"],"sourcesContent":["import { toAttributes } from '../common/internal';\nexport function sdkSpanToOtlpSpan(span, encoder) {\n    var _a;\n    var ctx = span.spanContext();\n    var status = span.status;\n    return {\n        traceId: encoder.encodeSpanContext(ctx.traceId),\n        spanId: encoder.encodeSpanContext(ctx.spanId),\n        parentSpanId: encoder.encodeOptionalSpanContext(span.parentSpanId),\n        traceState: (_a = ctx.traceState) === null || _a === void 0 ? void 0 : _a.serialize(),\n        name: span.name,\n        // Span kind is offset by 1 because the API does not define a value for unset\n        kind: span.kind == null ? 0 : span.kind + 1,\n        startTimeUnixNano: encoder.encodeHrTime(span.startTime),\n        endTimeUnixNano: encoder.encodeHrTime(span.endTime),\n        attributes: toAttributes(span.attributes),\n        droppedAttributesCount: span.droppedAttributesCount,\n        events: span.events.map(function (event) { return toOtlpSpanEvent(event, encoder); }),\n        droppedEventsCount: span.droppedEventsCount,\n        status: {\n            // API and proto enums share the same values\n            code: status.code,\n            message: status.message,\n        },\n        links: span.links.map(function (link) { return toOtlpLink(link, encoder); }),\n        droppedLinksCount: span.droppedLinksCount,\n    };\n}\nexport function toOtlpLink(link, encoder) {\n    var _a;\n    return {\n        attributes: link.attributes ? toAttributes(link.attributes) : [],\n        spanId: encoder.encodeSpanContext(link.context.spanId),\n        traceId: encoder.encodeSpanContext(link.context.traceId),\n        traceState: (_a = link.context.traceState) === null || _a === void 0 ? void 0 : _a.serialize(),\n        droppedAttributesCount: link.droppedAttributesCount || 0,\n    };\n}\nexport function toOtlpSpanEvent(timedEvent, encoder) {\n    return {\n        attributes: timedEvent.attributes\n            ? toAttributes(timedEvent.attributes)\n            : [],\n        name: timedEvent.name,\n        timeUnixNano: encoder.encodeHrTime(timedEvent.time),\n        droppedAttributesCount: timedEvent.droppedAttributesCount || 0,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}