{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _xorshift = require('xorshift');\nvar _xorshift2 = _interopRequireDefault(_xorshift);\nvar _nodeInt = require('node-int64');\nvar _nodeInt2 = _interopRequireDefault(_nodeInt);\nvar _os = require('os');\nvar _os2 = _interopRequireDefault(_os);\nvar _http = require('http');\nvar _http2 = _interopRequireDefault(_http);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n  _createClass(Utils, null, [{\n    key: 'startsWith',\n    /**\n     * Determines whether a string contains a given prefix.\n     *\n     * @param {string} text - the string for to search for a prefix\n     * @param {string} prefix - the prefix to search for in the text given.\n     * @return {boolean} - boolean representing whether or not the\n     * string contains the prefix.\n     **/\n    value: function startsWith(text, prefix) {\n      return text.indexOf(prefix) === 0;\n    }\n\n    /**\n     * Determines whether a string contains a given suffix.\n     *\n     * @param {string} text - the string for to search for a suffix\n     * @param {string} suffix - the suffix to search for in the text given.\n     * @return {boolean} - boolean representing whether or not the\n     * string contains the suffix.\n     **/\n  }, {\n    key: 'endsWith',\n    value: function endsWith(text, suffix) {\n      return text.lastIndexOf(suffix) === text.length - suffix.length;\n    }\n\n    /**\n     * Get a random buffer representing a random 64 bit.\n     *\n     * @return {Buffer}  - returns a buffer representing a random 64 bit\n     * number.\n     **/\n  }, {\n    key: 'getRandom64',\n    value: function getRandom64() {\n      var randint = _xorshift2.default.randomint();\n      var buf = this.newBuffer(8);\n      buf.writeUInt32BE(randint[0], 0);\n      buf.writeUInt32BE(randint[1], 4);\n      return buf;\n    }\n\n    /**\n     * Get a random buffer representing a random 128 bit.\n     *\n     * @return {Buffer}  - returns a buffer representing a random 128 bit\n     * number.\n     **/\n  }, {\n    key: 'getRandom128',\n    value: function getRandom128() {\n      var randint1 = _xorshift2.default.randomint();\n      var randint2 = _xorshift2.default.randomint();\n      var buf = this.newBuffer(16);\n      buf.writeUInt32BE(randint1[0], 0);\n      buf.writeUInt32BE(randint1[1], 4);\n      buf.writeUInt32BE(randint2[0], 8);\n      buf.writeUInt32BE(randint2[1], 12);\n      return buf;\n    }\n\n    /**\n     * @param {string|number} numberValue - a string or number to be encoded\n     * as a 64 bit byte array.\n     * @return {Buffer} - returns a buffer representing the encoded string, or number.\n     **/\n  }, {\n    key: 'encodeInt64',\n    value: function encodeInt64(numberValue) {\n      return new _nodeInt2.default(numberValue).toBuffer();\n    }\n\n    /**\n     * @param {string} input - the input for which leading zeros should be removed.\n     * @return {string} - returns the input string without leading zeros.\n     **/\n  }, {\n    key: 'removeLeadingZeros',\n    value: function removeLeadingZeros(input) {\n      var counter = 0;\n      var length = input.length - 1;\n      for (var i = 0; i < length; i++) {\n        if (input.charAt(i) === '0') {\n          counter++;\n        } else {\n          break;\n        }\n      }\n      return input.substring(counter);\n    }\n  }, {\n    key: 'myIp',\n    value: function myIp() {\n      var myIp = '0.0.0.0';\n      var ifaces = _os2.default.networkInterfaces();\n      var keys = Object.keys(ifaces);\n      loop1: for (var i = 0; i < keys.length; i++) {\n        var iface = ifaces[keys[i]];\n        for (var j = 0; j < iface.length; j++) {\n          if (iface[j].family === 'IPv4' && !iface[j].internal) {\n            myIp = iface[j].address;\n            break loop1;\n          }\n        }\n      }\n      return myIp;\n    }\n  }, {\n    key: 'clone',\n    value: function clone(obj) {\n      var newObj = {};\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          newObj[key] = obj[key];\n        }\n      }\n      return newObj;\n    }\n  }, {\n    key: 'convertObjectToTags',\n    value: function convertObjectToTags(dict) {\n      var tags = [];\n      for (var key in dict) {\n        var value = dict[key];\n        if (Object.prototype.hasOwnProperty.call(dict, key)) {\n          tags.push({\n            key: key,\n            value: value\n          });\n        }\n      }\n      return tags;\n    }\n  }, {\n    key: 'httpGet',\n    value: function httpGet(host, port, path, success, error) {\n      _http2.default.get({\n        host: host,\n        port: port,\n        path: path\n      }, function (res) {\n        // explicitly treat incoming data as utf8 (avoids issues with multi-byte chars)\n        res.setEncoding('utf8');\n\n        // incrementally capture the incoming response body\n        var body = '';\n        res.on('data', function (chunk) {\n          body += chunk;\n        });\n        res.on('end', function () {\n          success(body);\n        });\n      }).on('error', function (err) {\n        error(err);\n      });\n    }\n\n    /**\n     * @param {string|number} input - a hex encoded string to store in the buffer.\n     * @return {Buffer} - returns a buffer representing the hex encoded string.\n     **/\n  }, {\n    key: 'newBufferFromHex',\n    value: function newBufferFromHex(input) {\n      var encoding = 'hex';\n      // check that 'Buffer.from' exists based on node's documentation\n      // https://nodejs.org/en/docs/guides/buffer-constructor-deprecation/#variant-3\n      if (Buffer.from && Buffer.from !== Uint8Array.from) {\n        return Buffer.from(input, encoding);\n      }\n      return new Buffer(input, encoding);\n    }\n\n    /**\n     * @param {number} input - a number of octets to allocate.\n     * @return {Buffer} - returns an empty buffer.\n     **/\n  }, {\n    key: 'newBuffer',\n    value: function newBuffer(size) {\n      if (Buffer.alloc) {\n        return Buffer.alloc(size);\n      }\n      var buffer = new Buffer(size);\n      buffer.fill(0);\n      return buffer;\n    }\n\n    /**\n     * Creates a callback function that only delegates to passed <code>callback</code>\n     * after <code>limit</code> invocations. Useful in types like CompositeReporter that\n     * needs to invoke the top level callback only after all delegates' close() methods\n     * are called.\n     */\n  }, {\n    key: 'countdownCallback',\n    value: function countdownCallback(limit, callback) {\n      var count = 0;\n      return function () {\n        count++;\n        if (count >= limit && callback) {\n          callback();\n        }\n      };\n    }\n  }]);\n  return Utils;\n}();\nexports.default = Utils;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_xorshift","require","_xorshift2","_interopRequireDefault","_nodeInt","_nodeInt2","_os","_os2","_http","_http2","obj","__esModule","default","_classCallCheck","instance","TypeError","Utils","startsWith","text","prefix","indexOf","endsWith","suffix","lastIndexOf","getRandom64","randint","randomint","buf","newBuffer","writeUInt32BE","getRandom128","randint1","randint2","encodeInt64","numberValue","toBuffer","removeLeadingZeros","input","counter","charAt","substring","myIp","ifaces","networkInterfaces","keys","loop1","iface","j","family","internal","address","clone","newObj","hasOwnProperty","call","convertObjectToTags","dict","tags","push","httpGet","host","port","path","success","error","get","res","setEncoding","body","on","chunk","err","newBufferFromHex","encoding","Buffer","from","Uint8Array","size","alloc","buffer","fill","countdownCallback","limit","callback","count"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/jaeger-client/dist/src/util.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nvar _xorshift = require('xorshift');\n\nvar _xorshift2 = _interopRequireDefault(_xorshift);\n\nvar _nodeInt = require('node-int64');\n\nvar _nodeInt2 = _interopRequireDefault(_nodeInt);\n\nvar _os = require('os');\n\nvar _os2 = _interopRequireDefault(_os);\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: 'startsWith',\n\n    /**\n     * Determines whether a string contains a given prefix.\n     *\n     * @param {string} text - the string for to search for a prefix\n     * @param {string} prefix - the prefix to search for in the text given.\n     * @return {boolean} - boolean representing whether or not the\n     * string contains the prefix.\n     **/\n    value: function startsWith(text, prefix) {\n      return text.indexOf(prefix) === 0;\n    }\n\n    /**\n     * Determines whether a string contains a given suffix.\n     *\n     * @param {string} text - the string for to search for a suffix\n     * @param {string} suffix - the suffix to search for in the text given.\n     * @return {boolean} - boolean representing whether or not the\n     * string contains the suffix.\n     **/\n\n  }, {\n    key: 'endsWith',\n    value: function endsWith(text, suffix) {\n      return text.lastIndexOf(suffix) === text.length - suffix.length;\n    }\n\n    /**\n     * Get a random buffer representing a random 64 bit.\n     *\n     * @return {Buffer}  - returns a buffer representing a random 64 bit\n     * number.\n     **/\n\n  }, {\n    key: 'getRandom64',\n    value: function getRandom64() {\n      var randint = _xorshift2.default.randomint();\n      var buf = this.newBuffer(8);\n      buf.writeUInt32BE(randint[0], 0);\n      buf.writeUInt32BE(randint[1], 4);\n      return buf;\n    }\n\n    /**\n     * Get a random buffer representing a random 128 bit.\n     *\n     * @return {Buffer}  - returns a buffer representing a random 128 bit\n     * number.\n     **/\n\n  }, {\n    key: 'getRandom128',\n    value: function getRandom128() {\n      var randint1 = _xorshift2.default.randomint();\n      var randint2 = _xorshift2.default.randomint();\n      var buf = this.newBuffer(16);\n      buf.writeUInt32BE(randint1[0], 0);\n      buf.writeUInt32BE(randint1[1], 4);\n      buf.writeUInt32BE(randint2[0], 8);\n      buf.writeUInt32BE(randint2[1], 12);\n      return buf;\n    }\n\n    /**\n     * @param {string|number} numberValue - a string or number to be encoded\n     * as a 64 bit byte array.\n     * @return {Buffer} - returns a buffer representing the encoded string, or number.\n     **/\n\n  }, {\n    key: 'encodeInt64',\n    value: function encodeInt64(numberValue) {\n      return new _nodeInt2.default(numberValue).toBuffer();\n    }\n\n    /**\n     * @param {string} input - the input for which leading zeros should be removed.\n     * @return {string} - returns the input string without leading zeros.\n     **/\n\n  }, {\n    key: 'removeLeadingZeros',\n    value: function removeLeadingZeros(input) {\n      var counter = 0;\n      var length = input.length - 1;\n      for (var i = 0; i < length; i++) {\n        if (input.charAt(i) === '0') {\n          counter++;\n        } else {\n          break;\n        }\n      }\n\n      return input.substring(counter);\n    }\n  }, {\n    key: 'myIp',\n    value: function myIp() {\n      var myIp = '0.0.0.0';\n      var ifaces = _os2.default.networkInterfaces();\n      var keys = Object.keys(ifaces);\n      loop1: for (var i = 0; i < keys.length; i++) {\n        var iface = ifaces[keys[i]];\n        for (var j = 0; j < iface.length; j++) {\n          if (iface[j].family === 'IPv4' && !iface[j].internal) {\n            myIp = iface[j].address;\n            break loop1;\n          }\n        }\n      }\n      return myIp;\n    }\n  }, {\n    key: 'clone',\n    value: function clone(obj) {\n      var newObj = {};\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          newObj[key] = obj[key];\n        }\n      }\n\n      return newObj;\n    }\n  }, {\n    key: 'convertObjectToTags',\n    value: function convertObjectToTags(dict) {\n      var tags = [];\n      for (var key in dict) {\n        var value = dict[key];\n        if (Object.prototype.hasOwnProperty.call(dict, key)) {\n          tags.push({ key: key, value: value });\n        }\n      }\n\n      return tags;\n    }\n  }, {\n    key: 'httpGet',\n    value: function httpGet(host, port, path, success, error) {\n      _http2.default.get({\n        host: host,\n        port: port,\n        path: path\n      }, function (res) {\n        // explicitly treat incoming data as utf8 (avoids issues with multi-byte chars)\n        res.setEncoding('utf8');\n\n        // incrementally capture the incoming response body\n        var body = '';\n        res.on('data', function (chunk) {\n          body += chunk;\n        });\n\n        res.on('end', function () {\n          success(body);\n        });\n      }).on('error', function (err) {\n        error(err);\n      });\n    }\n\n    /**\n     * @param {string|number} input - a hex encoded string to store in the buffer.\n     * @return {Buffer} - returns a buffer representing the hex encoded string.\n     **/\n\n  }, {\n    key: 'newBufferFromHex',\n    value: function newBufferFromHex(input) {\n      var encoding = 'hex';\n      // check that 'Buffer.from' exists based on node's documentation\n      // https://nodejs.org/en/docs/guides/buffer-constructor-deprecation/#variant-3\n      if (Buffer.from && Buffer.from !== Uint8Array.from) {\n        return Buffer.from(input, encoding);\n      }\n      return new Buffer(input, encoding);\n    }\n\n    /**\n     * @param {number} input - a number of octets to allocate.\n     * @return {Buffer} - returns an empty buffer.\n     **/\n\n  }, {\n    key: 'newBuffer',\n    value: function newBuffer(size) {\n      if (Buffer.alloc) {\n        return Buffer.alloc(size);\n      }\n      var buffer = new Buffer(size);\n      buffer.fill(0);\n      return buffer;\n    }\n\n    /**\n     * Creates a callback function that only delegates to passed <code>callback</code>\n     * after <code>limit</code> invocations. Useful in types like CompositeReporter that\n     * needs to invoke the top level callback only after all delegates' close() methods\n     * are called.\n     */\n\n  }, {\n    key: 'countdownCallback',\n    value: function countdownCallback(limit, callback) {\n      var count = 0;\n      return function () {\n        count++;\n        if (count >= limit && callback) {\n          callback();\n        }\n      };\n    }\n  }]);\n\n  return Utils;\n}();\n\nexports.default = Utils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}