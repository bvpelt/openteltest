{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar AtomRW = require('./atoms').AtomRW;\nfunction nullWriteInto(destResult, val, buffer, offset) {\n  //return new WriteResult(null, offset);\n  return destResult.reset(null, offset);\n}\nfunction nullReadFrom(destResult, buffer, offset) {\n  //return new ReadResult(null, offset, null);\n  return destResult.reset(null, offset, null);\n}\nvar NullRW = AtomRW(0, nullReadFrom, nullWriteInto);\nmodule.exports = NullRW;","map":{"version":3,"names":["AtomRW","require","nullWriteInto","destResult","val","buffer","offset","reset","nullReadFrom","NullRW","module","exports"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/null.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nvar AtomRW = require('./atoms').AtomRW;\n\nfunction nullWriteInto(destResult, val, buffer, offset) {\n    //return new WriteResult(null, offset);\n    return destResult.reset(null, offset);\n}\n\nfunction nullReadFrom(destResult, buffer, offset) {\n    //return new ReadResult(null, offset, null);\n    return destResult.reset(null, offset, null);\n}\n\nvar NullRW = AtomRW(0, nullReadFrom, nullWriteInto);\n\nmodule.exports = NullRW;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC,CAACD,MAAM;AAEtC,SAASE,aAAaA,CAACC,UAAU,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACpD;EACA,OAAOH,UAAU,CAACI,KAAK,CAAC,IAAI,EAAED,MAAM,CAAC;AACzC;AAEA,SAASE,YAAYA,CAACL,UAAU,EAAEE,MAAM,EAAEC,MAAM,EAAE;EAC9C;EACA,OAAOH,UAAU,CAACI,KAAK,CAAC,IAAI,EAAED,MAAM,EAAE,IAAI,CAAC;AAC/C;AAEA,IAAIG,MAAM,GAAGT,MAAM,CAAC,CAAC,EAAEQ,YAAY,EAAEN,aAAa,CAAC;AAEnDQ,MAAM,CAACC,OAAO,GAAGF,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}