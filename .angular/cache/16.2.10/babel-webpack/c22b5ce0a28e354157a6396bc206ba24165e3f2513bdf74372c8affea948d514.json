{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n  // Allow the user to pass a Span instead of a SpanContext\n  if (spanContext instanceof span_1.default) {\n    spanContext = spanContext.context();\n  }\n  return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n  // Allow the user to pass a Span instead of a SpanContext\n  if (spanContext instanceof span_1.default) {\n    spanContext = spanContext.context();\n  }\n  return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;","map":{"version":3,"names":["Object","defineProperty","exports","value","Constants","require","reference_1","span_1","childOf","spanContext","default","context","REFERENCE_CHILD_OF","followsFrom","REFERENCE_FOLLOWS_FROM"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/opentracing/lib/functions.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Constants = require(\"./constants\");\nvar reference_1 = require(\"./reference\");\nvar span_1 = require(\"./span\");\n/**\n * Return a new REFERENCE_CHILD_OF reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_CHILD_OF reference pointing to `spanContext`\n */\nfunction childOf(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_CHILD_OF, spanContext);\n}\nexports.childOf = childOf;\n/**\n * Return a new REFERENCE_FOLLOWS_FROM reference.\n *\n * @param {SpanContext} spanContext - the parent SpanContext instance to\n *        reference.\n * @return a REFERENCE_FOLLOWS_FROM reference pointing to `spanContext`\n */\nfunction followsFrom(spanContext) {\n    // Allow the user to pass a Span instead of a SpanContext\n    if (spanContext instanceof span_1.default) {\n        spanContext = spanContext.context();\n    }\n    return new reference_1.default(Constants.REFERENCE_FOLLOWS_FROM, spanContext);\n}\nexports.followsFrom = followsFrom;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAIC,SAAS,GAAGC,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AACxC,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,OAAOA,CAACC,WAAW,EAAE;EAC1B;EACA,IAAIA,WAAW,YAAYF,MAAM,CAACG,OAAO,EAAE;IACvCD,WAAW,GAAGA,WAAW,CAACE,OAAO,CAAC,CAAC;EACvC;EACA,OAAO,IAAIL,WAAW,CAACI,OAAO,CAACN,SAAS,CAACQ,kBAAkB,EAAEH,WAAW,CAAC;AAC7E;AACAP,OAAO,CAACM,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,WAAWA,CAACJ,WAAW,EAAE;EAC9B;EACA,IAAIA,WAAW,YAAYF,MAAM,CAACG,OAAO,EAAE;IACvCD,WAAW,GAAGA,WAAW,CAACE,OAAO,CAAC,CAAC;EACvC;EACA,OAAO,IAAIL,WAAW,CAACI,OAAO,CAACN,SAAS,CAACU,sBAAsB,EAAEL,WAAW,CAAC;AACjF;AACAP,OAAO,CAACW,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}