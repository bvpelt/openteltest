{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n'use strict';\n\nvar assert = require('assert');\nvar errors = require('./errors');\nmodule.exports.BufferRW = BufferRW;\nmodule.exports.LengthResult = LengthResult;\nmodule.exports.WriteResult = WriteResult;\nmodule.exports.ReadResult = ReadResult;\nfunction BufferRW(byteLength, readFrom, writeInto, isPooled) {\n  if (!(this instanceof BufferRW)) {\n    return new BufferRW(byteLength, readFrom, writeInto, isPooled);\n  }\n\n  // istanbul ignore else\n  if (byteLength && readFrom && writeInto) {\n    assert(typeof byteLength === 'function', 'expected byteLength to be function');\n    assert(typeof readFrom === 'function', 'expected readFrom to be function');\n    assert(typeof writeInto === 'function', 'expected writeInto to be function');\n    // istanbul ignore else\n    if (isPooled) {\n      this.poolByteLength = byteLength;\n      this.poolReadFrom = readFrom;\n      this.poolWriteInto = writeInto;\n    } else {\n      this.byteLength = byteLength;\n      this.readFrom = readFrom;\n      this.writeInto = writeInto;\n    }\n  } else {\n    // Args weren't specified. Expect either pool methods or regular\n    // methods to be overriden.\n\n    assert(this.poolReadFrom !== BufferRW.prototype.poolReadFrom || this.readFrom !== BufferRW.prototype.readFrom, 'expected either poolReadFrom or readFrom to be overriden');\n    assert(this.poolWriteInto !== BufferRW.prototype.poolWriteInto || this.writeInto !== BufferRW.prototype.writeInto, 'expected either poolWriteInto or writeInto to be overriden');\n    assert(this.poolByteLength !== BufferRW.prototype.poolByteLength || this.byteLength !== BufferRW.prototype.byteLength, 'expected either poolByteLength or byteLength to be overriden');\n  }\n}\nBufferRW.prototype.readFrom = function readFrom(arg1, arg2, arg3) {\n  assert(this.poolReadFrom !== BufferRW.prototype.poolReadFrom, 'poolReadFrom is overridden');\n  var readResult = new ReadResult();\n  this.poolReadFrom(readResult, arg1, arg2, arg3);\n  return readResult;\n};\nBufferRW.prototype.writeInto = function writeInto(value, buffer, offset) {\n  assert(this.poolWriteInto !== BufferRW.prototype.poolWriteInto, 'poolWriteInto is overridden');\n  var writeResult = new WriteResult();\n  this.poolWriteInto(writeResult, value, buffer, offset);\n  return writeResult;\n};\nBufferRW.prototype.byteLength = function byteLength(arg1, arg2, arg3) {\n  assert(this.poolbyteLength !== BufferRW.prototype.poolByteLength, 'poolByteLength is overridden');\n  var lengthResult = new LengthResult();\n  this.poolByteLength(lengthResult, arg1, arg2, arg3);\n  return lengthResult;\n};\n\n// istanbul ignore next\nBufferRW.prototype.poolReadFrom = function poolReadFrom(destResult, arg1, arg2, arg3) {\n  var res = this.readFrom(arg1, arg2, arg3);\n  return destResult.copyFrom(res);\n};\n\n// istanbul ignore next\nBufferRW.prototype.poolWriteInto = function poolWriteInto(destResult, value, buffer, offset) {\n  var res = this.writeInto(value, buffer, offset);\n  return destResult.copyFrom(res);\n};\n\n// istanbul ignore next\nBufferRW.prototype.poolByteLength = function poolByteLength(destResult, arg1, arg2, arg3) {\n  var res = this.byteLength(arg1, arg2, arg3);\n  return destResult.copyFrom(res);\n};\nfunction LengthResult(err, length) {\n  this.err = err || null;\n  this.length = length || 0;\n}\nLengthResult.prototype.reset = function reset(err, length) {\n  this.err = err;\n  this.length = length;\n  return this;\n};\n\n// istanbul ignore next\nLengthResult.prototype.copyFrom = function copyFrom(srcRes) {\n  this.err = srcRes.err;\n  this.length = srcRes.length;\n  return this;\n};\n\n// istanbul ignore next\nLengthResult.error = function error(err, length) {\n  return new LengthResult(err, length);\n};\n\n// istanbul ignore next\nLengthResult.just = function just(length) {\n  return new LengthResult(null, length);\n};\nfunction WriteResult(err, offset) {\n  this.err = err || null;\n  this.offset = offset || 0;\n}\nWriteResult.prototype.reset = function reset(err, offset) {\n  this.err = err;\n  this.offset = offset;\n  return this;\n};\n\n// istanbul ignore next\nWriteResult.prototype.copyFrom = function copyFrom(srcResult) {\n  this.err = srcResult.err;\n  this.offset = srcResult.offset;\n};\n\n// istanbul ignore next\nWriteResult.error = function error(err, offset) {\n  return new WriteResult(err, offset);\n};\n\n// istanbul ignore next\n/*jshint maxparams:6*/\nWriteResult.poolRangedError = function poolRangedError(destResult, err, start, end, value) {\n  assert(typeof destResult === 'object' && destResult.constructor.name === 'WriteResult');\n  err.offest = start;\n  err.endOffset = end;\n  return destResult.reset(err, start, value);\n};\n\n// istanbul ignore next\nWriteResult.rangedError = function rangedError(err, start, end, value) {\n  return WriteResult.poolRangedError(new WriteResult(), start, end, value);\n};\n\n// istanbul ignore next\nWriteResult.just = function just(offset) {\n  return new WriteResult(null, offset);\n};\n\n// istanbul ignore next\nWriteResult.shortError = function shortError(expected, actual, offset) {\n  return WriteResult.poolShortError(new WriteResult(), expected, actual, offset);\n};\n\n// istanbul ignore next\nWriteResult.poolShortError = function poolShortError(destResult, expected, actual, offset) {\n  assert(typeof destResult === 'object' && destResult.constructor.name === 'WriteResult');\n  return destResult.reset(new errors.ShortBuffer({\n    expected: expected,\n    actual: actual,\n    offset: offset\n  }), offset);\n};\nfunction ReadResult(err, offset, value) {\n  this.err = err || null;\n  this.offset = offset || 0;\n  // istanbul ignore next\n  this.value = value === undefined ? null : value;\n}\n\n// istanbul ignore next\nReadResult.prototype.copyFrom = function copyFrom(srcResult) {\n  this.err = srcResult.err;\n  this.offset = srcResult.offset;\n  this.value = srcResult.value;\n  return this;\n};\n\n// istanbul ignore next\nReadResult.prototype.reset = function reset(err, offset, value) {\n  this.err = err;\n  this.offset = offset;\n  this.value = value;\n  return this;\n};\n\n// istanbul ignore next\nReadResult.error = function error(err, offset, value) {\n  return new ReadResult(err, offset, value);\n};\n\n// istanbul ignore next\nReadResult.poolRangedError = function poolRangedError(destResult, err, start, end, value) {\n  assert(typeof destResult === 'object' && destResult.constructor.name === 'ReadResult');\n  err.offest = start;\n  err.endOffset = end;\n  return destResult.reset(err, start, value);\n};\n\n// istanbul ignore next\nReadResult.rangedError = function rangedError(err, start, end, value) {\n  return ReadResult.poolRangedError(new ReadResult(), err, start, end, value);\n};\n\n// istanbul ignore next\nReadResult.just = function just(offset, value) {\n  return new ReadResult(null, offset, value);\n};\n\n// istanbul ignore next\nReadResult.shortError = function shortError(destResult, expected, actual, offset, endOffset) {\n  return ReadResult.poolShortError(new ReadResult(), expected, actual, offset, endOffset);\n};\nReadResult.poolShortError = function poolShortError(destResult, expected, actual, offset, endOffset) {\n  assert(typeof destResult === 'object' && destResult.constructor.name === 'ReadResult');\n  var err;\n  if (endOffset === undefined) {\n    err = new errors.ShortBuffer({\n      expected: expected,\n      actual: actual,\n      offset: offset\n    });\n  } else {\n    err = new errors.ShortBufferRanged({\n      expected: expected,\n      actual: actual,\n      offset: offset,\n      endOffset: endOffset\n    });\n  }\n  return destResult.reset(err, offset);\n};","map":{"version":3,"names":["assert","require","errors","module","exports","BufferRW","LengthResult","WriteResult","ReadResult","byteLength","readFrom","writeInto","isPooled","poolByteLength","poolReadFrom","poolWriteInto","prototype","arg1","arg2","arg3","readResult","value","buffer","offset","writeResult","poolbyteLength","lengthResult","destResult","res","copyFrom","err","length","reset","srcRes","error","just","srcResult","poolRangedError","start","end","constructor","name","offest","endOffset","rangedError","shortError","expected","actual","poolShortError","ShortBuffer","undefined","ShortBufferRanged"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/base.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n'use strict';\n\nvar assert = require('assert');\n\nvar errors = require('./errors');\n\nmodule.exports.BufferRW = BufferRW;\nmodule.exports.LengthResult = LengthResult;\nmodule.exports.WriteResult = WriteResult;\nmodule.exports.ReadResult = ReadResult;\n\nfunction BufferRW(byteLength, readFrom, writeInto, isPooled) {\n    if (!(this instanceof BufferRW)) {\n        return new BufferRW(byteLength, readFrom, writeInto, isPooled);\n    }\n\n    // istanbul ignore else\n    if (byteLength && readFrom && writeInto) {\n        assert(typeof byteLength === 'function', 'expected byteLength to be function');\n        assert(typeof readFrom === 'function', 'expected readFrom to be function');\n        assert(typeof writeInto === 'function', 'expected writeInto to be function');\n        // istanbul ignore else\n        if (isPooled) {\n            this.poolByteLength = byteLength;\n            this.poolReadFrom = readFrom;\n            this.poolWriteInto = writeInto;\n        } else {\n            this.byteLength = byteLength;\n            this.readFrom = readFrom;\n            this.writeInto = writeInto;\n        }\n    } else {\n        // Args weren't specified. Expect either pool methods or regular\n        // methods to be overriden.\n\n        assert(\n            this.poolReadFrom !== BufferRW.prototype.poolReadFrom ||\n            this.readFrom !== BufferRW.prototype.readFrom,\n            'expected either poolReadFrom or readFrom to be overriden'\n        );\n        assert(\n            this.poolWriteInto !== BufferRW.prototype.poolWriteInto ||\n            this.writeInto !== BufferRW.prototype.writeInto,\n            'expected either poolWriteInto or writeInto to be overriden'\n        );\n        assert(\n            this.poolByteLength !== BufferRW.prototype.poolByteLength ||\n            this.byteLength !== BufferRW.prototype.byteLength,\n            'expected either poolByteLength or byteLength to be overriden'\n        );\n    }\n}\n\nBufferRW.prototype.readFrom = function readFrom(arg1, arg2, arg3) {\n    assert(this.poolReadFrom !== BufferRW.prototype.poolReadFrom, 'poolReadFrom is overridden');\n    var readResult = new ReadResult();\n    this.poolReadFrom(readResult, arg1, arg2, arg3);\n    return readResult;\n};\n\nBufferRW.prototype.writeInto = function writeInto(value, buffer, offset) {\n    assert(this.poolWriteInto !== BufferRW.prototype.poolWriteInto, 'poolWriteInto is overridden');\n    var writeResult = new WriteResult();\n    this.poolWriteInto(writeResult, value, buffer, offset);\n    return writeResult;\n};\n\nBufferRW.prototype.byteLength = function byteLength(arg1, arg2, arg3) {\n    assert(this.poolbyteLength !== BufferRW.prototype.poolByteLength, 'poolByteLength is overridden');\n    var lengthResult = new LengthResult();\n    this.poolByteLength(lengthResult, arg1, arg2, arg3);\n    return lengthResult;\n};\n\n// istanbul ignore next\nBufferRW.prototype.poolReadFrom = function poolReadFrom(destResult, arg1, arg2, arg3) {\n    var res = this.readFrom(arg1, arg2, arg3);\n    return destResult.copyFrom(res);\n};\n\n// istanbul ignore next\nBufferRW.prototype.poolWriteInto = function poolWriteInto(destResult, value, buffer, offset) {\n    var res = this.writeInto(value, buffer, offset);\n    return destResult.copyFrom(res);\n};\n\n// istanbul ignore next\nBufferRW.prototype.poolByteLength = function poolByteLength(destResult, arg1, arg2, arg3) {\n    var res = this.byteLength(arg1, arg2, arg3);\n    return destResult.copyFrom(res);\n};\n\nfunction LengthResult(err, length) {\n    this.err = err || null;\n    this.length = length || 0;\n}\n\nLengthResult.prototype.reset = function reset(err, length) {\n    this.err = err;\n    this.length = length;\n    return this;\n};\n\n// istanbul ignore next\nLengthResult.prototype.copyFrom = function copyFrom(srcRes) {\n    this.err = srcRes.err;\n    this.length = srcRes.length;\n    return this;\n};\n\n// istanbul ignore next\nLengthResult.error = function error(err, length) {\n    return new LengthResult(err, length);\n};\n\n// istanbul ignore next\nLengthResult.just = function just(length) {\n    return new LengthResult(null, length);\n};\n\nfunction WriteResult(err, offset) {\n    this.err = err || null;\n    this.offset = offset || 0;\n}\n\nWriteResult.prototype.reset = function reset(err, offset) {\n    this.err = err;\n    this.offset = offset;\n    return this;\n};\n\n// istanbul ignore next\nWriteResult.prototype.copyFrom = function copyFrom(srcResult) {\n    this.err = srcResult.err;\n    this.offset = srcResult.offset;\n};\n\n// istanbul ignore next\nWriteResult.error = function error(err, offset) {\n    return new WriteResult(err, offset);\n};\n\n// istanbul ignore next\n/*jshint maxparams:6*/\nWriteResult.poolRangedError = function poolRangedError(destResult, err, start, end, value) {\n    assert(typeof destResult === 'object' && destResult.constructor.name === 'WriteResult');\n\n    err.offest = start;\n    err.endOffset = end;\n    return destResult.reset(err, start, value);\n};\n\n// istanbul ignore next\nWriteResult.rangedError = function rangedError(err, start, end, value) {\n    return WriteResult.poolRangedError(new WriteResult(), start, end, value);\n};\n\n// istanbul ignore next\nWriteResult.just = function just(offset) {\n    return new WriteResult(null, offset);\n};\n\n\n// istanbul ignore next\nWriteResult.shortError = function shortError(expected, actual, offset) {\n    return WriteResult.poolShortError(new WriteResult(), expected, actual, offset);\n};\n\n// istanbul ignore next\nWriteResult.poolShortError = function poolShortError(destResult, expected, actual, offset) {\n    assert(typeof destResult === 'object' && destResult.constructor.name === 'WriteResult');\n\n    return destResult.reset(new errors.ShortBuffer({\n        expected: expected,\n        actual: actual,\n        offset: offset\n    }), offset);\n};\n\nfunction ReadResult(err, offset, value) {\n    this.err = err || null;\n    this.offset = offset || 0;\n    // istanbul ignore next\n    this.value = value === undefined ? null : value;\n}\n\n// istanbul ignore next\nReadResult.prototype.copyFrom = function copyFrom(srcResult) {\n    this.err = srcResult.err;\n    this.offset = srcResult.offset;\n    this.value = srcResult.value;\n    return this;\n};\n\n// istanbul ignore next\nReadResult.prototype.reset = function reset(err, offset, value) {\n    this.err = err;\n    this.offset = offset;\n    this.value = value;\n    return this;\n};\n\n// istanbul ignore next\nReadResult.error = function error(err, offset, value) {\n    return new ReadResult(err, offset, value);\n};\n\n// istanbul ignore next\nReadResult.poolRangedError = function poolRangedError(destResult, err, start, end, value) {\n    assert(typeof destResult === 'object' && destResult.constructor.name === 'ReadResult');\n\n    err.offest = start;\n    err.endOffset = end;\n    return destResult.reset(err, start, value);\n};\n\n// istanbul ignore next\nReadResult.rangedError = function rangedError(err, start, end, value) {\n    return ReadResult.poolRangedError(new ReadResult(), err, start, end, value);\n};\n\n// istanbul ignore next\nReadResult.just = function just(offset, value) {\n    return new ReadResult(null, offset, value);\n};\n\n// istanbul ignore next\nReadResult.shortError = function shortError(destResult, expected, actual, offset, endOffset) {\n    return ReadResult.poolShortError(new ReadResult(), expected, actual, offset, endOffset);\n};\n\nReadResult.poolShortError = function poolShortError(destResult, expected, actual, offset, endOffset) {\n    assert(typeof destResult === 'object' && destResult.constructor.name === 'ReadResult');\n    var err;\n\n    if (endOffset === undefined) {\n        err = new errors.ShortBuffer({\n            expected: expected,\n            actual: actual,\n            offset: offset\n        }); \n    } else {\n        err = new errors.ShortBufferRanged({\n            expected: expected,\n            actual: actual,\n            offset: offset,\n            endOffset: endOffset\n        });\n    }\n\n    return destResult.reset(err, offset);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}