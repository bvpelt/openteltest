{"ast":null,"code":"// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = StructRW;\nvar inherits = require('util').inherits;\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\nfunction StructRW(cons, fields, opts) {\n  if (!(this instanceof StructRW)) {\n    return new StructRW(cons, fields);\n  }\n  if (typeof cons === 'object') {\n    fields = cons;\n    cons = null;\n  }\n  var i;\n  opts = opts || {};\n  this.cons = cons || Object;\n  this.fields = [];\n  // TODO: useful to have a StructRWField prototype?\n  if (Array.isArray(fields)) {\n    this.fields.push.apply(this.fields, fields);\n  } else {\n    var fieldNames = Object.keys(fields);\n    for (i = 0; i < fieldNames.length; ++i) {\n      var field = {};\n      field.name = fieldNames[i];\n      field.rw = fields[field.name];\n      this.fields.push(field);\n    }\n  }\n  this.namedFields = {};\n  for (i = 0; i < this.fields.length; ++i) {\n    if (this.fields[i].name) {\n      this.namedFields[this.fields[i].name] = this.fields[i];\n    }\n  }\n}\ninherits(StructRW, BufferRW);\nStructRW.prototype.poolByteLength = function poolByteLength(destResult, obj) {\n  var length = 0;\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i];\n    if (field.name && !obj.hasOwnProperty(field.name)) {\n      return destResult.reset(errors.MissingStructField({\n        field: field.name,\n        struct: this.cons.name\n      }), null);\n    }\n    var value = field.name && obj && obj[field.name];\n    if (field.call) {\n      if (field.call.poolByteLength) {\n        field.call.poolByteLength(destResult, obj);\n      } else if (field.call.byteLength) {\n        var res = field.call.byteLength(obj);\n        destResult.copyFrom(res);\n      } else {\n        continue;\n      }\n    } else {\n      field.rw.poolByteLength(destResult, value);\n    }\n    if (destResult.err) return destResult;\n    length += destResult.length;\n  }\n  return destResult.reset(null, length);\n};\nStructRW.prototype.poolWriteInto = function poolWriteInto(destResult, obj, buffer, offset) {\n  destResult.reset(null, offset);\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i];\n    if (field.name && !obj.hasOwnProperty(field.name)) {\n      return destResult.reset(errors.MissingStructField({\n        field: field.name,\n        struct: this.cons.name\n      }), null);\n    }\n    var value = field.name && obj[field.name];\n    if (field.call) {\n      if (field.call.poolWriteInto) {\n        field.call.poolWriteInto(destResult, obj, buffer, offset);\n      } else if (field.call.writeInto) {\n        var res = field.call.writeInto(obj, buffer, offset);\n        destResult.copyFrom(res);\n      } else {\n        continue;\n      }\n    } else {\n      field.rw.poolWriteInto(destResult, value, buffer, offset);\n    }\n    if (destResult.err) return destResult;\n    offset = destResult.offset;\n  }\n  return destResult;\n};\nvar readRes = new ReadResult();\nStructRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n  if (typeof destResult.value === 'object' && destResult.value !== null) {\n    if (destResult.value.constructor !== this.cons) {\n      destResult.value = new this.cons();\n    }\n  } else {\n    destResult.value = new this.cons();\n  }\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i];\n    if (field.call) {\n      if (field.call.poolReadFrom) {\n        field.call.poolReadFrom(readRes, destResult.value, buffer, offset);\n      } else if (field.call.readFrom) {\n        var res = field.call.readFrom(destResult.value, buffer, offset);\n        readRes.copyFrom(res);\n      } else {\n        continue;\n      }\n    } else {\n      field.rw.poolReadFrom(readRes, buffer, offset);\n    }\n    if (readRes.err) return destResult.copyFrom(readRes);\n    offset = readRes.offset;\n    if (field.name) {\n      destResult.value[field.name] = readRes.value;\n    }\n  }\n  return destResult.reset(null, offset, destResult.value);\n};","map":{"version":3,"names":["module","exports","StructRW","inherits","require","ReadResult","BufferRW","errors","cons","fields","opts","i","Object","Array","isArray","push","apply","fieldNames","keys","length","field","name","rw","namedFields","prototype","poolByteLength","destResult","obj","hasOwnProperty","reset","MissingStructField","struct","value","call","byteLength","res","copyFrom","err","poolWriteInto","buffer","offset","writeInto","readRes","poolReadFrom","constructor","readFrom"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/bufrw/struct.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nmodule.exports = StructRW;\n\nvar inherits = require('util').inherits;\n\nvar ReadResult = require('./base').ReadResult;\nvar BufferRW = require('./base').BufferRW;\nvar errors = require('./errors');\n\nfunction StructRW(cons, fields, opts) {\n    if (!(this instanceof StructRW)) {\n        return new StructRW(cons, fields);\n    }\n    if (typeof cons === 'object') {\n        fields = cons;\n        cons = null;\n    }\n    var i;\n    opts = opts || {};\n    this.cons = cons || Object;\n    this.fields = [];\n    // TODO: useful to have a StructRWField prototype?\n    if (Array.isArray(fields)) {\n        this.fields.push.apply(this.fields, fields);\n    } else {\n        var fieldNames = Object.keys(fields);\n        for (i = 0; i < fieldNames.length; ++i) {\n            var field = {};\n            field.name = fieldNames[i];\n            field.rw = fields[field.name];\n            this.fields.push(field);\n        }\n    }\n    this.namedFields = {};\n    for (i = 0; i < this.fields.length; ++i) {\n        if (this.fields[i].name) {\n            this.namedFields[this.fields[i].name] = this.fields[i];\n        }\n    }\n}\ninherits(StructRW, BufferRW);\n\nStructRW.prototype.poolByteLength = function poolByteLength(destResult, obj) {\n    var length = 0;\n    for (var i = 0; i < this.fields.length; i++) {\n        var field = this.fields[i];\n\n        if (field.name && !obj.hasOwnProperty(field.name)) {\n            return destResult.reset(errors.MissingStructField({\n                field: field.name,\n                struct: this.cons.name\n            }), null);\n        }\n\n        var value = field.name && obj && obj[field.name];\n        if (field.call) {\n            if (field.call.poolByteLength) {\n                field.call.poolByteLength(destResult, obj);\n            } else if (field.call.byteLength) {\n                var res = field.call.byteLength(obj);\n                destResult.copyFrom(res);\n            } else {\n                continue;\n            }\n        } else {\n            field.rw.poolByteLength(destResult, value);\n        }\n        if (destResult.err) return destResult;\n        length += destResult.length;\n    }\n    return destResult.reset(null, length);\n};\n\nStructRW.prototype.poolWriteInto = function poolWriteInto(destResult, obj, buffer, offset) {\n    destResult.reset(null, offset);\n    for (var i = 0; i < this.fields.length; i++) {\n        var field = this.fields[i];\n\n        if (field.name && !obj.hasOwnProperty(field.name)) {\n            return destResult.reset(errors.MissingStructField({\n                field: field.name,\n                struct: this.cons.name\n            }), null);\n        }\n\n        var value = field.name && obj[field.name];\n        if (field.call) {\n            if (field.call.poolWriteInto) {\n                field.call.poolWriteInto(destResult, obj, buffer, offset);\n            } else if (field.call.writeInto) {\n                var res = field.call.writeInto(obj, buffer, offset);\n                destResult.copyFrom(res);\n            } else {\n                continue;\n            }\n        } else {\n            field.rw.poolWriteInto(destResult, value, buffer, offset);\n        }\n        if (destResult.err) return destResult;\n        offset = destResult.offset;\n    }\n    return destResult;\n};\n\nvar readRes = new ReadResult();\nStructRW.prototype.poolReadFrom = function poolReadFrom(destResult, buffer, offset) {\n    if (typeof destResult.value === 'object' && destResult.value !== null) {\n        if (destResult.value.constructor !== this.cons) {\n            destResult.value = new this.cons();\n        }\n    } else {\n        destResult.value = new this.cons();\n    }\n    for (var i = 0; i < this.fields.length; i++) {\n        var field = this.fields[i];\n        if (field.call) {\n            if (field.call.poolReadFrom) {\n                field.call.poolReadFrom(readRes, destResult.value, buffer, offset);\n            } else if (field.call.readFrom) {\n                var res = field.call.readFrom(destResult.value, buffer, offset);\n                readRes.copyFrom(res);\n            } else {\n                continue;\n            }\n        } else {\n            field.rw.poolReadFrom(readRes, buffer, offset);\n        }\n        if (readRes.err) return destResult.copyFrom(readRes);\n        offset = readRes.offset;\n        if (field.name) {\n            destResult.value[field.name] = readRes.value;\n        }\n    }\n    return destResult.reset(null, offset, destResult.value);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}