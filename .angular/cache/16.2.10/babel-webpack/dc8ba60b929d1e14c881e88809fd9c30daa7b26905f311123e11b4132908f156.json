{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nexport function toAttributes(attributes) {\n  return Object.keys(attributes).map(function (key) {\n    return toKeyValue(key, attributes[key]);\n  });\n}\nexport function toKeyValue(key, value) {\n  return {\n    key: key,\n    value: toAnyValue(value)\n  };\n}\nexport function toAnyValue(value) {\n  var t = typeof value;\n  if (t === 'string') return {\n    stringValue: value\n  };\n  if (t === 'number') {\n    if (!Number.isInteger(value)) return {\n      doubleValue: value\n    };\n    return {\n      intValue: value\n    };\n  }\n  if (t === 'boolean') return {\n    boolValue: value\n  };\n  if (value instanceof Uint8Array) return {\n    bytesValue: value\n  };\n  if (Array.isArray(value)) return {\n    arrayValue: {\n      values: value.map(toAnyValue)\n    }\n  };\n  if (t === 'object' && value != null) return {\n    kvlistValue: {\n      values: Object.entries(value).map(function (_a) {\n        var _b = __read(_a, 2),\n          k = _b[0],\n          v = _b[1];\n        return toKeyValue(k, v);\n      })\n    }\n  };\n  return {};\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","toAttributes","attributes","Object","keys","map","key","toKeyValue","toAnyValue","t","stringValue","Number","isInteger","doubleValue","intValue","boolValue","Uint8Array","bytesValue","Array","isArray","arrayValue","values","kvlistValue","entries","_a","_b","k","v"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/otlp-transformer/build/esm/common/internal.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nexport function toAttributes(attributes) {\n    return Object.keys(attributes).map(function (key) { return toKeyValue(key, attributes[key]); });\n}\nexport function toKeyValue(key, value) {\n    return {\n        key: key,\n        value: toAnyValue(value),\n    };\n}\nexport function toAnyValue(value) {\n    var t = typeof value;\n    if (t === 'string')\n        return { stringValue: value };\n    if (t === 'number') {\n        if (!Number.isInteger(value))\n            return { doubleValue: value };\n        return { intValue: value };\n    }\n    if (t === 'boolean')\n        return { boolValue: value };\n    if (value instanceof Uint8Array)\n        return { bytesValue: value };\n    if (Array.isArray(value))\n        return { arrayValue: { values: value.map(toAnyValue) } };\n    if (t === 'object' && value != null)\n        return {\n            kvlistValue: {\n                values: Object.entries(value).map(function (_a) {\n                    var _b = __read(_a, 2), k = _b[0], v = _b[1];\n                    return toKeyValue(k, v);\n                }),\n            },\n        };\n    return {};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}