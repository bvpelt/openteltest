{"ast":null,"code":"/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Resource } from '../Resource';\nvar NoopDetectorSync = /** @class */function () {\n  function NoopDetectorSync() {}\n  NoopDetectorSync.prototype.detect = function () {\n    return new Resource({});\n  };\n  return NoopDetectorSync;\n}();\nexport { NoopDetectorSync };\nexport var noopDetectorSync = new NoopDetectorSync();","map":{"version":3,"names":["Resource","NoopDetectorSync","prototype","detect","noopDetectorSync"],"sources":["/home/bvpelt/Develop/openteltest/node_modules/@opentelemetry/instrumentation-xml-http-request/node_modules/@opentelemetry/sdk-trace-web/node_modules/@opentelemetry/sdk-trace-base/node_modules/@opentelemetry/resources/build/esm/detectors/NoopDetectorSync.js"],"sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Resource } from '../Resource';\nvar NoopDetectorSync = /** @class */ (function () {\n    function NoopDetectorSync() {\n    }\n    NoopDetectorSync.prototype.detect = function () {\n        return new Resource({});\n    };\n    return NoopDetectorSync;\n}());\nexport { NoopDetectorSync };\nexport var noopDetectorSync = new NoopDetectorSync();\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,aAAa;AACtC,IAAIC,gBAAgB,GAAG,aAAe,YAAY;EAC9C,SAASA,gBAAgBA,CAAA,EAAG,CAC5B;EACAA,gBAAgB,CAACC,SAAS,CAACC,MAAM,GAAG,YAAY;IAC5C,OAAO,IAAIH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC;EACD,OAAOC,gBAAgB;AAC3B,CAAC,CAAC,CAAE;AACJ,SAASA,gBAAgB;AACzB,OAAO,IAAIG,gBAAgB,GAAG,IAAIH,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}